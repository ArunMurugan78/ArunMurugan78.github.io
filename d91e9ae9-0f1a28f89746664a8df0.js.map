{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","FirebaseAuthTokenProvider","appName_","firebaseOptions_","authProvider_","_this","auth_","getImmediate","optional","then","auth","getToken","forceRefresh","catch","code","Promise","reject","resolve","addTokenChangeListener","listener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","EmulatorAdminTokenProvider","accessToken","EMULATOR_AUTH_TOKEN","FORGE_DOMAIN_RE","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","_a","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","undefined","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE","VisibilityMonitor","hidden","visibilityChange","visible_","visible","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","action","onResponse","curReqNum","r","deferred","request","p","_path","q","_queryObject","outstandingGet","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","interrupt","resume","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","isEmpty","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","lastPushTime","lastRandChars","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","tree","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor$1","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childServerCache","childWritesCache","childOperation","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","last","validationPathPush","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","Repo","forceRestClient_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","creatorFunction","statsReporter_","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","sparseSnapshotTreeForget","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","nodeQueue","order","to","includeSelf","treeForEachAncestor","repoAbortTransactionsOnNode","treeForEachDescendant","childrenFirst","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCB_1","cb_1","otherKeys","thisKeys","otherCount","otherKey","thisKey","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","apiName","useDatabaseEmulator","repoManagerApplyEmulatorSettings","goOffline","goOnline","enableLogging$1","SERVER_TIMESTAMP","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","OnDisconnect$1","_delegate","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","_increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","_forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-0f1a28f89746664a8df0.js","sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\nvar name = \"@firebase/database\";\nvar version = \"0.9.10\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key - The key to save the value under\r\n   * @param value - The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @returns The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @returns {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nfunction errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n}\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\n    var _this = this;\n\n    this.appName_ = appName_;\n    this.firebaseOptions_ = firebaseOptions_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.appName_ + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host - Hostname portion of the url for the repo\r\n   * @param secure - Whether or not this repo is accessed over ssl\r\n   * @param namespace - The namespace represented by the repo\r\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey - Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function get() {\n      return this._host;\n    },\n    set: function set(newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId - An identifier for this connection, used for logging\r\n   * @param repoInfo - The info for the endpoint to send data to.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId - Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data - The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId - identifier for this transport\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param applicationId - The Firebase App ID for this project.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo - The info for the websocket endpoint.\r\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n   * @returns connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage - Callback when messages arrive\r\n   * @param onDisconnect - Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount - The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @returns Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess - The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data - The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str - String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo - Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @returns The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @returns The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg - An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake - The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token - The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString - Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @returns The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @returns True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @returns true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path - Initial Path.\r\n   * @param errorPrefix_ - Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param applicationId_ - The Firebase App ID for this project\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query._queryIdentifier;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n\n        var indexPath = query._path.toString();\n\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query._path.toString();\n\n    var queryId = query._queryIdentifier;\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @returns A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @returns a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node - Node to iterate.\r\n   * @param isReverse_ - Whether or not to iterate in reverse\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key - Key associated with this node.\r\n   * @param value - Value associated with this node.\r\n   * @param color - Whether this node is red.\r\n   * @param left - Left child.\r\n   * @param right - Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key - New key for the node, or null.\r\n   * @param value - New value for the node, or null.\r\n   * @param color - New color for the node, or null.\r\n   * @param left - New left child for the node, or null.\r\n   * @param right - New right child for the node, or null.\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @returns The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @returns The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key - Key to insert.\r\n   * @param value - Value to insert.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key - The key of the item to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @returns Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @returns New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @returns New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @returns New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @returns Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @returns True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @returns The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @param comparator - Comparator.\r\n   * @returns New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @returns The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @returns True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action - Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @returns True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @returns Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ - Key comparator.\r\n   * @param root_ - Optional root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key - Key to be added.\r\n   * @param value - Value to be added.\r\n   * @returns New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key - The key to remove.\r\n   * @returns New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key - The key to look up.\r\n   * @returns The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key - The key to find the predecessor of\r\n   * @returns The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @returns True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @returns The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @returns The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @returns The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @returns True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @returns The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ - The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ - The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @returns The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n\n  LeafNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ - List of children of this node..\r\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @returns String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @returns True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @returns True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ - Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ - A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\n      return query._path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query._path.toString();\n\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\n\n    var pathString = query._path.toString();\n\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath - The remainder of the path\r\n   * @param predicate - The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @returns The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath - Path to set value at.\r\n   * @param toSet - Value to set.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath - Path to value to remove.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath - Path to get value for.\r\n   * @returns Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath - Path to replace subtree for.\r\n   * @param newTree - New tree.\r\n   * @returns Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f - A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function filter(write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_._queryParams;\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function get() {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query._queryParams.loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query._path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query._queryIdentifier;\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query._queryIdentifier;\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query._queryParams.loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query._queryParams.loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query._queryParams;\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query._queryParams.loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor$1;\n\nfunction syncTreeSetReferenceConstructor(val) {\n  assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\n  referenceConstructor$1 = val;\n}\n\nfunction syncTreeGetReferenceConstructor() {\n  assert(referenceConstructor$1, 'Reference.ts has not been loaded');\n  return referenceConstructor$1;\n}\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query._path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query._queryIdentifier === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query._queryParams.loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query._path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query._path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function hashFn() {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function onComplete(status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query._path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name - Optional name of the node.\r\n   * @param parent - Optional parent node.\r\n   * @param node - Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @returns Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, value, path, optional) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, 'priority') + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentName, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentName, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentName) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentName, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, 'url') + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentName, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @returns The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo, appId, authOverride) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query._path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function stopListening() {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function stopListening(query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON$1(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON$1(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON$1(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON$1(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON$1(payload);\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n    return Promise.resolve(node);\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON$1(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON$1(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON$1(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Initialize transaction.\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      var _loop_1 = function _loop_1(i) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          callbacks.push(function () {\n            return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\n          });\n        }\n\n        queue[i].unwatcher();\n      };\n\n      for (var i = 0; i < queue.length; i++) {\n        _loop_1(i);\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n              queue[i].status = 4\n              /* NEEDS_ABORT */\n              ;\n            } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  var _loop_2 = function _loop_2(i) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else if (transaction.status === 0\n    /* RUN */\n    ) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = repoGenerateServerValues(repo);\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n          }\n        }\n      }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(function () {\n            return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\n          });\n        } else {\n          callbacks.push(function () {\n            return queue[i].onComplete(new Error(abortReason), false, null);\n          });\n        }\n      }\n    }\n  };\n\n  for (var i = 0; i < queue.length; i++) {\n    _loop_2(i);\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n          queue[to] = queue[from];\n          to++;\n        }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = 3\n          /* SENT_NEEDS_ABORT */\n          ;\n          queue[i].abortReason = 'set';\n        } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @returns key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration - The function to call to with the event data. User provided\r\n   * @param snapshot - The data backing the event\r\n   * @param prevName - Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.ref;\n\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  };\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\n\n\nvar CallbackContext =\n/** @class */\nfunction () {\n  function CallbackContext(snapshotCallback, cancelCallback) {\n    this.snapshotCallback = snapshotCallback;\n    this.cancelCallback = cancelCallback;\n  }\n\n  CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  };\n\n  CallbackContext.prototype.onCancel = function (error) {\n    assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\n    return this.cancelCallback.call(null, error);\n  };\n\n  Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\n    get: function get() {\n      return !!this.cancelCallback;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CallbackContext.prototype.matches = function (other) {\n    return this.snapshotCallback === other.snapshotCallback || this.snapshotCallback.userCallback === other.snapshotCallback.userCallback && this.snapshotCallback.context === other.snapshotCallback.context;\n  };\n\n  return CallbackContext;\n}();\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function OnDisconnect(_repo, _path) {\n    this._repo = _repo;\n    this._path = _path;\n  }\n  /**\r\n   * Cancels all previously queued `onDisconnect()` set or update events for this\r\n   * location and all children.\r\n   *\r\n   * If a write has been queued for this location via a `set()` or `update()` at a\r\n   * parent location, the write at this location will be canceled, though writes\r\n   * to sibling locations will still occur.\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.cancel = function () {\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is deleted when the client is disconnected\r\n   * (due to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * @returns Resolves when synchronization to the server is complete.\r\n   */\n\n\n  OnDisconnect.prototype.remove = function () {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value when the\r\n   * client is disconnected (due to closing the browser, navigating to a new page,\r\n   * or network issues).\r\n   *\r\n   * `set()` is especially useful for implementing \"presence\" systems, where a\r\n   * value should be changed or cleared when a user disconnects so that they\r\n   * appear \"offline\" to other users. See\r\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n   * for more information.\r\n   *\r\n   * Note that `onDisconnect` operations are only triggered once. If you want an\r\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n   * the `onDisconnect` operations each time.\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.set = function (value) {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Ensures the data at this location is set to the specified value and priority\r\n   * when the client is disconnected (due to closing the browser, navigating to a\r\n   * new page, or network issues).\r\n   *\r\n   * @param value - The value to be written to this location on disconnect (can\r\n   * be an object, array, string, number, boolean, or null).\r\n   * @param priority - The priority to be written (string, number, or null).\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority) {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n  /**\r\n   * Writes multiple values at this location when the client is disconnected (due\r\n   * to closing the browser, navigating to a new page, or network issues).\r\n   *\r\n   * The `values` argument contains multiple property-value pairs that will be\r\n   * written to the Database together. Each child property can either be a simple\r\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n   * from the current location to the data to update.\r\n   *\r\n   * As opposed to the `set()` method, `update()` can be use to selectively update\r\n   * only the referenced properties at the current location (instead of replacing\r\n   * all the child properties at the current location).\r\n   *\r\n   * @param values - Object containing multiple values.\r\n   * @returns Resolves when synchronization to the Database is complete.\r\n   */\n\n\n  OnDisconnect.prototype.update = function (values) {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () {}));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\n\nvar QueryImpl =\n/** @class */\nfunction () {\n  /**\r\n   * @hideconstructor\r\n   */\n  function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\n    this._repo = _repo;\n    this._path = _path;\n    this._queryParams = _queryParams;\n    this._orderByCalled = _orderByCalled;\n  }\n\n  Object.defineProperty(QueryImpl.prototype, \"key\", {\n    get: function get() {\n      if (pathIsEmpty(this._path)) {\n        return null;\n      } else {\n        return pathGetBack(this._path);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"ref\", {\n    get: function get() {\n      return new ReferenceImpl(this._repo, this._path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\n    get: function get() {\n      var obj = queryParamsGetQueryObject(this._queryParams);\n      var id = ObjectToUniqueKey(obj);\n      return id === '{}' ? 'default' : id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\n    get: function get() {\n      return queryParamsGetQueryObject(this._queryParams);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  QueryImpl.prototype.isEqual = function (other) {\n    other = getModularInstance(other);\n\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    var sameRepo = this._repo === other._repo;\n    var samePath = pathEquals(this._path, other._path);\n    var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n\n  QueryImpl.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  QueryImpl.prototype.toString = function () {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  };\n\n  return QueryImpl;\n}();\n/**\r\n * Validates that no other order by call has been made\r\n */\n\n\nfunction validateNoPreviousOrderByCall(query, fnName) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n/**\r\n * Validates start/end values for queries.\r\n */\n\n\nfunction validateQueryEndpoints(params) {\n  var startNode = null;\n  var endNode = null;\n\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n    var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n      throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n    }\n  } else {\n    assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n    if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n      throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n    }\n  }\n}\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\n\n\nfunction validateLimit(params) {\n  if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n    throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n  }\n}\n/**\r\n * @internal\r\n */\n\n\nvar ReferenceImpl =\n/** @class */\nfunction (_super) {\n  __extends(ReferenceImpl, _super);\n  /** @hideconstructor */\n\n\n  function ReferenceImpl(repo, path) {\n    return _super.call(this, repo, path, new QueryParams(), false) || this;\n  }\n\n  Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\n    get: function get() {\n      var parentPath = pathParent(this._path);\n      return parentPath === null ? null : new ReferenceImpl(this._repo, parentPath);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceImpl.prototype, \"root\", {\n    get: function get() {\n      var ref = this;\n\n      while (ref.parent !== null) {\n        ref = ref.parent;\n      }\n\n      return ref;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ReferenceImpl;\n}(QueryImpl);\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param _node - A SnapshotNode to wrap.\r\n   * @param ref - The location this snapshot came from.\r\n   * @param _index - The iteration order for this snapshot\r\n   * @hideconstructor\r\n   */\n  function DataSnapshot(_node,\n  /**\r\n   * The location of this DataSnapshot.\r\n   */\n  ref, _index) {\n    this._node = _node;\n    this.ref = ref;\n    this._index = _index;\n  }\n\n  Object.defineProperty(DataSnapshot.prototype, \"priority\", {\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\n    get: function get() {\n      // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n      return this._node.getPriority().val();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\n    get: function get() {\n      return this.ref.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataSnapshot.prototype, \"size\", {\n    /** Returns the number of child properties of this `DataSnapshot`. */\n    get: function get() {\n      return this._node.numChildren();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets another `DataSnapshot` for the location at the specified relative path.\r\n   *\r\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n   * another `DataSnapshot` for the location at the specified relative path. The\r\n   * relative path can either be a simple child name (for example, \"ada\") or a\r\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n   * whose value is `null`) is returned.\r\n   *\r\n   * @param path - A relative path to the location of child data.\r\n   */\n\n  DataSnapshot.prototype.child = function (path) {\n    var childPath = new Path(path);\n    var childRef = child(this.ref, path);\n    return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n   * efficient than using `snapshot.val() !== null`.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    return !this._node.isEmpty();\n  };\n  /**\r\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n   *\r\n   * The `exportVal()` method is similar to `val()`, except priority information\r\n   * is included (if available), making it suitable for backing up your data.\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    return this._node.val(true);\n  };\n  /**\r\n   * Enumerates the top-level children in the `DataSnapshot`.\r\n   *\r\n   * Because of the way JavaScript objects work, the ordering of data in the\r\n   * JavaScript object returned by `val()` is not guaranteed to match the\r\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n   * where `forEach()` comes in handy. It guarantees the children of a\r\n   * `DataSnapshot` will be iterated in their query order.\r\n   *\r\n   * If no explicit `orderBy*()` method is used, results are returned\r\n   * ordered by key (unless priorities are used, in which case, results are\r\n   * returned by priority).\r\n   *\r\n   * @param action - A function that will be called for each child DataSnapshot.\r\n   * The callback can return true to cancel further enumeration.\r\n   * @returns true if enumeration was canceled due to your callback returning\r\n   * true.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this._node; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this._index, function (key, node) {\n      return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns true if the specified child path has (non-null) data.\r\n   *\r\n   * @param path - A relative path to the location of a potential child.\r\n   * @returns `true` if data exists at the specified child path; else\r\n   *  `false`.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    var childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n   * properties.\r\n   *\r\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n   * children. If it does, you can enumerate them using `forEach()`. If it\r\n   * doesn't, then either this snapshot contains a primitive value (which can be\r\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n   * `null`).\r\n   *\r\n   * @returns true if this snapshot has any children; else false.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  };\n  /**\r\n   * Returns a JSON-serializable representation of this object.\r\n   */\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    return this.exportVal();\n  };\n  /**\r\n   * Extracts a JavaScript value from a `DataSnapshot`.\r\n   *\r\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n   * scalar type (string, number, or boolean), an array, or an object. It may\r\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n   * data).\r\n   *\r\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n   *   Array, string, number, boolean, or `null`).\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  DataSnapshot.prototype.val = function () {\n    return this._node.val();\n  };\n\n  return DataSnapshot;\n}();\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\n\n\nfunction ref(db, path) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('ref');\n\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\n\n\nfunction refFromURL(db, url) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('refFromURL');\n\n  var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n  var repoInfo = parsedURL.repoInfo;\n\n  if (!db._repo.repoInfo_.isCustomHost() && repoInfo.host !== db._repo.repoInfo_.host) {\n    fatal('refFromURL' + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + db._repo.repoInfo_.host + ')');\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\n\n\nfunction child(parent, path) {\n  parent = getModularInstance(parent);\n\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\n\n\nfunction push(parent, value) {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  var now = repoServerTime(parent._repo);\n  var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n\n  var thennablePushRef = child(parent, name);\n  var pushRef = child(parent, name);\n  var promise;\n\n  if (value != null) {\n    promise = set(pushRef, value).then(function () {\n      return pushRef;\n    });\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef;\n}\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\n\n\nfunction remove(ref) {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction set(ref, value) {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value,\n  /*priority=*/\n  null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setPriority(ref, priority) {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\n\n\nfunction setWithPriority(ref, value, priority) {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var deferred = new Deferred();\n  repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\n\n\nfunction update(ref, values) {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  var deferred = new Deferred();\n  repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () {}));\n  return deferred.promise;\n}\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\n\n\nfunction get(query) {\n  query = getModularInstance(query);\n  return repoGetValue(query._repo, query).then(function (node) {\n    return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\n  });\n}\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callbackContext) {\n    this.callbackContext = callbackContext;\n  }\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\n  };\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var _this = this;\n\n    if (eventData.getEventType() === 'cancel') {\n      return function () {\n        return _this.callbackContext.onCancel(eventData.error);\n      };\n    } else {\n      return function () {\n        return _this.callbackContext.onValue(eventData.snapshot, null);\n      };\n    }\n  };\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  };\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbackContext !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might\r\n * let you register a group of callbacks together in the future.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(callbacks) {\n    this.callbacks = callbacks;\n  }\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks, eventToCheck);\n  };\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.callbacks['cancel'].hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\n\n    var index = query._queryParams.getIndex();\n\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\n  };\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    if (eventData.getEventType() === 'cancel') {\n      var cancelCB_1 = this.callbacks['cancel'];\n      return function () {\n        return cancelCB_1.onCancel(eventData.error);\n      };\n    } else {\n      var cb_1 = this.callbacks[eventData.eventType];\n      return function () {\n        return cb_1.onValue(eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks || !other.callbacks) {\n        return true;\n      } else {\n        var otherKeys = Object.keys(other.callbacks);\n        var thisKeys = Object.keys(this.callbacks);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks[otherKey] || !this.callbacks[thisKey] || other.callbacks[otherKey].matches(this.callbacks[thisKey]));\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks[eventType].matches(_this.callbacks[eventType]);\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\n  var _a;\n\n  var cancelCallback;\n\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    var userCallback_1 = callback;\n\n    var onceCallback = function onceCallback(dataSnapshot, previousChildName) {\n      userCallback_1(dataSnapshot, previousChildName);\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n    };\n\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\n  var container = eventType === 'value' ? new ValueEventRegistration(callbackContext) : new ChildEventRegistration((_a = {}, _a[eventType] = callbackContext, _a));\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return function () {\n    return repoRemoveEventCallbackForQuery(query._repo, query, container);\n  };\n}\n\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\n}\n\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\n  return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\n}\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\n\n\nfunction off(query, eventType, callback) {\n  var container = null;\n  var callbacks = null;\n  var expCallback = callback ? new CallbackContext(callback) : null;\n\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    if (callback) {\n      callbacks = {};\n      callbacks[eventType] = expCallback;\n    }\n\n    container = new ChildEventRegistration(callbacks);\n  }\n\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\n\n\nvar QueryConstraint =\n/** @class */\nfunction () {\n  function QueryConstraint() {}\n\n  return QueryConstraint;\n}();\n\nvar QueryEndAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndAtConstraint, _super);\n\n  function QueryEndAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endAt: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\n\n\nfunction endAt(value, key) {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nvar QueryEndBeforeConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEndBeforeConstraint, _super);\n\n  function QueryEndBeforeConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEndBeforeConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('endBefore: Starting point was already set (by another call to endAt, ' + 'endBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryEndBeforeConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction endBefore(value, key) {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nvar QueryStartAtConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAtConstraint, _super);\n\n  function QueryStartAtConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAtConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAt: Starting point was already set (by another call to startAt, ' + 'startBefore or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAtConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAt(value, key) {\n  if (value === void 0) {\n    value = null;\n  }\n\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nvar QueryStartAfterConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryStartAfterConstraint, _super);\n\n  function QueryStartAfterConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryStartAfterConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('startAfter: Starting point was already set (by another call to startAt, ' + 'startAfter, or equalTo).');\n    }\n\n    return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\n  };\n\n  return QueryStartAfterConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\n\n\nfunction startAfter(value, key) {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nvar QueryLimitToFirstConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToFirstConstraint, _super);\n\n  function QueryLimitToFirstConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToFirstConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToFirstConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToFirst(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nvar QueryLimitToLastConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryLimitToLastConstraint, _super);\n\n  function QueryLimitToLastConstraint(_limit) {\n    var _this = _super.call(this) || this;\n\n    _this._limit = _limit;\n    return _this;\n  }\n\n  QueryLimitToLastConstraint.prototype._apply = function (query) {\n    if (query._queryParams.hasLimit()) {\n      throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' + 'or limitToLast).');\n    }\n\n    return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\n  };\n\n  return QueryLimitToLastConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\n\n\nfunction limitToLast(limit) {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nvar QueryOrderByChildConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByChildConstraint, _super);\n\n  function QueryOrderByChildConstraint(_path) {\n    var _this = _super.call(this) || this;\n\n    _this._path = _path;\n    return _this;\n  }\n\n  QueryOrderByChildConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    var parsedPath = new Path(this._path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByChildConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\n\n\nfunction orderByChild(path) {\n  if (path === '$key') {\n    throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\n  } else if (path === '$priority') {\n    throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\n  } else if (path === '$value') {\n    throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\n  }\n\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nvar QueryOrderByKeyConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByKeyConstraint, _super);\n\n  function QueryOrderByKeyConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByKeyConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByKeyConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByKey() {\n  return new QueryOrderByKeyConstraint();\n}\n\nvar QueryOrderByPriorityConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByPriorityConstraint, _super);\n\n  function QueryOrderByPriorityConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByPriorityConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByPriorityConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\n\n\nfunction orderByPriority() {\n  return new QueryOrderByPriorityConstraint();\n}\n\nvar QueryOrderByValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryOrderByValueConstraint, _super);\n\n  function QueryOrderByValueConstraint() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  QueryOrderByValueConstraint.prototype._apply = function (query) {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(query._repo, query._path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  return QueryOrderByValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\n\n\nfunction orderByValue() {\n  return new QueryOrderByValueConstraint();\n}\n\nvar QueryEqualToValueConstraint =\n/** @class */\nfunction (_super) {\n  __extends(QueryEqualToValueConstraint, _super);\n\n  function QueryEqualToValueConstraint(_value, _key) {\n    var _this = _super.call(this) || this;\n\n    _this._value = _value;\n    _this._key = _key;\n    return _this;\n  }\n\n  QueryEqualToValueConstraint.prototype._apply = function (query) {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n\n    if (query._queryParams.hasStart()) {\n      throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (query._queryParams.hasEnd()) {\n      throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\n  };\n\n  return QueryEqualToValueConstraint;\n}(QueryConstraint);\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\n\n\nfunction equalTo(value, key) {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\n\n\nfunction query(query) {\n  var e_1, _a;\n\n  var queryConstraints = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    queryConstraints[_i - 1] = arguments[_i];\n  }\n\n  var queryImpl = getModularInstance(query);\n\n  try {\n    for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\n      var constraint = queryConstraints_1_1.value;\n      queryImpl = constraint._apply(queryImpl);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return queryImpl;\n}\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (repo.repoInfo_.nodeAdmin) {\n    repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\n  return new FirebaseDatabase(repo, app);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo, appName) {\n  var appRepos = repos[appName]; // This should never happen...\n\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\n  var appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = appRepos[repoInfo.toURLString()];\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\n\n\nvar FirebaseDatabase =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function FirebaseDatabase(_repoInternal,\n  /** The FirebaseApp associated with this Realtime Database instance. */\n  app) {\n    this._repoInternal = _repoInternal;\n    this.app = app;\n    /** Represents a database instance. */\n\n    this['type'] = 'database';\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this._instanceStarted = false;\n  }\n\n  Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\n    get: function get() {\n      if (!this._instanceStarted) {\n        repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\n        this._instanceStarted = true;\n      }\n\n      return this._repoInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\n    get: function get() {\n      if (!this._rootInternal) {\n        this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n      }\n\n      return this._rootInternal;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseDatabase.prototype._delete = function () {\n    this._checkNotDeleted('delete');\n\n    repoManagerDeleteRepo(this._repo, this.app.name);\n    this._repoInternal = null;\n    this._rootInternal = null;\n    return Promise.resolve();\n  };\n\n  FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  };\n\n  return FirebaseDatabase;\n}();\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n */\n\n\nfunction useDatabaseEmulator(db, host, port) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('useEmulator');\n\n  if (db._instanceStarted) {\n    fatal('Cannot call useEmulator() after instance has already been initialized.');\n  } // Modify the repo to apply emulator settings\n\n\n  repoManagerApplyEmulatorSettings(db._repo, host, port);\n}\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\n\n\nfunction goOffline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOffline');\n\n  repoInterrupt(db._repo);\n}\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\n\n\nfunction goOnline(db) {\n  db = getModularInstance(db);\n\n  db._checkNotDeleted('goOnline');\n\n  repoResume(db._repo);\n}\n\nfunction enableLogging$1(logger, persistent) {\n  enableLogging(logger, persistent);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\n\nfunction serverTimestamp() {\n  return SERVER_TIMESTAMP;\n}\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\n\n\nfunction _increment(delta) {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /** @hideconstructor */\n  function TransactionResult(\n  /** Whether the transaction was successfully committed. */\n  committed,\n  /** The resulting data snapshot. */\n  snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  }\n  /** Returns a JSON-serializable representation of this object. */\n\n\n  TransactionResult.prototype.toJSON = function () {\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\n\n\nfunction runTransaction(ref, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate, options) {\n  var _a;\n\n  ref = getModularInstance(ref);\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'Reference.transaction failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\n  var deferred = new Deferred();\n\n  var promiseComplete = function promiseComplete(error, committed, node) {\n    var dataSnapshot = null;\n\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  }; // Add a watch to make sure we get server updates.\n\n\n  var unwatcher = onValue(ref, function () {});\n  repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\n  return deferred.promise;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect$1 =\n/** @class */\nfunction () {\n  function OnDisconnect(_delegate) {\n    this._delegate = _delegate;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\n\n    var result = this._delegate.cancel();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\n\n    var result = this._delegate.remove();\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\n\n    var result = this._delegate.set(value);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\n\n    var result = this._delegate.setWithPriority(value, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\n\n    var result = this._delegate.update(objectToMerge);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult$1 =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot$1 =\n/** @class */\nfunction () {\n  function DataSnapshot(_database, _delegate) {\n    this._database = _database;\n    this._delegate = _delegate;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this._delegate.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this._delegate.exportVal();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @returns Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return this._delegate.exists();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (path) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    path = String(path);\n    validatePathString('DataSnapshot.child', 'path', path, false);\n    return new DataSnapshot(this._database, this._delegate.child(path));\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param path - Path to a child.\r\n   * @returns Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (path) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 'path', path, false);\n    return this._delegate.hasChild(path);\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @returns The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n    return this._delegate.priority;\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action - Callback function to be called\r\n   * for each child.\r\n   * @returns True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 'action', action, false);\n    return this._delegate.forEach(function (expDataSnapshot) {\n      return action(new DataSnapshot(_this._database, expDataSnapshot));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n    return this._delegate.hasChildren();\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this._delegate.key;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @returns The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this._delegate.size;\n  };\n  /**\r\n   * @returns The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return new Reference(this._database, this._delegate.ref);\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(database, _delegate) {\n    this.database = database;\n    this._delegate = _delegate;\n  }\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    var _this = this;\n\n    var _a;\n\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateCallback('Query.on', 'callback', callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n    var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback);\n        return callback;\n\n      default:\n        throw new Error(errorPrefix('Query.on', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', eventType, true);\n    validateCallback('Query.off', 'callback', callback, true);\n    validateContextObject('Query.off', 'context', context, true);\n\n    if (callback) {\n      var valueCallback = function valueCallback() {};\n\n      valueCallback.userCallback = callback;\n      valueCallback.context = context;\n      off(this._delegate, eventType, valueCallback);\n    } else {\n      off(this._delegate, eventType);\n    }\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    var _this = this;\n\n    return get(this._delegate).then(function (expSnapshot) {\n      return new DataSnapshot$1(_this.database, expSnapshot);\n    });\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateCallback('Query.once', 'callback', callback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.on', failureCallbackOrContext, context);\n    var deferred = new Deferred();\n\n    var valueCallback = function valueCallback(expSnapshot, previousChildName) {\n      var result = new DataSnapshot$1(_this.database, expSnapshot);\n\n      if (callback) {\n        callback.call(ret.context, result, previousChildName);\n      }\n\n      deferred.resolve(result);\n    };\n\n    valueCallback.userCallback = callback;\n    valueCallback.context = ret.context;\n\n    var cancelCallback = function cancelCallback(error) {\n      if (ret.cancel) {\n        ret.cancel.call(ret.context, error);\n      }\n\n      deferred.reject(error);\n    };\n\n    switch (eventType) {\n      case 'value':\n        onValue(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_added':\n        onChildAdded(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_removed':\n        onChildRemoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_changed':\n        onChildChanged(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      case 'child_moved':\n        onChildMoved(this._delegate, valueCallback, cancelCallback, {\n          onlyOnce: true\n        });\n        break;\n\n      default:\n        throw new Error(errorPrefix('Query.once', 'eventType') + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToFirst(limit)));\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, limitToLast(limit)));\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByChild(path)));\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByKey()));\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByPriority()));\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    return new Query(this.database, query(this._delegate, orderByValue()));\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAt(value, name)));\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, startAfter(value, name)));\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endAt(value, name)));\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, endBefore(value, name)));\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    return new Query(this.database, query(this._delegate, equalTo(value, name)));\n  };\n  /**\r\n   * @returns URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this._delegate.toString();\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this._delegate.toJSON();\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    return this._delegate.isEqual(other._delegate);\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName - The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: undefined,\n      context: undefined\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 'cancel', ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 'context', ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 'cancelOrContext') + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(database, _delegate) {\n    var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\n\n    _this.database = database;\n    _this._delegate = _delegate;\n    return _this;\n  }\n  /** @returns {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n    return this._delegate.key;\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    }\n\n    return new Reference(this.database, child(this._delegate, pathString));\n  };\n  /** @returns {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parent = this._delegate.parent;\n    return parent ? new Reference(this.database, parent) : null;\n  };\n  /** @returns {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    return new Reference(this.database, this._delegate.root);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateCallback('Reference.set', 'onComplete', onComplete, true);\n    var result = set(this._delegate, newVal);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.update = function (values, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n\n    if (Array.isArray(values)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < values.length; ++i) {\n        newObjectToMerge['' + i] = values[i];\n      }\n\n      values = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateWritablePath('Reference.update', this._delegate._path);\n    validateCallback('Reference.update', 'onComplete', onComplete, true);\n    var result = update(this._delegate, values);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\n    var result = setWithPriority(this._delegate, newVal, newPriority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateCallback('Reference.remove', 'onComplete', onComplete, true);\n    var result = remove(this._delegate);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    var _this = this;\n\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\n    validateCallback('Reference.transaction', 'onComplete', onComplete, true);\n    validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\n    var result = runTransaction(this._delegate, transactionUpdate, {\n      applyLocally: applyLocally\n    }).then(function (transactionResult) {\n      return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\n    });\n\n    if (onComplete) {\n      result.then(function (transactionResult) {\n        return onComplete(null, transactionResult.committed, transactionResult.snapshot);\n      }, function (error) {\n        return onComplete(error, false, null);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\n    var result = setPriority(this._delegate, priority);\n\n    if (onComplete) {\n      result.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    return result;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    var _this = this;\n\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateCallback('Reference.push', 'onComplete', onComplete, true);\n    var expPromise = push(this._delegate, value);\n    var promise = expPromise.then(function (expRef) {\n      return new Reference(_this.database, expRef);\n    });\n\n    if (onComplete) {\n      promise.then(function () {\n        return onComplete(null);\n      }, function (error) {\n        return onComplete(error);\n      });\n    }\n\n    var result = new Reference(this.database, expPromise);\n    result.then = promise.then.bind(promise);\n    result.catch = promise.catch.bind(promise, undefined);\n    return result;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this._delegate._path);\n    return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\n  };\n\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(_delegate, app) {\n    var _this = this;\n\n    this._delegate = _delegate;\n    this.app = app;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return _this._delegate._delete();\n      }\n    };\n  }\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host - the emulator host (ex: localhost)\r\n   * @param port - the emulator port (ex: 8080)\r\n   */\n\n\n  Database.prototype.useEmulator = function (host, port) {\n    useDatabaseEmulator(this._delegate, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      var childRef = refFromURL(this._delegate, path.toString());\n      return new Reference(this, childRef);\n    } else {\n      var childRef = ref(this._delegate, path);\n      return new Reference(this, childRef);\n    }\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @returns Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    var apiName = 'database.refFromURL';\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var childRef = refFromURL(this._delegate, url);\n    return new Reference(this, childRef);\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    return goOffline(this._delegate);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    return goOnline(this._delegate);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: serverTimestamp(),\n    increment: function increment(delta) {\n      return _increment(delta);\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  var connection = ref._delegate._repo.persistentConnection_; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  connection.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  repoStats(ref._delegate._repo, showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  repoStatsIncrementCounter(ref._delegate._repo, metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref._delegate._repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return repoInterceptServerData(ref._delegate._repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: new Database(repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin), app),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query._delegate._queryIdentifier;\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  repoManagerForceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return new Database(repoManagerDatabaseFromApp(app, authProvider, url), app);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot$1,\n    enableLogging: enableLogging$1,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging$1 as enableLogging, registerDatabase };"],"sourceRoot":""}