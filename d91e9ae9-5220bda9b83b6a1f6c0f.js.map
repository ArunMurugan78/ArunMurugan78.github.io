{"version":3,"sources":["webpack:///./node_modules/@firebase/database/dist/index.esm.js"],"names":["id","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","str","utf8Bytes","update","sha1Bytes","digest","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","pathString","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","String","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","validationPathCheckValid","validationPath","validationPathToErrorString","FORGE_DOMAIN_RE","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","domain","location","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","replace","decodePath","queryParams","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","decodeQuery","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","child","last","pop","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","isValidRootPathString","validateBoolean","bool","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","val","isEmpty","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","SortedMapIterator","node","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NamedNode","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","_defaultIndexMap","PRIORITY_INDEX","_super","PriorityIndex","aPriority","bPriority","indexCmp","isDefinedOn","maxPost","makePost","indexValue","KeyIndex","KEY_INDEX","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","root","base12","buildPennant","chunkSize","low","high","childTree","buildBalancedTree","namedNode","middle","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","OperationType","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","newOperationSourceServerTaggedQuery","queryId","fromUser","fromServer","tagged","setNodeFromJSON","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","children","subtree","ImmutableTree","fromObject","tree","childPath","childSnap","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","childKey","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","snap","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","newViewCache","eventCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","filtered","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","getIndex","ChildChangeAccumulator","changeMap","Map","change","oldChange","oldType","delete","getChanges","from","values","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","splice","removedWriteWasVisible","visible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","write","writes","filter","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","merge","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","forEach","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","oldEventCache","newEventCache","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","changes","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","EventGenerator","query_","getQueryParams","eventGeneratorGenerateEventsForType","eventGenerator","events","registrations","filteredChanges","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","lastPushTime","lastRandChars","PUSH_CHARS","nextPushId","now","duplicateTime","timeStampChars","random","successor","keyAsInt","i_1","sourcePlusOne","repeat","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","aChild","bChild","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","loadsAllData","isDefault","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","referenceConstructor","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","queryIdentifier","eventCacheComplete","syncPointAddEventRegistration","has","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","e_2","removed","hadCompleteView","syncPointHasCompleteView","entries","_d","viewQueryId","e_2_1","repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","size","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","listener","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","hashFn","onComplete","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","queries","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","tag","queriesToStop","queries_1","map","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childServerCache","childWritesCache","childOperation","viewGetServerCache","status","syncTreeQueryKeyForTag_","r","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","code","reason","toUpperCase","errorForServerCode","splitIndex","getRef","ExistingValueProvider","DeferredValueProvider","syncTree_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","unused","delta","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","collections","reporters","statsManagerGetCollection","hashString","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventData","eventFn","getEventRunner","EventEmitter","allowedEvents_","listeners_","trigger","listeners","callback","context","on","validateEventType_","getInitialEvent","off","find","et","VisibilityMonitor","hidden","visibilityChange","document","addEventListener","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","body","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","deferred","request","p","q","queryObject","outstandingGet","resolve","reject","sendGet_","promise","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","authTokenData","authToken","xhr","XMLHttpRequest","responseText","DataSnapshot","ref_","exportVal","toJSON","exists","childPathString","childRef","hasChildren","getKey","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","authOverride","appId","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","creatorFunction","addTokenChangeListener","statsReporter_","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoUpdate","childrenToMerge","changedKey","changedValue","writeId_1","repoOnDisconnectCancel","sparseSnapshotTreeForget","repoOnDisconnectSet","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","repoGetDatabase","__database","Database","repoStartTransaction","transactionUpdate","applyLocally","valueCallback","watchRef","Reference","transaction","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","snapshot","queueNode","nodeQueue","priorityForNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","ref","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","includeSelf","treeForEachAncestor","repoAbortTransactionsOnNode","treeForEachDescendant","childrenFirst","lastSent","__referenceConstructor","OnDisconnect","repo_","cancel","wrapCallback","setWithPriority","objectToMerge","newObjectToMerge","TransactionResult","committed","DataEvent","getParent","getEventType","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","ctx","cancelCB_1","cb_1","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","otherKey","thisKey","Query","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit_","validateNoPreviousOrderByCall_","cancelCallbackOrContext","ret","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","cached","Promise","err","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","limitToFirst","limit","limitToLast","orderByChild","parsedPath","orderByKey","orderByPriority","orderByValue","startAt","startAfter","endAt","endBefore","equalTo","viewFrom","queryParamsGetQueryObject","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","parentPath","getRoot","databaseProp","promiseComplete","setPriority","thennablePushRef","pushRef","syncPointSetReferenceConstructor","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","repos","useRestClient","repoManagerDatabaseFromApp","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","repoManagerApplyEmulatorSettings","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","setComponent","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","forceRestClient","_forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase"],"mappings":"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","file":"d91e9ae9-5220bda9b83b6a1f6c0f.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __spreadArray, __read, __values, __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, assertionError, safeGet, map, deepCopy, isMobileCordova, base64Encode, Deferred, isAdmin, isValidFormat, isEmpty, isReactNative, querystring, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\n\nvar DOMStorageWrapper =\n/** @class */\nfunction () {\n  /**\r\n   * @param domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n   */\n  function DOMStorageWrapper(domStorage_) {\n    this.domStorage_ = domStorage_; // Use a prefix to avoid collisions with other stuff saved by the app.\n\n    this.prefix_ = 'firebase:';\n  }\n  /**\r\n   * @param key The key to save the value under\r\n   * @param value The value being stored, or null to remove the key.\r\n   */\n\n\n  DOMStorageWrapper.prototype.set = function (key, value) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  };\n  /**\r\n   * @return The value that was stored under this key, or null\r\n   */\n\n\n  DOMStorageWrapper.prototype.get = function (key) {\n    var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  };\n\n  DOMStorageWrapper.prototype.remove = function (key) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  };\n\n  DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n    return this.prefix_ + name;\n  };\n\n  DOMStorageWrapper.prototype.toString = function () {\n    return this.domStorage_.toString();\n  };\n\n  return DOMStorageWrapper;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\n\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {\n    this.cache_ = {};\n    this.isInMemoryStorage = true;\n  }\n\n  MemoryStorage.prototype.set = function (key, value) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  };\n\n  MemoryStorage.prototype.get = function (key) {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n\n    return null;\n  };\n\n  MemoryStorage.prototype.remove = function (key) {\n    delete this.cache_[key];\n  };\n\n  return MemoryStorage;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return Turning off type information until a common interface is defined.\r\n */\n\n\nvar createStoragefor = function createStoragefor(domStorageName) {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (typeof window !== 'undefined' && typeof window[domStorageName] !== 'undefined') {\n      // Need to test cache. Just because it's here doesn't mean it works\n      var domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {} // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n\n\n  return new MemoryStorage();\n};\n/** A storage object that lasts across sessions */\n\n\nvar PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\n\nvar SessionStorage = createStoragefor('sessionStorage');\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logClient = new Logger('@firebase/database');\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\n\nvar LUIDGenerator = function () {\n  var id = 1;\n  return function () {\n    return id++;\n  };\n}();\n/**\r\n * Sha1 hash of the input string\r\n * @param str The string to hash\r\n * @return {!string} The resulting hash\r\n */\n\n\nvar sha1 = function sha1(str) {\n  var utf8Bytes = stringToByteArray(str);\n  var sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  var sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nvar buildLogMessage_ = function buildLogMessage_() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = '';\n\n  for (var i = 0; i < varArgs.length; i++) {\n    var arg = varArgs[i];\n\n    if (Array.isArray(arg) || arg && typeof arg === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof arg.length === 'number') {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n\n    message += ' ';\n  }\n\n  return message;\n};\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\n\n\nvar logger = null;\n/**\r\n * Flag to check for log availability on first log message\r\n */\n\nvar firstLog_ = true;\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ A flag to turn on logging, or a custom logger\r\n * @param persistent Whether or not to persist logging settings across refreshes\r\n */\n\nvar enableLogging = function enableLogging(logger_, persistent) {\n  assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\n\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nvar log = function log() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  if (firstLog_ === true) {\n    firstLog_ = false;\n\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    var message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nvar logWrapper = function logWrapper(prefix) {\n  return function () {\n    var varArgs = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      varArgs[_i] = arguments[_i];\n    }\n\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n  };\n};\n\nvar error = function error() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n};\n\nvar fatal = function fatal() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.error(message);\n  throw new Error(message);\n};\n\nvar warn = function warn() {\n  var varArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    varArgs[_i] = arguments[_i];\n  }\n\n  var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\n  logClient.warn(message);\n};\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\n\n\nvar warnIfPageIsSecure = function warnIfPageIsSecure() {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (typeof window !== 'undefined' && window.location && window.location.protocol && window.location.protocol.indexOf('https:') !== -1) {\n    warn('Insecure Firebase access from a secure page. ' + 'Please use https in calls to new Firebase().');\n  }\n};\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\n\n\nvar isInvalidJSONNumber = function isInvalidJSONNumber(data) {\n  return typeof data === 'number' && (data !== data || // NaN\n  data === Number.POSITIVE_INFINITY || data === Number.NEGATIVE_INFINITY);\n};\n\nvar executeWhenDOMReady = function executeWhenDOMReady(fn) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n    var called_1 = false;\n\n    var wrappedFn_1 = function wrappedFn_1() {\n      if (!document.body) {\n        setTimeout(wrappedFn_1, Math.floor(10));\n        return;\n      }\n\n      if (!called_1) {\n        called_1 = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn_1, false); // fallback to onload.\n\n      window.addEventListener('load', wrappedFn_1, false); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (document.attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      document.attachEvent('onreadystatechange', function () {\n        if (document.readyState === 'complete') {\n          wrappedFn_1();\n        }\n      }); // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      window.attachEvent('onload', wrappedFn_1); // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\n\n\nvar MIN_NAME = '[MIN_NAME]';\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\n\nvar MAX_NAME = '[MAX_NAME]';\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\n\nvar nameCompare = function nameCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    var aAsInt = tryParseInt(a),\n        bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n/**\r\n * @return {!number} comparison result.\r\n */\n\n\nvar stringCompare = function stringCompare(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nvar requireKey = function requireKey(key, obj) {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\n  }\n};\n\nvar ObjectToUniqueKey = function ObjectToUniqueKey(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  var keys = []; // eslint-disable-next-line guard-for-in\n\n  for (var k in obj) {\n    keys.push(k);\n  } // Export as json, but with the keys sorted.\n\n\n  keys.sort();\n  var key = '{';\n\n  for (var i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str The string\r\n * @param segsize The maximum number of chars in the string.\r\n * @return The string, split into appropriately-sized chunks\r\n */\n\n\nvar splitStringBySize = function splitStringBySize(str, segsize) {\n  var len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  var dataSegs = [];\n\n  for (var c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n\n  return dataSegs;\n};\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\n\n\nfunction each(obj, fn) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v A double\r\n *\r\n */\n\n\nvar doubleToIEEE754String = function doubleToIEEE754String(v) {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  var ebits = 11,\n      fbits = 52;\n  var bias = (1 << ebits - 1) - 1;\n  var s, e, f, ln, i; // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  } // Pack sign, exponent, fraction\n\n\n  var bits = [];\n\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  var str = bits.join(''); // Return the data as a hex string. --MJL\n\n  var hexByteString = '';\n\n  for (i = 0; i < 64; i += 8) {\n    var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n\n    hexByteString = hexByteString + hexByte;\n  }\n\n  return hexByteString.toLowerCase();\n};\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\n\n\nvar isChromeExtensionContentScript = function isChromeExtensionContentScript() {\n  return !!(typeof window === 'object' && window['chrome'] && window['chrome']['extension'] && !/^chrome/.test(window.location.href));\n};\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\n\n\nvar isWindowsStoreApp = function isWindowsStoreApp() {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\n\n\nvar errorForServerCode = function errorForServerCode(code, query) {\n  var reason = 'Unknown Error';\n\n  if (code === 'too_big') {\n    reason = 'The data requested exceeds the maximum size ' + 'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  error.code = code.toUpperCase();\n  return error;\n};\n/**\r\n * Used to test for integer-looking strings\r\n */\n\n\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MIN = -2147483648;\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\n\nvar INTEGER_32_MAX = 2147483647;\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\n\nvar tryParseInt = function tryParseInt(str) {\n  if (INTEGER_REGEXP_.test(str)) {\n    var intVal = Number(str);\n\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n\n  return null;\n};\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn The code to guard.\r\n */\n\n\nvar exceptionGuard = function exceptionGuard(fn) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(function () {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      var stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\n\n\nvar beingCrawled = function beingCrawled() {\n  var userAgent = typeof window === 'object' && window['navigator'] && window['navigator']['userAgent'] || ''; // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n\n  return userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0;\n};\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn Function to run.\r\n * @param time Milliseconds to wait before running.\r\n * @return The setTimeout() return value.\r\n */\n\n\nvar setTimeoutNonBlocking = function setTimeoutNonBlocking(fn, time) {\n  var timeout = setTimeout(fn, time); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  if (typeof timeout === 'object' && timeout['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    timeout['unref']();\n  }\n\n  return timeout;\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Maximum key depth. */\n\n\nvar MAX_PATH_DEPTH = 32;\n/** Maximum number of (UTF8) bytes in a Firebase path. */\n\nvar MAX_PATH_LENGTH_BYTES = 768;\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\n\nvar Path =\n/** @class */\nfunction () {\n  /**\r\n   * @param pathOrString Path string to parse, or another path, or the raw\r\n   * tokens array\r\n   */\n  function Path(pathOrString, pieceNum) {\n    if (pieceNum === void 0) {\n      this.pieces_ = pathOrString.split('/'); // Remove empty pieces.\n\n      var copyTo = 0;\n\n      for (var i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n\n      this.pieces_.length = copyTo;\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString;\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  Path.prototype.toString = function () {\n    var pathString = '';\n\n    for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  };\n\n  return Path;\n}();\n\nfunction newEmptyPath() {\n  return new Path('');\n}\n\nfunction pathGetFront(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n/**\r\n * @return The number of segments in this path\r\n */\n\n\nfunction pathGetLength(path) {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nfunction pathPopFront(path) {\n  var pieceNum = path.pieceNum_;\n\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n\n  return new Path(path.pieces_, pieceNum);\n}\n\nfunction pathGetBack(path) {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nfunction pathToUrlEncodedString(path) {\n  var pathString = '';\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\n\n\nfunction pathSlice(path, begin) {\n  if (begin === void 0) {\n    begin = 0;\n  }\n\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nfunction pathParent(path) {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nfunction pathChild(path, childPathObj) {\n  var pieces = [];\n\n  for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    var childPieces = childPathObj.split('/');\n\n    for (var i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n/**\r\n * @return True if there are no segments in this path\r\n */\n\n\nfunction pathIsEmpty(path) {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n/**\r\n * @return The path from outerPath to innerPath\r\n */\n\n\nfunction newRelativePath(outerPath, innerPath) {\n  var outer = pathGetFront(outerPath),\n      inner = pathGetFront(innerPath);\n\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error('INTERNAL ERROR: innerPath (' + innerPath + ') is not within ' + 'outerPath (' + outerPath + ')');\n  }\n}\n/**\r\n * @return -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\n\n\nfunction pathCompare(left, right) {\n  var leftKeys = pathSlice(left, 0);\n  var rightKeys = pathSlice(right, 0);\n\n  for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    var cmp = nameCompare(leftKeys[i], rightKeys[i]);\n\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n/**\r\n * @return true if paths are the same.\r\n */\n\n\nfunction pathEquals(path, other) {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * @return True if this path is a parent (or the same as) other\r\n */\n\n\nfunction pathContains(path, other) {\n  var i = path.pieceNum_;\n  var j = other.pieceNum_;\n\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n\n    ++i;\n    ++j;\n  }\n\n  return true;\n}\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\n\n\nvar ValidationPath =\n/** @class */\nfunction () {\n  /**\r\n   * @param path Initial Path.\r\n   * @param errorPrefix_ Prefix for any error messages.\r\n   */\n  function ValidationPath(path, errorPrefix_) {\n    this.errorPrefix_ = errorPrefix_;\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (var i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n\n    validationPathCheckValid(this);\n  }\n\n  return ValidationPath;\n}();\n\nfunction validationPathPush(validationPath, child) {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nfunction validationPathPop(validationPath) {\n  var last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last); // Un-count the previous '/'\n\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath) {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(validationPath.errorPrefix_ + 'has a key path longer than ' + MAX_PATH_LENGTH_BYTES + ' bytes (' + validationPath.byteLength_ + ').');\n  }\n\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(validationPath.errorPrefix_ + 'path specified exceeds the maximum depth that can be written (' + MAX_PATH_DEPTH + ') or object contains a cycle ' + validationPathToErrorString(validationPath));\n  }\n}\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\n\n\nfunction validationPathToErrorString(validationPath) {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PROTOCOL_VERSION = '5';\nvar VERSION_PARAM = 'v';\nvar TRANSPORT_SESSION_PARAM = 's';\nvar REFERER_PARAM = 'r';\nvar FORGE_REF = 'f'; // Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\n\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\nvar LAST_SESSION_PARAM = 'ls';\nvar APPLICATION_ID_PARAM = 'p';\nvar WEBSOCKET = 'websocket';\nvar LONG_POLLING = 'long_polling';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A class that holds metadata about a Repo object\r\n */\n\nvar RepoInfo =\n/** @class */\nfunction () {\n  /**\r\n   * @param host Hostname portion of the url for the repo\r\n   * @param secure Whether or not this repo is accessed over ssl\r\n   * @param namespace The namespace represented by the repo\r\n   * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n   * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n   * @param persistenceKey Override the default session persistence storage key\r\n   */\n  function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\n    if (nodeAdmin === void 0) {\n      nodeAdmin = false;\n    }\n\n    if (persistenceKey === void 0) {\n      persistenceKey = '';\n    }\n\n    if (includeNamespaceInQueryParams === void 0) {\n      includeNamespaceInQueryParams = false;\n    }\n\n    this.secure = secure;\n    this.namespace = namespace;\n    this.webSocketOnly = webSocketOnly;\n    this.nodeAdmin = nodeAdmin;\n    this.persistenceKey = persistenceKey;\n    this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost = PersistentStorage.get('host:' + host) || this._host;\n  }\n\n  RepoInfo.prototype.isCacheableHost = function () {\n    return this.internalHost.substr(0, 2) === 's-';\n  };\n\n  RepoInfo.prototype.isCustomHost = function () {\n    return this._domain !== 'firebaseio.com' && this._domain !== 'firebaseio-demo.com';\n  };\n\n  Object.defineProperty(RepoInfo.prototype, \"host\", {\n    get: function get() {\n      return this._host;\n    },\n    set: function set(newHost) {\n      if (newHost !== this.internalHost) {\n        this.internalHost = newHost;\n\n        if (this.isCacheableHost()) {\n          PersistentStorage.set('host:' + this._host, this.internalHost);\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RepoInfo.prototype.toString = function () {\n    var str = this.toURLString();\n\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n\n    return str;\n  };\n\n  RepoInfo.prototype.toURLString = function () {\n    var protocol = this.secure ? 'https://' : 'http://';\n    var query = this.includeNamespaceInQueryParams ? \"?ns=\" + this.namespace : '';\n    return \"\" + protocol + this.host + \"/\" + query;\n  };\n\n  return RepoInfo;\n}();\n\nfunction repoInfoNeedsQueryParam(repoInfo) {\n  return repoInfo.host !== repoInfo.internalHost || repoInfo.isCustomHost() || repoInfo.includeNamespaceInQueryParams;\n}\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\n\n\nfunction repoInfoConnectionURL(repoInfo, type, params) {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n  var connURL;\n\n  if (type === WEBSOCKET) {\n    connURL = (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL = (repoInfo.secure ? 'https://' : 'http://') + repoInfo.internalHost + '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  var pairs = [];\n  each(params, function (key, value) {\n    pairs.push(key + '=' + value);\n  });\n  return connURL + pairs.join('&');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction decodePath(pathString) {\n  var pathStringDecoded = '';\n  var pieces = pathString.split('/');\n\n  for (var i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      var piece = pieces[i];\n\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n\n      pathStringDecoded += '/' + piece;\n    }\n  }\n\n  return pathStringDecoded;\n}\n/**\r\n * @return key value hash\r\n */\n\n\nfunction decodeQuery(queryString) {\n  var e_1, _a;\n\n  var results = {};\n\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n\n  try {\n    for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var segment = _c.value;\n\n      if (segment.length === 0) {\n        continue;\n      }\n\n      var kv = segment.split('=');\n\n      if (kv.length === 2) {\n        results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n      } else {\n        warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return results;\n}\n\nvar parseRepoInfo = function parseRepoInfo(dataURL, nodeAdmin) {\n  var parsedUrl = parseDatabaseURL(dataURL),\n      namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(parsedUrl.host + ' is no longer supported. ' + 'Please use <YOUR FIREBASE>.firebaseio.com instead');\n  } // Catch common error of uninitialized namespace value.\n\n\n  if ((!namespace || namespace === 'undefined') && parsedUrl.domain !== 'localhost') {\n    fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n  return {\n    repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly,\n    /*persistenceKey=*/\n    '',\n    /*includeNamespaceInQueryParams=*/\n    namespace !== parsedUrl.subdomain),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nvar parseDatabaseURL = function parseDatabaseURL(dataURL) {\n  // Default to empty strings in the event of a malformed string.\n  var host = '',\n      domain = '',\n      subdomain = '',\n      pathString = '',\n      namespace = ''; // Always default to SSL, unless otherwise specified.\n\n  var secure = true,\n      scheme = 'https',\n      port = 443; // Don't do any validation here. The caller is responsible for validating the result of parsing.\n\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    var colonInd = dataURL.indexOf('//');\n\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    } // Parse host, path, and query string.\n\n\n    var slashInd = dataURL.indexOf('/');\n\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n\n    var questionMarkInd = dataURL.indexOf('?');\n\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n\n    var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd))); // If we have a port, use scheme for determining if it's secure.\n\n    colonInd = host.indexOf(':');\n\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    var hostWithoutPort = host.slice(0, colonInd);\n\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      var dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1); // Normalize namespaces to lowercase to share storage / connection.\n\n      namespace = subdomain;\n    } // Always treat the value of the `ns` as the namespace name if it is present.\n\n\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host: host,\n    port: port,\n    domain: domain,\n    subdomain: subdomain,\n    secure: secure,\n    scheme: scheme,\n    pathString: pathString,\n    namespace: namespace\n  };\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * True for invalid Firebase keys\r\n */\n\n\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\n\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\n\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nvar isValidKey = function isValidKey(key) {\n  return typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key);\n};\n\nvar isValidPathString = function isValidPathString(pathString) {\n  return typeof pathString === 'string' && pathString.length !== 0 && !INVALID_PATH_REGEX_.test(pathString);\n};\n\nvar isValidRootPathString = function isValidRootPathString(pathString) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nvar isValidPriority = function isValidPriority(priority) {\n  return priority === null || typeof priority === 'string' || typeof priority === 'number' && !isInvalidJSONNumber(priority) || priority && typeof priority === 'object' && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  contains(priority, '.sv');\n};\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\n\n\nvar validateFirebaseDataArg = function validateFirebaseDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\n};\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\n\n\nvar validateFirebaseData = function validateFirebaseData(errorPrefix, data, path_) {\n  var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\n  }\n\n  if (typeof data === 'function') {\n    throw new Error(errorPrefix + 'contains a function ' + validationPathToErrorString(path) + ' with contents = ' + data.toString());\n  }\n\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + validationPathToErrorString(path));\n  } // Check max leaf size, but try to avoid the utf8 conversion if we can.\n\n\n  if (typeof data === 'string' && data.length > MAX_LEAF_SIZE_ / 3 && stringLength(data) > MAX_LEAF_SIZE_) {\n    throw new Error(errorPrefix + 'contains a string greater than ' + MAX_LEAF_SIZE_ + ' utf8 bytes ' + validationPathToErrorString(path) + \" ('\" + data.substring(0, 50) + \"...')\");\n  } // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n\n\n  if (data && typeof data === 'object') {\n    var hasDotValue_1 = false;\n    var hasActualChild_1 = false;\n    each(data, function (key, value) {\n      if (key === '.value') {\n        hasDotValue_1 = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild_1 = true;\n\n        if (!isValidKey(key)) {\n          throw new Error(errorPrefix + ' contains an invalid key (' + key + ') ' + validationPathToErrorString(path) + '.  Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue_1 && hasActualChild_1) {\n      throw new Error(errorPrefix + ' contains \".value\" child ' + validationPathToErrorString(path) + ' in addition to actual children.');\n    }\n  }\n};\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\n\n\nvar validateFirebaseMergePaths = function validateFirebaseMergePaths(errorPrefix, mergePaths) {\n  var i, curPath;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    var keys = pathSlice(curPath);\n\n    for (var j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) ;else if (!isValidKey(keys[j])) {\n        throw new Error(errorPrefix + 'contains an invalid key (' + keys[j] + ') in path ' + curPath.toString() + '. Keys must be non-empty strings ' + 'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\n      }\n    }\n  } // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n\n\n  mergePaths.sort(pathCompare);\n  var prevPath = null;\n\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(errorPrefix + 'contains a path ' + prevPath.toString() + ' that is ancestor of another path ' + curPath.toString());\n    }\n\n    prevPath = curPath;\n  }\n};\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\n\n\nvar validateFirebaseMergeDataArg = function validateFirebaseMergeDataArg(fnName, argumentNumber, data, path, optional) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\n  }\n\n  var mergePaths = [];\n  each(data, function (key, value) {\n    var curPath = new Path(key);\n    validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\n\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(errorPrefix$1 + \"contains an invalid value for '\" + curPath.toString() + \"', which must be a valid \" + 'Firebase priority (a string, finite number, server value, or null).');\n      }\n    }\n\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix$1, mergePaths);\n};\n\nvar validatePriority = function validatePriority(fnName, argumentNumber, priority, optional) {\n  if (optional && priority === undefined) {\n    return;\n  }\n\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'is ' + priority.toString() + ', but must be a valid Firebase priority (a string, finite number, ' + 'server value, or null).');\n  } // Special case to allow importing data with a .sv.\n\n\n  if (!isValidPriority(priority)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid Firebase priority ' + '(a string, finite number, server value, or null).');\n  }\n};\n\nvar validateEventType = function validateEventType(fnName, argumentNumber, eventType, optional) {\n  if (optional && eventType === undefined) {\n    return;\n  }\n\n  switch (eventType) {\n    case 'value':\n    case 'child_added':\n    case 'child_removed':\n    case 'child_changed':\n    case 'child_moved':\n      break;\n\n    default:\n      throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' + '\"child_changed\", or \"child_moved\".');\n  }\n};\n\nvar validateKey = function validateKey(fnName, argumentNumber, key, optional) {\n  if (optional && key === undefined) {\n    return;\n  }\n\n  if (!isValidKey(key)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid key = \"' + key + '\".  Firebase keys must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\n  }\n};\n\nvar validatePathString = function validatePathString(fnName, argumentNumber, pathString, optional) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'was an invalid path = \"' + pathString + '\". Paths must be non-empty strings and ' + 'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n  }\n};\n\nvar validateRootPathString = function validateRootPathString(fnName, argumentNumber, pathString, optional) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentNumber, pathString, optional);\n};\n\nvar validateWritablePath = function validateWritablePath(fnName, path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nvar validateUrl = function validateUrl(fnName, argumentNumber, parsedUrl) {\n  // TODO = Validate server better.\n  var pathString = parsedUrl.path.toString();\n\n  if (!(typeof parsedUrl.repoInfo.host === 'string') || parsedUrl.repoInfo.host.length === 0 || !isValidKey(parsedUrl.repoInfo.namespace) && parsedUrl.repoInfo.host.split(':')[0] !== 'localhost' || pathString.length !== 0 && !isValidRootPathString(pathString)) {\n    throw new Error(errorPrefix(fnName, argumentNumber, false) + 'must be a valid firebase URL and ' + 'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\n  }\n};\n\nvar validateBoolean = function validateBoolean(fnName, argumentNumber, bool, optional) {\n  if (optional && bool === undefined) {\n    return;\n  }\n\n  if (typeof bool !== 'boolean') {\n    throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\n  }\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_NODE;\n\nfunction setMaxNode(val) {\n  MAX_NODE = val;\n}\n\nvar priorityHashText = function priorityHashText(priority) {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\n\n\nvar validatePriorityNode = function validatePriorityNode(priorityNode) {\n  if (priorityNode.isLeafNode()) {\n    var val = priorityNode.val();\n    assert(typeof val === 'string' || typeof val === 'number' || typeof val === 'object' && contains(val, '.sv'), 'Priority must be a string or number.');\n  } else {\n    assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\n  } // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n\n\n  assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __childrenNodeConstructor;\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\n\n\nvar LeafNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param value_ The value to store in this leaf node. The object type is\r\n   * possible in the event of a deferred value\r\n   * @param priorityNode_ The priority of this node.\r\n   */\n  function LeafNode(value_, priorityNode_) {\n    if (priorityNode_ === void 0) {\n      priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n\n    this.value_ = value_;\n    this.priorityNode_ = priorityNode_;\n    this.lazyHash_ = null;\n    assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\n    get: function get() {\n      return __childrenNodeConstructor;\n    },\n    set: function set(val) {\n      __childrenNodeConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  LeafNode.prototype.isLeafNode = function () {\n    return true;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPriority = function () {\n    return this.priorityNode_;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updatePriority = function (newPriorityNode) {\n    return new LeafNode(this.value_, newPriorityNode);\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getChild = function (path) {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.hasChild = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\n    return null;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.numChildren = function () {\n    return 0;\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.forEachChild = function (index, action) {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.val = function (exportFormat) {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  };\n  /** @inheritDoc */\n\n\n  LeafNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash = '';\n\n      if (!this.priorityNode_.isEmpty()) {\n        toHash += 'priority:' + priorityHashText(this.priorityNode_.val()) + ':';\n      }\n\n      var type = typeof this.value_;\n      toHash += type + ':';\n\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_);\n      } else {\n        toHash += this.value_;\n      }\n\n      this.lazyHash_ = sha1(toHash);\n    }\n\n    return this.lazyHash_;\n  };\n  /**\r\n   * Returns the value of the leaf node.\r\n   * @return The value of the node.\r\n   */\n\n\n  LeafNode.prototype.getValue = function () {\n    return this.value_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.compareTo = function (other) {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other);\n    }\n  };\n  /**\r\n   * Comparison specifically for two leaf nodes\r\n   */\n\n\n  LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\n    var otherLeafType = typeof otherLeaf.value_;\n    var thisLeafType = typeof this.value_;\n    var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.withIndex = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.isIndexed = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LeafNode.prototype.equals = function (other) {\n    /**\r\n     * @inheritDoc\r\n     */\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      var otherLeaf = other;\n      return this.value_ === otherLeaf.value_ && this.priorityNode_.equals(otherLeaf.priorityNode_);\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n   * the same type, the comparison falls back to their value\r\n   */\n\n\n  LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n  return LeafNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An iterator over an LLRBNode.\r\n */\n\n\nvar SortedMapIterator =\n/** @class */\nfunction () {\n  /**\r\n   * @param node Node to iterate.\r\n   * @param isReverse_ Whether or not to iterate in reverse\r\n   * @param resultGenerator_\r\n   */\n  function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\n    if (resultGenerator_ === void 0) {\n      resultGenerator_ = null;\n    }\n\n    this.isReverse_ = isReverse_;\n    this.resultGenerator_ = resultGenerator_;\n    this.nodeStack_ = [];\n    var cmp = 1;\n\n    while (!node.isEmpty()) {\n      node = node;\n      cmp = startKey ? comparator(node.key, startKey) : 1; // flip the comparison if we're going in reverse\n\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  SortedMapIterator.prototype.getNext = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_.pop();\n    var result;\n\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = {\n        key: node.key,\n        value: node.value\n      };\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  };\n\n  SortedMapIterator.prototype.hasNext = function () {\n    return this.nodeStack_.length > 0;\n  };\n\n  SortedMapIterator.prototype.peek = function () {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    var node = this.nodeStack_[this.nodeStack_.length - 1];\n\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return {\n        key: node.key,\n        value: node.value\n      };\n    }\n  };\n\n  return SortedMapIterator;\n}();\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\n\n\nvar LLRBNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param key Key associated with this node.\r\n   * @param value Value associated with this node.\r\n   * @param color Whether this node is red.\r\n   * @param left Left child.\r\n   * @param right Right child.\r\n   */\n  function LLRBNode(key, value, color, left, right) {\n    this.key = key;\n    this.value = value;\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : SortedMap.EMPTY_NODE;\n    this.right = right != null ? right : SortedMap.EMPTY_NODE;\n  }\n  /**\r\n   * Returns a copy of the current node, optionally replacing pieces of it.\r\n   *\r\n   * @param key New key for the node, or null.\r\n   * @param value New value for the node, or null.\r\n   * @param color New color for the node, or null.\r\n   * @param left New left child for the node, or null.\r\n   * @param right New right child for the node, or null.\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBNode.prototype.copy = function (key, value, color, left, right) {\n    return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBNode.prototype.count = function () {\n    return this.left.count() + 1 + this.right.count();\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBNode.prototype.isEmpty = function () {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   *   node.  If it returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  LLRBNode.prototype.inorderTraversal = function (action) {\n    return this.left.inorderTraversal(action) || !!action(this.key, this.value) || this.right.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBNode.prototype.reverseTraversal = function (action) {\n    return this.right.reverseTraversal(action) || action(this.key, this.value) || this.left.reverseTraversal(action);\n  };\n  /**\r\n   * @return The minimum node in the tree.\r\n   */\n\n\n  LLRBNode.prototype.min_ = function () {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return this.left.min_();\n    }\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.minKey = function () {\n    return this.min_().key;\n  };\n  /**\r\n   * @return The maximum key in the tree.\r\n   */\n\n\n  LLRBNode.prototype.maxKey = function () {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  };\n  /**\r\n   * @param key Key to insert.\r\n   * @param value Value to insert.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the key/value added.\r\n   */\n\n\n  LLRBNode.prototype.insert = function (key, value, comparator) {\n    var n = this;\n    var cmp = comparator(key, n.key);\n\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return New tree, with the minimum key removed.\r\n   */\n\n\n  LLRBNode.prototype.removeMin_ = function () {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE;\n    }\n\n    var n = this;\n\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n\n    n = n.copy(null, null, null, n.left.removeMin_(), null);\n    return n.fixUp_();\n  };\n  /**\r\n   * @param key The key of the item to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with the specified item removed.\r\n   */\n\n\n  LLRBNode.prototype.remove = function (key, comparator) {\n    var n, smallest;\n    n = this;\n\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE;\n        } else {\n          smallest = n.right.min_();\n          n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\n        }\n      }\n\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n\n    return n.fixUp_();\n  };\n  /**\r\n   * @return Whether this is a RED node.\r\n   */\n\n\n  LLRBNode.prototype.isRed_ = function () {\n    return this.color;\n  };\n  /**\r\n   * @return New tree after performing any needed rotations.\r\n   */\n\n\n  LLRBNode.prototype.fixUp_ = function () {\n    var n = this;\n\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedLeft.\r\n   */\n\n\n  LLRBNode.prototype.moveRedLeft_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.right.left.isRed_()) {\n      n = n.copy(null, null, null, null, n.right.rotateRight_());\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after moveRedRight.\r\n   */\n\n\n  LLRBNode.prototype.moveRedRight_ = function () {\n    var n = this.colorFlip_();\n\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n\n    return n;\n  };\n  /**\r\n   * @return New tree, after rotateLeft.\r\n   */\n\n\n  LLRBNode.prototype.rotateLeft_ = function () {\n    var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null);\n  };\n  /**\r\n   * @return New tree, after rotateRight.\r\n   */\n\n\n  LLRBNode.prototype.rotateRight_ = function () {\n    var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr);\n  };\n  /**\r\n   * @return Newt ree, after colorFlip.\r\n   */\n\n\n  LLRBNode.prototype.colorFlip_ = function () {\n    var left = this.left.copy(null, null, !this.left.color, null, null);\n    var right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  };\n  /**\r\n   * For testing.\r\n   *\r\n   * @return True if all is well.\r\n   */\n\n\n  LLRBNode.prototype.checkMaxDepth_ = function () {\n    var blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  };\n\n  LLRBNode.prototype.check_ = function () {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n\n    if (this.right.isRed_()) {\n      throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n\n    var blackDepth = this.left.check_();\n\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  };\n\n  LLRBNode.RED = true;\n  LLRBNode.BLACK = false;\n  return LLRBNode;\n}();\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\n\n\nvar LLRBEmptyNode =\n/** @class */\nfunction () {\n  function LLRBEmptyNode() {}\n  /**\r\n   * Returns a copy of the current node.\r\n   *\r\n   * @return The node copy.\r\n   */\n\n\n  LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\n    return this;\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key/value added.\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item added.\r\n   */\n\n\n  LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\n    return new LLRBNode(key, value, null);\n  };\n  /**\r\n   * Returns a copy of the tree, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @param comparator Comparator.\r\n   * @return New tree, with item removed.\r\n   */\n\n\n  LLRBEmptyNode.prototype.remove = function (key, comparator) {\n    return this;\n  };\n  /**\r\n   * @return The total number of nodes in the tree.\r\n   */\n\n\n  LLRBEmptyNode.prototype.count = function () {\n    return 0;\n  };\n  /**\r\n   * @return True if the tree is empty.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isEmpty = function () {\n    return true;\n  };\n  /**\r\n   * Traverses the tree in key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.inorderTraversal = function (action) {\n    return false;\n  };\n  /**\r\n   * Traverses the tree in reverse key order and calls the specified action function\r\n   * for each node.\r\n   *\r\n   * @param action Callback function to be called for each\r\n   * node.  If it returns true, traversal is aborted.\r\n   * @return True if traversal was aborted.\r\n   */\n\n\n  LLRBEmptyNode.prototype.reverseTraversal = function (action) {\n    return false;\n  };\n\n  LLRBEmptyNode.prototype.minKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.maxKey = function () {\n    return null;\n  };\n\n  LLRBEmptyNode.prototype.check_ = function () {\n    return 0;\n  };\n  /**\r\n   * @return Whether this node is red.\r\n   */\n\n\n  LLRBEmptyNode.prototype.isRed_ = function () {\n    return false;\n  };\n\n  return LLRBEmptyNode;\n}();\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\n\n\nvar SortedMap =\n/** @class */\nfunction () {\n  /**\r\n   * @param comparator_ Key comparator.\r\n   * @param root_ (Optional) Root node for the map.\r\n   */\n  function SortedMap(comparator_, root_) {\n    if (root_ === void 0) {\n      root_ = SortedMap.EMPTY_NODE;\n    }\n\n    this.comparator_ = comparator_;\n    this.root_ = root_;\n  }\n  /**\r\n   * Returns a copy of the map, with the specified key/value added or replaced.\r\n   * (TODO: We should perhaps rename this method to 'put')\r\n   *\r\n   * @param key Key to be added.\r\n   * @param value Value to be added.\r\n   * @return New map, with item added.\r\n   */\n\n\n  SortedMap.prototype.insert = function (key, value) {\n    return new SortedMap(this.comparator_, this.root_.insert(key, value, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns a copy of the map, with the specified key removed.\r\n   *\r\n   * @param key The key to remove.\r\n   * @return New map, with item removed.\r\n   */\n\n\n  SortedMap.prototype.remove = function (key) {\n    return new SortedMap(this.comparator_, this.root_.remove(key, this.comparator_).copy(null, null, LLRBNode.BLACK, null, null));\n  };\n  /**\r\n   * Returns the value of the node with the given key, or null.\r\n   *\r\n   * @param key The key to look up.\r\n   * @return The value of the node with the given key, or null if the\r\n   * key doesn't exist.\r\n   */\n\n\n  SortedMap.prototype.get = function (key) {\n    var cmp;\n    var node = this.root_;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n   * @param key The key to find the predecessor of\r\n   * @return The predecessor key.\r\n   */\n\n\n  SortedMap.prototype.getPredecessorKey = function (key) {\n    var cmp,\n        node = this.root_,\n        rightParent = null;\n\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\n  };\n  /**\r\n   * @return True if the map is empty.\r\n   */\n\n\n  SortedMap.prototype.isEmpty = function () {\n    return this.root_.isEmpty();\n  };\n  /**\r\n   * @return The total number of nodes in the map.\r\n   */\n\n\n  SortedMap.prototype.count = function () {\n    return this.root_.count();\n  };\n  /**\r\n   * @return The minimum key in the map.\r\n   */\n\n\n  SortedMap.prototype.minKey = function () {\n    return this.root_.minKey();\n  };\n  /**\r\n   * @return The maximum key in the map.\r\n   */\n\n\n  SortedMap.prototype.maxKey = function () {\n    return this.root_.maxKey();\n  };\n  /**\r\n   * Traverses the map in key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return The first truthy value returned by action, or the last falsey\r\n   *   value returned by action\r\n   */\n\n\n  SortedMap.prototype.inorderTraversal = function (action) {\n    return this.root_.inorderTraversal(action);\n  };\n  /**\r\n   * Traverses the map in reverse key order and calls the specified action function\r\n   * for each key/value pair.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each key/value pair.  If action returns true, traversal is aborted.\r\n   * @return True if the traversal was aborted.\r\n   */\n\n\n  SortedMap.prototype.reverseTraversal = function (action) {\n    return this.root_.reverseTraversal(action);\n  };\n  /**\r\n   * Returns an iterator over the SortedMap.\r\n   * @return The iterator.\r\n   */\n\n\n  SortedMap.prototype.getIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\n    return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\n  };\n\n  SortedMap.prototype.getReverseIterator = function (resultGenerator) {\n    return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\n  };\n  /**\r\n   * Always use the same empty node, to reduce memory.\r\n   */\n\n\n  SortedMap.EMPTY_NODE = new LLRBEmptyNode();\n  return SortedMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NamedNode =\n/** @class */\nfunction () {\n  function NamedNode(name, node) {\n    this.name = name;\n    this.node = node;\n  }\n\n  NamedNode.Wrap = function (name, node) {\n    return new NamedNode(name, node);\n  };\n\n  return NamedNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Index =\n/** @class */\nfunction () {\n  function Index() {}\n  /**\r\n   * @return A standalone comparison function for\r\n   * this index\r\n   */\n\n\n  Index.prototype.getCompare = function () {\n    return this.compare.bind(this);\n  };\n  /**\r\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n   *\r\n   *\r\n   * @return True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n   */\n\n\n  Index.prototype.indexedValueChanged = function (oldNode, newNode) {\n    var oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    var newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  };\n  /**\r\n   * @return a node wrapper that will sort equal to or less than\r\n   * any other node wrapper, using this index\r\n   */\n\n\n  Index.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n\n  return Index;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar nodeFromJSON;\nvar MAX_NODE$1;\n\nfunction setNodeFromJSON(val) {\n  nodeFromJSON = val;\n}\n\nfunction setMaxNode$1(val) {\n  MAX_NODE$1 = val;\n}\n\nvar PriorityIndex =\n/** @class */\nfunction (_super) {\n  __extends(PriorityIndex, _super);\n\n  function PriorityIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.compare = function (a, b) {\n    var aPriority = a.node.getPriority();\n    var bPriority = b.node.getPriority();\n    var indexCmp = aPriority.compareTo(bPriority);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.isDefinedOn = function (node) {\n    return !node.getPriority().isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PriorityIndex.prototype.maxPost = function () {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\n  };\n\n  PriorityIndex.prototype.makePost = function (indexValue, name) {\n    var priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  PriorityIndex.prototype.toString = function () {\n    return '.priority';\n  };\n\n  return PriorityIndex;\n}(Index);\n\nvar PRIORITY_INDEX = new PriorityIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar __EMPTY_NODE;\n\nvar KeyIndex =\n/** @class */\nfunction (_super) {\n  __extends(KeyIndex, _super);\n\n  function KeyIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\n    get: function get() {\n      return __EMPTY_NODE;\n    },\n    set: function set(val) {\n      __EMPTY_NODE = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * @inheritDoc\r\n   */\n\n  KeyIndex.prototype.compare = function (a, b) {\n    return nameCompare(a.name, b.name);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.isDefinedOn = function (node) {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return false; // The key for a node never changes.\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  KeyIndex.prototype.maxPost = function () {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  };\n\n  KeyIndex.prototype.makePost = function (indexValue, name) {\n    assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.'); // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  KeyIndex.prototype.toString = function () {\n    return '.key';\n  };\n\n  return KeyIndex;\n}(Index);\n\nvar KEY_INDEX = new KeyIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LOG_2 = Math.log(2);\n\nvar Base12Num =\n/** @class */\nfunction () {\n  function Base12Num(length) {\n    var logBase2 = function logBase2(num) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return parseInt(Math.log(num) / LOG_2, 10);\n    };\n\n    var bitMask = function bitMask(bits) {\n      return parseInt(Array(bits + 1).join('1'), 2);\n    };\n\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    var mask = bitMask(this.count);\n    this.bits_ = length + 1 & mask;\n  }\n\n  Base12Num.prototype.nextBitIsOne = function () {\n    //noinspection JSBitwiseOperatorUsage\n    var result = !(this.bits_ & 0x1 << this.current_);\n    this.current_--;\n    return result;\n  };\n\n  return Base12Num;\n}();\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList Unsorted list of children\r\n * @param cmp The comparison method to be used\r\n * @param keyFn An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn An optional override for comparator used by the generated sorted map\r\n */\n\n\nvar buildChildSet = function buildChildSet(childList, cmp, keyFn, mapSortFn) {\n  childList.sort(cmp);\n\n  var buildBalancedTree = function buildBalancedTree(low, high) {\n    var length = high - low;\n    var namedNode;\n    var key;\n\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var middle = parseInt(length / 2, 10) + low;\n      var left = buildBalancedTree(low, middle);\n      var right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : namedNode;\n      return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\n    }\n  };\n\n  var buildFrom12Array = function buildFrom12Array(base12) {\n    var node = null;\n    var root = null;\n    var index = childList.length;\n\n    var buildPennant = function buildPennant(chunkSize, color) {\n      var low = index - chunkSize;\n      var high = index;\n      index -= chunkSize;\n      var childTree = buildBalancedTree(low + 1, high);\n      var namedNode = childList[low];\n      var key = keyFn ? keyFn(namedNode) : namedNode;\n      attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\n    };\n\n    var attachPennant = function attachPennant(pennant) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (var i = 0; i < base12.count; ++i) {\n      var isOne = base12.nextBitIsOne(); // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n\n      var chunkSize = Math.pow(2, base12.count - (i + 1));\n\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n\n    return root;\n  };\n\n  var base12 = new Base12Num(childList.length);\n  var root = buildFrom12Array(base12); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return new SortedMap(mapSortFn || cmp, root);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _defaultIndexMap;\n\nvar fallbackObject = {};\n\nvar IndexMap =\n/** @class */\nfunction () {\n  function IndexMap(indexes_, indexSet_) {\n    this.indexes_ = indexes_;\n    this.indexSet_ = indexSet_;\n  }\n\n  Object.defineProperty(IndexMap, \"Default\", {\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\n    get: function get() {\n      assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\n      _defaultIndexMap = _defaultIndexMap || new IndexMap({\n        '.priority': fallbackObject\n      }, {\n        '.priority': PRIORITY_INDEX\n      });\n      return _defaultIndexMap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IndexMap.prototype.get = function (indexKey) {\n    var sortedMap = safeGet(this.indexes_, indexKey);\n\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  };\n\n  IndexMap.prototype.hasIndex = function (indexDefinition) {\n    return contains(this.indexSet_, indexDefinition.toString());\n  };\n\n  IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\n    assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\n    var childList = [];\n    var sawIndexedValue = false;\n    var iter = existingChildren.getIterator(NamedNode.Wrap);\n    var next = iter.getNext();\n\n    while (next) {\n      sawIndexedValue = sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n\n    var newIndex;\n\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n\n    var indexName = indexDefinition.toString();\n\n    var newIndexSet = __assign({}, this.indexSet_);\n\n    newIndexSet[indexName] = indexDefinition;\n\n    var newIndexes = __assign({}, this.indexes_);\n\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  };\n  /**\r\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n   */\n\n\n  IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\n    var _this = this;\n\n    var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\n      var index = safeGet(_this.indexSet_, indexName);\n      assert(index, 'Missing index implementation for ' + indexName);\n\n      if (indexedChildren === fallbackObject) {\n        // Check to see if we need to index everything\n        if (index.isDefinedOn(namedNode.node)) {\n          // We need to build this index\n          var childList = [];\n          var iter = existingChildren.getIterator(NamedNode.Wrap);\n          var next = iter.getNext();\n\n          while (next) {\n            if (next.name !== namedNode.name) {\n              childList.push(next);\n            }\n\n            next = iter.getNext();\n          }\n\n          childList.push(namedNode);\n          return buildChildSet(childList, index.getCompare());\n        } else {\n          // No change, this remains a fallback\n          return fallbackObject;\n        }\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n        var newChildren = indexedChildren;\n\n        if (existingSnap) {\n          newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        }\n\n        return newChildren.insert(namedNode, namedNode.node);\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n  /**\r\n   * Create a new IndexMap instance with the given value removed\r\n   */\n\n\n  IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\n    var newIndexes = map(this.indexes_, function (indexedChildren) {\n      if (indexedChildren === fallbackObject) {\n        // This is the fallback. Just return it, nothing to do in this case\n        return indexedChildren;\n      } else {\n        var existingSnap = existingChildren.get(namedNode.name);\n\n        if (existingSnap) {\n          return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\n        } else {\n          // No record of this child\n          return indexedChildren;\n        }\n      }\n    });\n    return new IndexMap(newIndexes, this.indexSet_);\n  };\n\n  return IndexMap;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction NAME_ONLY_COMPARATOR(left, right) {\n  return nameCompare(left.name, right.name);\n}\n\nfunction NAME_COMPARATOR(left, right) {\n  return nameCompare(left, right);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\n\nvar EMPTY_NODE;\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\n\nvar ChildrenNode =\n/** @class */\nfunction () {\n  /**\r\n   * @param children_ List of children of this node..\r\n   * @param priorityNode_ The priority of this node (as a snapshot node).\r\n   */\n  function ChildrenNode(children_, priorityNode_, indexMap_) {\n    this.children_ = children_;\n    this.priorityNode_ = priorityNode_;\n    this.indexMap_ = indexMap_;\n    this.lazyHash_ = null;\n    /**\r\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n     * class instead of an empty ChildrenNode.\r\n     */\n\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\n    }\n  }\n\n  Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\n    get: function get() {\n      return EMPTY_NODE || (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /** @inheritDoc */\n\n  ChildrenNode.prototype.isLeafNode = function () {\n    return false;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPriority = function () {\n    return this.priorityNode_ || EMPTY_NODE;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getImmediateChild = function (childName) {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      var child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getChild = function (path) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hasChild = function (childName) {\n    return this.children_.get(childName) !== null;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      var namedNode = new NamedNode(childName, newChildNode);\n      var newChildren = void 0,\n          newIndexMap = void 0;\n\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      var newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.updateChild = function (path, newChildNode) {\n    var front = pathGetFront(path);\n\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\n      var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.isEmpty = function () {\n    return this.children_.isEmpty();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.numChildren = function () {\n    return this.children_.count();\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.val = function (exportFormat) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    var obj = {};\n    var numKeys = 0,\n        maxKey = 0,\n        allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      obj[key] = childNode.val(exportFormat);\n      numKeys++;\n\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      var array = []; // eslint-disable-next-line guard-for-in\n\n      for (var key in obj) {\n        array[key] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n\n      return obj;\n    }\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.hash = function () {\n    if (this.lazyHash_ === null) {\n      var toHash_1 = '';\n\n      if (!this.getPriority().isEmpty()) {\n        toHash_1 += 'priority:' + priorityHashText(this.getPriority().val()) + ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n        var childHash = childNode.hash();\n\n        if (childHash !== '') {\n          toHash_1 += ':' + key + ':' + childHash;\n        }\n      });\n      this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\n    }\n\n    return this.lazyHash_;\n  };\n  /** @inheritDoc */\n\n\n  ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  };\n\n  ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\n    var minKey = this.getFirstChildName(indexDefinition);\n\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Given an index, return the key name of the largest value we have, according to that index\r\n   */\n\n\n  ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      var maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  };\n\n  ChildrenNode.prototype.getLastChild = function (indexDefinition) {\n    var maxKey = this.getLastChildName(indexDefinition);\n\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.forEachChild = function (index, action) {\n    var idx = this.resolveIndex_(index);\n\n    if (idx) {\n      return idx.inorderTraversal(function (wrappedNode) {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  };\n\n  ChildrenNode.prototype.getIterator = function (indexDefinition) {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getIteratorFrom(startPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n\n  ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\n    return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\n  };\n\n  ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\n    var idx = this.resolveIndex_(indexDefinition);\n\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, function (key) {\n        return key;\n      });\n    } else {\n      var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\n      var next = iterator.peek();\n\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n\n      return iterator;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.compareTo = function (other) {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE$2) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.withIndex = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX || this.indexMap_.hasIndex(indexDefinition)) {\n      return this;\n    } else {\n      var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.isIndexed = function (index) {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildrenNode.prototype.equals = function (other) {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      var otherChildrenNode = other;\n\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (this.children_.count() === otherChildrenNode.children_.count()) {\n        var thisIter = this.getIterator(PRIORITY_INDEX);\n        var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        var thisCurrent = thisIter.getNext();\n        var otherCurrent = otherIter.getNext();\n\n        while (thisCurrent && otherCurrent) {\n          if (thisCurrent.name !== otherCurrent.name || !thisCurrent.node.equals(otherCurrent.node)) {\n            return false;\n          }\n\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  };\n  /**\r\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n   * instead.\r\n   *\r\n   */\n\n\n  ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  };\n\n  ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n  return ChildrenNode;\n}();\n\nvar MaxNode =\n/** @class */\nfunction (_super) {\n  __extends(MaxNode, _super);\n\n  function MaxNode() {\n    return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\n  }\n\n  MaxNode.prototype.compareTo = function (other) {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  };\n\n  MaxNode.prototype.equals = function (other) {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  };\n\n  MaxNode.prototype.getPriority = function () {\n    return this;\n  };\n\n  MaxNode.prototype.getImmediateChild = function (childName) {\n    return ChildrenNode.EMPTY_NODE;\n  };\n\n  MaxNode.prototype.isEmpty = function () {\n    return false;\n  };\n\n  return MaxNode;\n}(ChildrenNode);\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\n\n\nvar MAX_NODE$2 = new MaxNode();\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE$2)\n  }\n});\n/**\r\n * Reference Extensions\r\n */\n\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE$2);\nsetMaxNode$1(MAX_NODE$2);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar USE_HINZE = true;\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json JSON to create a node for.\r\n * @param priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\n\nfunction nodeFromJSON$1(json, priority) {\n  if (priority === void 0) {\n    priority = null;\n  }\n\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(priority === null || typeof priority === 'string' || typeof priority === 'number' || typeof priority === 'object' && '.sv' in priority, 'Invalid priority type found: ' + typeof priority);\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  } // Valid leaf nodes include non-objects or server-value wrapper objects\n\n\n  if (typeof json !== 'object' || '.sv' in json) {\n    var jsonLeaf = json;\n    return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    var children_1 = [];\n    var childrenHavePriority_1 = false;\n    var hinzeJsonObj = json;\n    each(hinzeJsonObj, function (key, child) {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        var childNode = nodeFromJSON$1(child);\n\n        if (!childNode.isEmpty()) {\n          childrenHavePriority_1 = childrenHavePriority_1 || !childNode.getPriority().isEmpty();\n          children_1.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children_1.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) {\n      return namedNode.name;\n    }, NAME_COMPARATOR);\n\n    if (childrenHavePriority_1) {\n      var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({\n        '.priority': sortedChildSet\n      }, {\n        '.priority': PRIORITY_INDEX\n      }));\n    } else {\n      return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\n    }\n  } else {\n    var node_1 = ChildrenNode.EMPTY_NODE;\n    each(json, function (key, childData) {\n      if (contains(json, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          var childNode = nodeFromJSON$1(childData);\n\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node_1 = node_1.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n    return node_1.updatePriority(nodeFromJSON$1(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON$1);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n *\r\n * @enum\r\n */\n\nvar OperationType;\n\n(function (OperationType) {\n  OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n  OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n  OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n  OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType || (OperationType = {}));\n\nfunction newOperationSourceUser() {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServer() {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nfunction newOperationSourceServerTaggedQuery(queryId) {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: queryId,\n    tagged: true\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar AckUserWrite =\n/** @class */\nfunction () {\n  /**\r\n   * @param affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n   */\n  function AckUserWrite(\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  affectedTree,\n  /** @inheritDoc */\n  revert) {\n    this.path = path;\n    this.affectedTree = affectedTree;\n    this.revert = revert;\n    /** @inheritDoc */\n\n    this.type = OperationType.ACK_USER_WRITE;\n    /** @inheritDoc */\n\n    this.source = newOperationSourceUser();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  AckUserWrite.prototype.operationForChild = function (childName) {\n    if (!pathIsEmpty(this.path)) {\n      assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\n      return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\n    } else if (this.affectedTree.value != null) {\n      assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.'); // All child locations are affected as well; just return same operation.\n\n      return this;\n    } else {\n      var childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  };\n\n  return AckUserWrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar emptyChildrenSingleton;\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\n\nvar EmptyChildren = function EmptyChildren() {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap(stringCompare);\n  }\n\n  return emptyChildrenSingleton;\n};\n/**\r\n * A tree with immutable elements.\r\n */\n\n\nvar ImmutableTree =\n/** @class */\nfunction () {\n  function ImmutableTree(value, children) {\n    if (children === void 0) {\n      children = EmptyChildren();\n    }\n\n    this.value = value;\n    this.children = children;\n  }\n\n  ImmutableTree.fromObject = function (obj) {\n    var tree = new ImmutableTree(null);\n    each(obj, function (childPath, childSnap) {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  };\n  /**\r\n   * True if the value is empty and there are no children\r\n   */\n\n\n  ImmutableTree.prototype.isEmpty = function () {\n    return this.value === null && this.children.isEmpty();\n  };\n  /**\r\n   * Given a path and predicate, return the first node and the path to that node\r\n   * where the predicate returns true.\r\n   *\r\n   * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n   * on the way back out, it may be better to pass down a pathSoFar obj.\r\n   *\r\n   * @param relativePath The remainder of the path\r\n   * @param predicate The predicate to satisfy to return a node\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\n    if (this.value != null && predicate(this.value)) {\n      return {\n        path: newEmptyPath(),\n        value: this.value\n      };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        var front = pathGetFront(relativePath);\n        var child = this.children.get(front);\n\n        if (child !== null) {\n          var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\n\n          if (childExistingPathAndValue != null) {\n            var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\n            return {\n              path: fullPath,\n              value: childExistingPathAndValue.value\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n  /**\r\n   * Find, if it exists, the shortest subpath of the given path that points a defined\r\n   * value in the tree\r\n   */\n\n\n  ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\n    return this.findRootMostMatchingPathAndValue(relativePath, function () {\n      return true;\n    });\n  };\n  /**\r\n   * @return The subtree at the given path\r\n   */\n\n\n  ImmutableTree.prototype.subtree = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      var front = pathGetFront(relativePath);\n      var childTree = this.children.get(front);\n\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Sets a value at the specified path.\r\n   *\r\n   * @param relativePath Path to set value at.\r\n   * @param toSet Value to set.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.set = function (relativePath, toSet) {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.set(pathPopFront(relativePath), toSet);\n      var newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Removes the value at the specified path.\r\n   *\r\n   * @param relativePath Path to value to remove.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.remove = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        var newChild = child.remove(pathPopFront(relativePath));\n        var newChildren = void 0;\n\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  };\n  /**\r\n   * Gets a value from the tree.\r\n   *\r\n   * @param relativePath Path to get value for.\r\n   * @return Value at path, or null.\r\n   */\n\n\n  ImmutableTree.prototype.get = function (relativePath) {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front);\n\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  };\n  /**\r\n   * Replace the subtree at the specified path with the given new tree.\r\n   *\r\n   * @param relativePath Path to replace subtree for.\r\n   * @param newTree New tree.\r\n   * @return Resulting tree.\r\n   */\n\n\n  ImmutableTree.prototype.setTree = function (relativePath, newTree) {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      var front = pathGetFront(relativePath);\n      var child = this.children.get(front) || new ImmutableTree(null);\n      var newChild = child.setTree(pathPopFront(relativePath), newTree);\n      var newChildren = void 0;\n\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n\n      return new ImmutableTree(this.value, newChildren);\n    }\n  };\n  /**\r\n   * Performs a depth first fold on this tree. Transforms a tree into a single\r\n   * value, given a function that operates on the path to a node, an optional\r\n   * current value, and a map of child names to folded subtrees\r\n   */\n\n\n  ImmutableTree.prototype.fold = function (fn) {\n    return this.fold_(newEmptyPath(), fn);\n  };\n  /**\r\n   * Recursive helper for public-facing fold() method\r\n   */\n\n\n  ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\n    var accum = {};\n    this.children.inorderTraversal(function (childKey, childTree) {\n      accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n    });\n    return fn(pathSoFar, this.value, accum);\n  };\n  /**\r\n   * Find the first matching value on the given path. Return the result of applying f to it.\r\n   */\n\n\n  ImmutableTree.prototype.findOnPath = function (path, f) {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\n    var result = this.value ? f(pathSoFar, this.value) : false;\n\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        var front = pathGetFront(pathToFollow);\n        var nextChild = this.children.get(front);\n\n        if (nextChild) {\n          return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\n        } else {\n          return null;\n        }\n      }\n    }\n  };\n\n  ImmutableTree.prototype.foreachOnPath = function (path, f) {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n\n      var front = pathGetFront(pathToFollow);\n      var nextChild = this.children.get(front);\n\n      if (nextChild) {\n        return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\n      } else {\n        return new ImmutableTree(null);\n      }\n    }\n  };\n  /**\r\n   * Calls the given function for each node in the tree that has a value.\r\n   *\r\n   * @param f A function to be called with the path from the root of the tree to\r\n   * a node, and the value at that node. Called in depth-first order.\r\n   */\n\n\n  ImmutableTree.prototype.foreach = function (f) {\n    this.foreach_(newEmptyPath(), f);\n  };\n\n  ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  };\n\n  ImmutableTree.prototype.foreachChild = function (f) {\n    this.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value) {\n        f(childName, childTree.value);\n      }\n    });\n  };\n\n  return ImmutableTree;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ListenComplete =\n/** @class */\nfunction () {\n  function ListenComplete(source, path) {\n    this.source = source;\n    this.path = path;\n    /** @inheritDoc */\n\n    this.type = OperationType.LISTEN_COMPLETE;\n  }\n\n  ListenComplete.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  };\n\n  return ListenComplete;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Overwrite =\n/** @class */\nfunction () {\n  function Overwrite(source, path, snap) {\n    this.source = source;\n    this.path = path;\n    this.snap = snap;\n    /** @inheritDoc */\n\n    this.type = OperationType.OVERWRITE;\n  }\n\n  Overwrite.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  };\n\n  return Overwrite;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Merge =\n/** @class */\nfunction () {\n  function Merge(\n  /** @inheritDoc */\n  source,\n  /** @inheritDoc */\n  path,\n  /** @inheritDoc */\n  children) {\n    this.source = source;\n    this.path = path;\n    this.children = children;\n    /** @inheritDoc */\n\n    this.type = OperationType.MERGE;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.operationForChild = function (childName) {\n    if (pathIsEmpty(this.path)) {\n      var childTree = this.children.subtree(new Path(childName));\n\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  Merge.prototype.toString = function () {\n    return 'Operation(' + this.path + ': ' + this.source.toString() + ' merge: ' + this.children.toString() + ')';\n  };\n\n  return Merge;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\n\n\nvar CacheNode =\n/** @class */\nfunction () {\n  function CacheNode(node_, fullyInitialized_, filtered_) {\n    this.node_ = node_;\n    this.fullyInitialized_ = fullyInitialized_;\n    this.filtered_ = filtered_;\n  }\n  /**\r\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n   */\n\n\n  CacheNode.prototype.isFullyInitialized = function () {\n    return this.fullyInitialized_;\n  };\n  /**\r\n   * Returns whether this node is potentially missing children due to a filter applied to the node\r\n   */\n\n\n  CacheNode.prototype.isFiltered = function () {\n    return this.filtered_;\n  };\n\n  CacheNode.prototype.isCompleteForPath = function (path) {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    var childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  };\n\n  CacheNode.prototype.isCompleteForChild = function (key) {\n    return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(key);\n  };\n\n  CacheNode.prototype.getNode = function () {\n    return this.node_;\n  };\n\n  return CacheNode;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewCache(eventCache, serverCache) {\n  return {\n    eventCache: eventCache,\n    serverCache: serverCache\n  };\n}\n\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\n  return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\n}\n\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\n  return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\n}\n\nfunction viewCacheGetCompleteEventSnap(viewCache) {\n  return viewCache.eventCache.isFullyInitialized() ? viewCache.eventCache.getNode() : null;\n}\n\nfunction viewCacheGetCompleteServerSnap(viewCache) {\n  return viewCache.serverCache.isFullyInitialized() ? viewCache.serverCache.getNode() : null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction changeValue(snapshotNode) {\n  return {\n    type: \"value\"\n    /* VALUE */\n    ,\n    snapshotNode: snapshotNode\n  };\n}\n\nfunction changeChildAdded(childName, snapshotNode) {\n  return {\n    type: \"child_added\"\n    /* CHILD_ADDED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildRemoved(childName, snapshotNode) {\n  return {\n    type: \"child_removed\"\n    /* CHILD_REMOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\n  return {\n    type: \"child_changed\"\n    /* CHILD_CHANGED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName,\n    oldSnap: oldSnap\n  };\n}\n\nfunction changeChildMoved(childName, snapshotNode) {\n  return {\n    type: \"child_moved\"\n    /* CHILD_MOVED */\n    ,\n    snapshotNode: snapshotNode,\n    childName: childName\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\n\n\nvar IndexedFilter =\n/** @class */\nfunction () {\n  function IndexedFilter(index_) {\n    this.index_ = index_;\n  }\n\n  IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\n    var oldChild = snap.getImmediateChild(key); // Check if anything actually changed.\n\n    if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\n        } else {\n          assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\n      }\n    }\n\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\n          }\n        });\n      }\n\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n          if (oldSnap.hasChild(key)) {\n            var oldChild = oldSnap.getImmediateChild(key);\n\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\n          }\n        });\n      }\n    }\n\n    return newSnap.withIndex(this.index_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.filtersNodes = function () {\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndexedFilter = function () {\n    return this;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  IndexedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  return IndexedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ChildChangeAccumulator =\n/** @class */\nfunction () {\n  function ChildChangeAccumulator() {\n    this.changeMap = new Map();\n  }\n\n  ChildChangeAccumulator.prototype.trackChildChange = function (change) {\n    var type = change.type;\n    var childKey = change.childName;\n    assert(type === \"child_added\"\n    /* CHILD_ADDED */\n    || type === \"child_changed\"\n    /* CHILD_CHANGED */\n    || type === \"child_removed\"\n    /* CHILD_REMOVED */\n    , 'Only child changes supported for tracking');\n    assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\n    var oldChange = this.changeMap.get(childKey);\n\n    if (oldChange) {\n      var oldType = oldChange.type;\n\n      if (type === \"child_added\"\n      /* CHILD_ADDED */\n      && oldType === \"child_removed\"\n      /* CHILD_REMOVED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.delete(childKey);\n        } else if (type === \"child_removed\"\n      /* CHILD_REMOVED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_added\"\n      /* CHILD_ADDED */\n      ) {\n          this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\n        } else if (type === \"child_changed\"\n      /* CHILD_CHANGED */\n      && oldType === \"child_changed\"\n      /* CHILD_CHANGED */\n      ) {\n          this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\n        } else {\n        throw assertionError('Illegal combination of changes: ' + change + ' occurred after ' + oldChange);\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  };\n\n  ChildChangeAccumulator.prototype.getChanges = function () {\n    return Array.from(this.changeMap.values());\n  };\n\n  return ChildChangeAccumulator;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\n\n\nvar CompoundWrite =\n/** @class */\nfunction () {\n  function CompoundWrite(writeTree_) {\n    this.writeTree_ = writeTree_;\n  }\n\n  CompoundWrite.empty = function () {\n    return new CompoundWrite(new ImmutableTree(null));\n  };\n\n  return CompoundWrite;\n}();\n\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n    if (rootmost != null) {\n      var rootMostPath = rootmost.path;\n      var value = rootmost.value;\n      var relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\n    } else {\n      var subtree = new ImmutableTree(node);\n      var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\n  var newWrite = compoundWrite;\n  each(updates, function (childKey, node) {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite The CompoundWrite to remove.\r\n * @param path The path at which a write and all deeper writes should be removed\r\n * @return The new CompoundWrite with the removed path\r\n */\n\n\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\n    return new CompoundWrite(newWriteTree);\n  }\n}\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite The CompoundWrite to check.\r\n * @param path The path to check for\r\n * @return Whether there is a complete write at that path\r\n */\n\n\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite The CompoundWrite to get the node from.\r\n * @param path The path to get a complete write\r\n * @return The node if complete at that path, or null otherwise.\r\n */\n\n\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\n  var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n\n  if (rootmost != null) {\n    return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite The CompoundWrite to get children from.\r\n * @return A list of all complete children.\r\n */\n\n\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\n  var children = [];\n  var node = compoundWrite.writeTree_.value;\n\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n        children.push(new NamedNode(childName, childNode));\n      });\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\n      if (childTree.value != null) {\n        children.push(new NamedNode(childName, childTree.value));\n      }\n    });\n  }\n\n  return children;\n}\n\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @return Whether this CompoundWrite is empty\r\n */\n\n\nfunction compoundWriteIsEmpty(compoundWrite) {\n  return compoundWrite.writeTree_.isEmpty();\n}\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node The node to apply this CompoundWrite to\r\n * @return The node with all writes applied\r\n */\n\n\nfunction compoundWriteApply(compoundWrite, node) {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(relativePath, writeTree, node) {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    var priorityWrite_1 = null;\n    writeTree.children.inorderTraversal(function (childKey, childTree) {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\n        priorityWrite_1 = childTree.value;\n      } else {\n        node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\n      }\n    }); // If there was a priority write, we only apply it if the node is not empty\n\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\n      node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\n    }\n\n    return node;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\n\n\nfunction writeTreeChildWrites(writeTree, path) {\n  return newWriteTreeRef(path, writeTree);\n}\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible This is set to false by some transactions. It should be excluded from event caches\r\n */\n\n\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\n\n  if (visible === undefined) {\n    visible = true;\n  }\n\n  writeTree.allWrites.push({\n    path: path,\n    snap: snap,\n    writeId: writeId,\n    visible: visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\n  }\n\n  writeTree.lastWriteId = writeId;\n}\n/**\r\n * Record a new merge from user code.\r\n */\n\n\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\n  assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\n  writeTree.allWrites.push({\n    path: path,\n    children: changedChildren,\n    writeId: writeId,\n    visible: true\n  });\n  writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\n  writeTree.lastWriteId = writeId;\n}\n\nfunction writeTreeGetWrite(writeTree, writeId) {\n  for (var i = 0; i < writeTree.allWrites.length; i++) {\n    var record = writeTree.allWrites[i];\n\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n\n  return null;\n}\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @return true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\n\n\nfunction writeTreeRemoveWrite(writeTree, writeId) {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n  var idx = writeTree.allWrites.findIndex(function (s) {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  var writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n  var removedWriteWasVisible = writeToRemove.visible;\n  var removedWriteOverlapsWithOtherWrites = false;\n  var i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    var currentWrite = writeTree.allWrites[i];\n\n    if (currentWrite.visible) {\n      if (i >= idx && writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\n    } else {\n      var children = writeToRemove.children;\n      each(children, function (childName) {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\n      });\n    }\n\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (var childName in writeRecord.children) {\n      if (writeRecord.children.hasOwnProperty(childName) && pathContains(pathChild(writeRecord.path, childName), path)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\n\n\nfunction writeTreeResetTree_(writeTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\n\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId = writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\n\n\nfunction writeTreeDefaultFilter_(write) {\n  return write.visible;\n}\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\n\n\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\n  var compoundWrite = CompoundWrite.empty();\n\n  for (var i = 0; i < writes.length; ++i) {\n    var write = writes[i]; // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n\n    if (filter(write)) {\n      var writePath = write.path;\n      var relativePath = void 0;\n\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\n        } else ;\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\n          } else {\n            var child = safeGet(write.children, pathGetFront(relativePath));\n\n            if (child) {\n              // There exists a child in this node that matches the root path\n              var deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\n            }\n          }\n        } else ;\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n\n  return compoundWrite;\n}\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude An optional set to be excluded\r\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (completeServerCache == null && !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (!includeHiddenWrites && completeServerCache == null && !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\n        return null;\n      } else {\n        var filter = function filter(write) {\n          return (write.visible || includeHiddenWrites) && (!writeIdsToExclude || !~writeIdsToExclude.indexOf(write.writeId)) && (pathContains(write.path, treePath) || pathContains(treePath, write.path));\n        };\n\n        var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\n        var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\n\n\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\n  var completeChildren = ChildrenNode.EMPTY_NODE;\n  var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\n\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\n        completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\n      });\n    }\n\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\n      completeChildren = completeChildren.updateImmediateChild(childName, node);\n    }); // Add any complete children we have from the set\n\n    compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n    compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\n      completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\n    });\n    return completeChildren;\n  }\n}\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\n\n\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\n  assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\n  var path = pathChild(treePath, childPath);\n\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\n    }\n  }\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\n  var path = pathChild(treePath, childKey);\n  var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\n      return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\n    } else {\n      return null;\n    }\n  }\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\n\n\nfunction writeTreeShadowingWrite(writeTree, path) {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\n\n\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\n  var toIterate;\n  var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\n  var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n\n  toIterate = toIterate.withIndex(index);\n\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    var nodes = [];\n    var cmp = index.getCompare();\n    var iter = reverse ? toIterate.getReverseIteratorFrom(startPost, index) : toIterate.getIteratorFrom(startPost, index);\n    var next = iter.getNext();\n\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n\n      next = iter.getNext();\n    }\n\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nfunction newWriteTree() {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude Optional writes to exclude.\r\n * @param includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\n  return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\n}\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\n\n\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\n  return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\n}\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\n\n\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\n  return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\n}\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\n\n\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\n  return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\n}\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\n\n\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\n  return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\n}\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\n\n\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\n  return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\n}\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\n\n\nfunction writeTreeRefChild(writeTreeRef, childName) {\n  return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\n}\n\nfunction newWriteTreeRef(path, writeTree) {\n  return {\n    treePath: path,\n    writeTree: writeTree\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nvar NoCompleteChildSource_ =\n/** @class */\nfunction () {\n  function NoCompleteChildSource_() {}\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\n    return null;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\n    return null;\n  };\n\n  return NoCompleteChildSource_;\n}();\n/**\r\n * Singleton instance.\r\n */\n\n\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\n\nvar WriteTreeCompleteChildSource =\n/** @class */\nfunction () {\n  function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\n    if (optCompleteServerCache_ === void 0) {\n      optCompleteServerCache_ = null;\n    }\n\n    this.writes_ = writes_;\n    this.viewCache_ = viewCache_;\n    this.optCompleteServerCache_ = optCompleteServerCache_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\n    var node = this.viewCache_.eventCache;\n\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      var serverNode = this.optCompleteServerCache_ != null ? new CacheNode(this.optCompleteServerCache_, true, false) : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\n    var completeServerData = this.optCompleteServerCache_ != null ? this.optCompleteServerCache_ : viewCacheGetCompleteServerSnap(this.viewCache_);\n    var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\n\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  };\n\n  return WriteTreeCompleteChildSource;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newViewProcessor(filter) {\n  return {\n    filter: filter\n  };\n}\n\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\n  assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\n  assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\n}\n\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\n  var accumulator = new ChildChangeAccumulator();\n  var newViewCache, filterServerNode;\n\n  if (operation.type === OperationType.OVERWRITE) {\n    var overwrite = operation;\n\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n\n      filterServerNode = overwrite.source.tagged || oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path);\n      newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    var merge = operation;\n\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.'); // We filter the node if it's a tagged update or the node has been previously filtered\n\n      filterServerNode = merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    var ackUserWrite = operation;\n\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n\n  var changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return {\n    viewCache: newViewCache,\n    changes: changes\n  };\n}\n\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\n  var eventSnap = newViewCache.eventCache;\n\n  if (eventSnap.isFullyInitialized()) {\n    var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n\n    if (accumulator.length > 0 || !oldViewCache.eventCache.isFullyInitialized() || isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap) || !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\n      accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\n  var oldEventSnap = viewCache.eventCache;\n\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    var newEventCache = void 0,\n        serverNode = void 0;\n\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\n\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        var serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        var completeChildren = serverCache instanceof ChildrenNode ? serverCache : ChildrenNode.EMPTY_NODE;\n        var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\n      } else {\n        var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n        newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\n      }\n    } else {\n      var childKey = pathGetFront(changePath);\n\n      if (childKey === '.priority') {\n        assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\n        var oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode(); // we might have overwrites for this priority\n\n        var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\n\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        var childChangePath = pathPopFront(changePath); // update child\n\n        var newEventChild = void 0;\n\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\n\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n        }\n\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\n  var oldServerSnap = oldViewCache.serverCache;\n  var newServerCache;\n  var serverFilter = filterServerNode ? viewProcessor.filter : viewProcessor.filter.getIndexedFilter();\n\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    var newServerNode = oldServerSnap.getNode().updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (!oldServerSnap.isCompleteForPath(changePath) && pathGetLength(changePath) > 1) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n\n    var childChangePath = pathPopFront(changePath);\n    var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    var newChildNode = childNode.updateChild(childChangePath, changedSnap);\n\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\n    } else {\n      newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\n    }\n  }\n\n  var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\n  var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\n}\n\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\n  var oldEventSnap = oldViewCache.eventCache;\n  var newViewCache, newEventCache;\n  var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\n\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\n    newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\n  } else {\n    var childKey = pathGetFront(changePath);\n\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\n      newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\n    } else {\n      var childChangePath = pathPopFront(changePath);\n      var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      var newChild = void 0;\n\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        var childNode = source.getCompleteChild(childKey);\n\n        if (childNode != null) {\n          if (pathGetBack(childChangePath) === '.priority' && childNode.getChild(pathParent(childChangePath)).isEmpty()) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n\n      if (!oldChild.equals(newChild)) {\n        var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  var curViewCache = viewCache;\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  changedChildren.foreach(function (relativePath, childNode) {\n    var writePath = pathChild(path, relativePath);\n\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\n  merge.foreach(function (relativePath, childNode) {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (viewCache.serverCache.getNode().isEmpty() && !viewCache.serverCache.isFullyInitialized()) {\n    return viewCache;\n  } // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n\n\n  var curViewCache = viewCache;\n  var viewMergeTree;\n\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\n  }\n\n  var serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\n    if (serverNode.hasChild(childKey)) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\n    var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) && childMergeTree.value === undefined;\n\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      var serverChild = viewCache.serverCache.getNode().getImmediateChild(childKey);\n      var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\n      curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\n    }\n  });\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  } // Only filter server node if it is currently filtered\n\n\n  var filterServerNode = viewCache.serverCache.isFiltered(); // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n\n  var serverCache = viewCache.serverCache;\n\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (pathIsEmpty(ackPath) && serverCache.isFullyInitialized() || serverCache.isCompleteForPath(ackPath)) {\n      return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      var changedChildren_1 = new ImmutableTree(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\n        changedChildren_1 = changedChildren_1.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    var changedChildren_2 = new ImmutableTree(null);\n    affectedTree.foreach(function (mergePath, value) {\n      var serverCachePath = pathChild(ackPath, mergePath);\n\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\n      }\n    });\n    return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\n  }\n}\n\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\n  var oldServerNode = viewCache.serverCache;\n  var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\n  return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\n}\n\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\n  var complete;\n\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\n    var oldEventCache = viewCache.eventCache.getNode();\n    var newEventCache = void 0;\n\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      var newNode = void 0;\n\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n      } else {\n        var serverChildren = viewCache.serverCache.getNode();\n        assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\n        newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\n      }\n\n      newNode = newNode;\n      newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\n    } else {\n      var childKey = pathGetFront(path);\n      var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\n\n      if (newChild == null && viewCache.serverCache.isCompleteForChild(childKey)) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\n      } else {\n        newEventCache = oldEventCache;\n      }\n\n      if (newEventCache.isEmpty() && viewCache.serverCache.isFullyInitialized()) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\n\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\n        }\n      }\n    }\n\n    complete = viewCache.serverCache.isFullyInitialized() || writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\n\n\nvar EventGenerator =\n/** @class */\nfunction () {\n  function EventGenerator(query_) {\n    this.query_ = query_;\n    this.index_ = this.query_.getQueryParams().getIndex();\n  }\n\n  return EventGenerator;\n}();\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\n  var events = [];\n  var moves = [];\n  changes.forEach(function (change) {\n    if (change.type === \"child_changed\"\n    /* CHILD_CHANGED */\n    && eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\"\n  /* CHILD_REMOVED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\"\n  /* CHILD_ADDED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\"\n  /* CHILD_MOVED */\n  , moves, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\"\n  /* CHILD_CHANGED */\n  , changes, eventRegistrations, eventCache);\n  eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\"\n  /* VALUE */\n  , changes, eventRegistrations, eventCache);\n  return events;\n}\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\n\n\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\n  var filteredChanges = changes.filter(function (change) {\n    return change.type === eventType;\n  });\n  filteredChanges.sort(function (a, b) {\n    return eventGeneratorCompareChanges(eventGenerator, a, b);\n  });\n  filteredChanges.forEach(function (change) {\n    var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\n    registrations.forEach(function (registration) {\n      if (registration.respondsTo(change.type)) {\n        events.push(registration.createEvent(materializedChange, eventGenerator.query_));\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n\n  var aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  var bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Modeled after base64 web-safe chars, but ordered by ASCII.\n\n\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\nvar MIN_PUSH_CHAR = '-';\nvar MAX_PUSH_CHAR = 'z';\nvar MAX_KEY_LEN = 786;\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\n\nvar nextPushId = function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  var lastPushTime = 0; // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n\n  var lastRandChars = [];\n  return function (now) {\n    var duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n    var i;\n    var timeStampChars = new Array(8);\n\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64); // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n\n      now = Math.floor(now / 64);\n    }\n\n    assert(now === 0, 'Cannot push at time == 0');\n    var id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n\n      lastRandChars[i]++;\n    }\n\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n    return id;\n  };\n}();\n\nvar successor = function successor(key) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i_1 = 0; i_1 < next.length; i_1++) {\n    next[i_1] = key.charAt(i_1);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  var i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  } // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n\n\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  var source = next[i];\n  var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n  return next.slice(0, i + 1).join('');\n}; // `key` is assumed to be non-empty.\n\n\nvar predecessor = function predecessor(key) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n\n  var keyAsInt = tryParseInt(key);\n\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n\n  var next = new Array(key.length);\n\n  for (var i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  } // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n\n\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n\n    delete next[next.length - 1];\n    return next.join('');\n  } // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n\n\n  next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ValueIndex =\n/** @class */\nfunction (_super) {\n  __extends(ValueIndex, _super);\n\n  function ValueIndex() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.compare = function (a, b) {\n    var indexCmp = a.node.compareTo(b.node);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.isDefinedOn = function (node) {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\n    return !oldNode.equals(newNode);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.minPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MIN;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueIndex.prototype.maxPost = function () {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return NamedNode.MAX;\n  };\n\n  ValueIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    return new NamedNode(name, valueNode);\n  };\n  /**\r\n   * @return String representation for inclusion in a query spec\r\n   */\n\n\n  ValueIndex.prototype.toString = function () {\n    return '.value';\n  };\n\n  return ValueIndex;\n}(Index);\n\nvar VALUE_INDEX = new ValueIndex();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PathIndex =\n/** @class */\nfunction (_super) {\n  __extends(PathIndex, _super);\n\n  function PathIndex(indexPath_) {\n    var _this = _super.call(this) || this;\n\n    _this.indexPath_ = indexPath_;\n    assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\n    return _this;\n  }\n\n  PathIndex.prototype.extractChild = function (snap) {\n    return snap.getChild(this.indexPath_);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.isDefinedOn = function (node) {\n    return !node.getChild(this.indexPath_).isEmpty();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.compare = function (a, b) {\n    var aChild = this.extractChild(a.node);\n    var bChild = this.extractChild(b.node);\n    var indexCmp = aChild.compareTo(bChild);\n\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.makePost = function (indexValue, name) {\n    var valueNode = nodeFromJSON$1(indexValue);\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\n    return new NamedNode(name, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.maxPost = function () {\n    var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\n    return new NamedNode(MAX_NAME, node);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PathIndex.prototype.toString = function () {\n    return pathSlice(this.indexPath_, 0).join('/');\n  };\n\n  return PathIndex;\n}(Index);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\n\n\nvar RangedFilter =\n/** @class */\nfunction () {\n  function RangedFilter(params) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  RangedFilter.prototype.getStartPost = function () {\n    return this.startPost_;\n  };\n\n  RangedFilter.prototype.getEndPost = function () {\n    return this.endPost_;\n  };\n\n  RangedFilter.prototype.matches = function (node) {\n    return this.index_.compare(this.getStartPost(), node) <= 0 && this.index_.compare(node, this.getEndPost()) <= 0;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n\n    var filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    var self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndexedFilter = function () {\n    return this.indexedFilter_;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  RangedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  RangedFilter.getStartPost_ = function (params) {\n    if (params.hasStart()) {\n      var startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  };\n\n  RangedFilter.getEndPost_ = function (params) {\n    if (params.hasEnd()) {\n      var endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  };\n\n  return RangedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\n\n\nvar LimitedFilter =\n/** @class */\nfunction () {\n  function LimitedFilter(params) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_.getIndexedFilter().updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    } else {\n      return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n    var filtered;\n\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (this.limit_ * 2 < newSnap.numChildren() && newSnap.isIndexed(this.index_)) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_); // anchor to the startPost, endPost, or last element as appropriate\n\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\n        } else {\n          iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\n        }\n\n        var count = 0;\n\n        while (iterator.hasNext() && count < this.limit_) {\n          var next = iterator.getNext();\n          var inRange = void 0;\n\n          if (this.reverse_) {\n            inRange = this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange = this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_); // Don't support priorities on queries\n\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n        var startPost = void 0;\n        var endPost = void 0;\n        var cmp = void 0;\n        var iterator = void 0;\n\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          var indexCompare_1 = this.index_.getCompare();\n\n          cmp = function cmp(a, b) {\n            return indexCompare_1(b, a);\n          };\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        var count = 0;\n        var foundStartPost = false;\n\n        while (iterator.hasNext()) {\n          var next = iterator.getNext();\n\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n\n          var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\n          }\n        }\n      }\n    }\n\n    return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n    // Don't support priorities on queries\n    return oldSnap;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.filtersNodes = function () {\n    return true;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndexedFilter = function () {\n    return this.rangedFilter_.getIndexedFilter();\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  LimitedFilter.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\n    // TODO: rename all cache stuff etc to general snap terminology\n    var cmp;\n\n    if (this.reverse_) {\n      var indexCmp_1 = this.index_.getCompare();\n\n      cmp = function cmp(a, b) {\n        return indexCmp_1(b, a);\n      };\n    } else {\n      cmp = this.index_.getCompare();\n    }\n\n    var oldEventCache = snap;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    var newChildNamedNode = new NamedNode(childKey, childSnap);\n    var windowBoundary = this.reverse_ ? oldEventCache.getFirstChild(this.index_) : oldEventCache.getLastChild(this.index_);\n    var inRange = this.rangedFilter_.matches(newChildNamedNode);\n\n    if (oldEventCache.hasChild(childKey)) {\n      var oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\n\n      while (nextChild != null && (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\n      }\n\n      var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\n\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\n        }\n\n        var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\n        var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\n\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\n          }\n\n          return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\n          changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\n        }\n\n        return oldEventCache.updateImmediateChild(childKey, childSnap).updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  };\n\n  return LimitedFilter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\n\n\nvar QueryParams =\n/** @class */\nfunction () {\n  function QueryParams() {\n    this.limitSet_ = false;\n    this.startSet_ = false;\n    this.startNameSet_ = false;\n    this.startAfterSet_ = false;\n    this.endSet_ = false;\n    this.endNameSet_ = false;\n    this.endBeforeSet_ = false;\n    this.limit_ = 0;\n    this.viewFrom_ = '';\n    this.indexStartValue_ = null;\n    this.indexStartName_ = '';\n    this.indexEndValue_ = null;\n    this.indexEndName_ = '';\n    this.index_ = PRIORITY_INDEX;\n  }\n\n  QueryParams.prototype.hasStart = function () {\n    return this.startSet_;\n  };\n\n  QueryParams.prototype.hasStartAfter = function () {\n    return this.startAfterSet_;\n  };\n\n  QueryParams.prototype.hasEndBefore = function () {\n    return this.endBeforeSet_;\n  };\n  /**\r\n   * @return True if it would return from left.\r\n   */\n\n\n  QueryParams.prototype.isViewFromLeft = function () {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === \"l\"\n      /* VIEW_FROM_LEFT */\n      ;\n    }\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true\r\n   */\n\n\n  QueryParams.prototype.getIndexStartValue = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  };\n  /**\r\n   * Only valid to call if hasStart() returns true.\r\n   * Returns the starting key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexStartName = function () {\n    assert(this.startSet_, 'Only valid if start has been set');\n\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasEnd = function () {\n    return this.endSet_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   */\n\n\n  QueryParams.prototype.getIndexEndValue = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  };\n  /**\r\n   * Only valid to call if hasEnd() returns true.\r\n   * Returns the end key name for the range defined by these query parameters\r\n   */\n\n\n  QueryParams.prototype.getIndexEndName = function () {\n    assert(this.endSet_, 'Only valid if end has been set');\n\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  };\n\n  QueryParams.prototype.hasLimit = function () {\n    return this.limitSet_;\n  };\n  /**\r\n   * @return True if a limit has been set and it has been explicitly anchored\r\n   */\n\n\n  QueryParams.prototype.hasAnchoredLimit = function () {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  };\n  /**\r\n   * Only valid to call if hasLimit() returns true\r\n   */\n\n\n  QueryParams.prototype.getLimit = function () {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  };\n\n  QueryParams.prototype.getIndex = function () {\n    return this.index_;\n  };\n\n  QueryParams.prototype.loadsAllData = function () {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  };\n\n  QueryParams.prototype.isDefault = function () {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  };\n\n  QueryParams.prototype.copy = function () {\n    var copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  };\n\n  return QueryParams;\n}();\n\nfunction queryParamsGetNodeFilter(queryParams) {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"l\"\n  /* VIEW_FROM_LEFT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsLimitToLast(queryParams, newLimit) {\n  var newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = \"r\"\n  /* VIEW_FROM_RIGHT */\n  ;\n  return newParams;\n}\n\nfunction queryParamsStartAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.startSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexStartValue_ = indexValue;\n\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    var childKey = void 0;\n\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n\n  params.startAfterSet_ = true;\n  return params;\n}\n\nfunction queryParamsEndAt(queryParams, indexValue, key) {\n  var newParams = queryParams.copy();\n  newParams.endSet_ = true;\n\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n\n  newParams.indexEndValue_ = indexValue;\n\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n\n  return newParams;\n}\n\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\n  var childKey;\n  var params;\n\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nfunction queryParamsOrderBy(queryParams, index) {\n  var newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @return query string parameters\r\n */\n\n\nfunction queryParamsToRestQueryStringParameters(queryParams) {\n  var qs = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  var orderBy;\n\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = \"$priority\"\n    /* PRIORITY_INDEX */\n    ;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = \"$value\"\n    /* VALUE_INDEX */\n    ;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = \"$key\"\n    /* KEY_INDEX */\n    ;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n\n  qs[\"orderBy\"\n  /* ORDER_BY */\n  ] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[\"startAt\"\n    /* START_AT */\n    ] = stringify(queryParams.indexStartValue_);\n\n    if (queryParams.startNameSet_) {\n      qs[\"startAt\"\n      /* START_AT */\n      ] += ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[\"endAt\"\n    /* END_AT */\n    ] = stringify(queryParams.indexEndValue_);\n\n    if (queryParams.endNameSet_) {\n      qs[\"endAt\"\n      /* END_AT */\n      ] += ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[\"limitToFirst\"\n      /* LIMIT_TO_FIRST */\n      ] = queryParams.limit_;\n    } else {\n      qs[\"limitToLast\"\n      /* LIMIT_TO_LAST */\n      ] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nfunction queryParamsGetQueryObject(queryParams) {\n  var obj = {};\n\n  if (queryParams.startSet_) {\n    obj[\"sp\"\n    /* INDEX_START_VALUE */\n    ] = queryParams.indexStartValue_;\n\n    if (queryParams.startNameSet_) {\n      obj[\"sn\"\n      /* INDEX_START_NAME */\n      ] = queryParams.indexStartName_;\n    }\n  }\n\n  if (queryParams.endSet_) {\n    obj[\"ep\"\n    /* INDEX_END_VALUE */\n    ] = queryParams.indexEndValue_;\n\n    if (queryParams.endNameSet_) {\n      obj[\"en\"\n      /* INDEX_END_NAME */\n      ] = queryParams.indexEndName_;\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    obj[\"l\"\n    /* LIMIT */\n    ] = queryParams.limit_;\n    var viewFrom = queryParams.viewFrom_;\n\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = \"l\"\n        /* VIEW_FROM_LEFT */\n        ;\n      } else {\n        viewFrom = \"r\"\n        /* VIEW_FROM_RIGHT */\n        ;\n      }\n    }\n\n    obj[\"vf\"\n    /* VIEW_FROM */\n    ] = viewFrom;\n  } // For now, priority index is the default, so we only specify if it's some other index\n\n\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[\"i\"\n    /* INDEX */\n    ] = queryParams.index_.toString();\n  }\n\n  return obj;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\n\n\nvar View =\n/** @class */\nfunction () {\n  function View(query_, initialViewCache) {\n    this.query_ = query_;\n    this.eventRegistrations_ = [];\n    var params = this.query_.getQueryParams();\n    var indexFilter = new IndexedFilter(params.getIndex());\n    var filter = queryParamsGetNodeFilter(params);\n    this.processor_ = newViewProcessor(filter);\n    var initialServerCache = initialViewCache.serverCache;\n    var initialEventCache = initialViewCache.eventCache; // Don't filter server node with other filter than index, wait for tagged listen\n\n    var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\n    var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\n    var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\n    var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  Object.defineProperty(View.prototype, \"query\", {\n    get: function get() {\n      return this.query_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return View;\n}();\n\nfunction viewGetServerCache(view) {\n  return view.viewCache_.serverCache.getNode();\n}\n\nfunction viewGetCompleteNode(view) {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nfunction viewGetCompleteServerCache(view, path) {\n  var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (view.query.getQueryParams().loadsAllData() || !pathIsEmpty(path) && !cache.getImmediateChild(pathGetFront(path)).isEmpty()) {\n      return cache.getChild(path);\n    }\n  }\n\n  return null;\n}\n\nfunction viewIsEmpty(view) {\n  return view.eventRegistrations_.length === 0;\n}\n\nfunction viewAddEventRegistration(view, eventRegistration) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n/**\r\n * @param eventRegistration If null, remove all callbacks.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return Cancel events, if cancelError was provided.\r\n */\n\n\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\n  var cancelEvents = [];\n\n  if (cancelError) {\n    assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\n    var path_1 = view.query.path;\n    view.eventRegistrations_.forEach(function (registration) {\n      var maybeEvent = registration.createCancelEvent(cancelError, path_1);\n\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    var remaining = [];\n\n    for (var i = 0; i < view.eventRegistrations_.length; ++i) {\n      var existing = view.eventRegistrations_[i];\n\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\n\n\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\n  if (operation.type === OperationType.MERGE && operation.source.queryId !== null) {\n    assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\n    assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\n  }\n\n  var oldViewCache = view.viewCache_;\n  var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n  assert(result.viewCache.serverCache.isFullyInitialized() || !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\n  view.viewCache_ = result.viewCache;\n  return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\n}\n\nfunction viewGetInitialEvents(view, registration) {\n  var eventSnap = view.viewCache_.eventCache;\n  var initialChanges = [];\n\n  if (!eventSnap.getNode().isLeafNode()) {\n    var eventNode = eventSnap.getNode();\n    eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n\n  return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\n}\n\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\n  var registrations = eventRegistration ? [eventRegistration] : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar referenceConstructor;\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\n\nvar SyncPoint =\n/** @class */\nfunction () {\n  function SyncPoint() {\n    /**\r\n     * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n     * queryId and the value is the View for that query.\r\n     *\r\n     * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n     */\n    this.views = new Map();\n  }\n\n  return SyncPoint;\n}();\n\nfunction syncPointSetReferenceConstructor(val) {\n  assert(!referenceConstructor, '__referenceConstructor has already been defined');\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor() {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nfunction syncPointIsEmpty(syncPoint) {\n  return syncPoint.views.size === 0;\n}\n\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\n  var e_1, _a;\n\n  var queryId = operation.source.queryId;\n\n  if (queryId !== null) {\n    var view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\n  } else {\n    var events = [];\n\n    try {\n      for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var view = _c.value;\n        events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return events;\n  }\n}\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @return Events to raise.\r\n */\n\n\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\n  var queryId = query.queryIdentifier();\n  var view = syncPoint.views.get(queryId);\n\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\n    var eventCacheComplete = false;\n\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n\n    var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\n    return new View(query, viewCache);\n  }\n\n  return view;\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @return Events to raise.\r\n */\n\n\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\n\n  if (!syncPoint.views.has(query.queryIdentifier())) {\n    syncPoint.views.set(query.queryIdentifier(), view);\n  } // This is guaranteed to exist now, we just created anything that was missing\n\n\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration If null, remove all callbacks.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return removed queries and any cancel events\r\n */\n\n\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\n  var e_2, _a;\n\n  var queryId = query.queryIdentifier();\n  var removed = [];\n  var cancelEvents = [];\n  var hadCompleteView = syncPointHasCompleteView(syncPoint);\n\n  if (queryId === 'default') {\n    try {\n      // When you do ref.off(...), we search all views for the registration to remove.\n      for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            viewQueryId = _d[0],\n            view = _d[1];\n\n        cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n        if (viewIsEmpty(view)) {\n          syncPoint.views.delete(viewQueryId); // We'll deal with complete views later.\n\n          if (!view.query.getQueryParams().loadsAllData()) {\n            removed.push(view.query);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    var view = syncPoint.views.get(queryId);\n\n    if (view) {\n      cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\n\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId); // We'll deal with complete views later.\n\n        if (!view.query.getQueryParams().loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(new (syncPointGetReferenceConstructor())(query.repo, query.path));\n  }\n\n  return {\n    removed: removed,\n    events: cancelEvents\n  };\n}\n\nfunction syncPointGetQueryViews(syncPoint) {\n  var e_3, _a;\n\n  var result = [];\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (!view.query.getQueryParams().loadsAllData()) {\n        result.push(view);\n      }\n    }\n  } catch (e_3_1) {\n    e_3 = {\n      error: e_3_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_3) throw e_3.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * @param path The path to the desired complete snapshot\r\n * @return A complete cache, if it exists\r\n */\n\n\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\n  var e_4, _a;\n\n  var serverCache = null;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n      serverCache = serverCache || viewGetCompleteServerCache(view, path);\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return serverCache;\n}\n\nfunction syncPointViewForQuery(syncPoint, query) {\n  var params = query.getQueryParams();\n\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    var queryId = query.queryIdentifier();\n    return syncPoint.views.get(queryId);\n  }\n}\n\nfunction syncPointViewExistsForQuery(syncPoint, query) {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nfunction syncPointHasCompleteView(syncPoint) {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nfunction syncPointGetCompleteView(syncPoint) {\n  var e_5, _a;\n\n  try {\n    for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var view = _c.value;\n\n      if (view.query.getQueryParams().loadsAllData()) {\n        return view;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Static tracker for next query tag.\r\n */\n\n\nvar syncTreeNextQueryTag_ = 1;\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\n\nvar SyncTree =\n/** @class */\nfunction () {\n  /**\r\n   * @param listenProvider_ Used by SyncTree to start / stop listening\r\n   *   to server data.\r\n   */\n  function SyncTree(listenProvider_) {\n    this.listenProvider_ = listenProvider_;\n    /**\r\n     * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n     */\n\n    this.syncPointTree_ = new ImmutableTree(null);\n    /**\r\n     * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n     */\n\n    this.pendingWriteTree_ = newWriteTree();\n    this.tagToQueryMap = new Map();\n    this.queryToTagMap = new Map();\n  }\n\n  return SyncTree;\n}();\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\n  // Record pending write.\n  writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\n  }\n}\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\n}\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert True if the given write failed and needs to be reverted\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\n  if (revert === void 0) {\n    revert = false;\n  }\n\n  var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\n\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    var affectedTree_1 = new ImmutableTree(null);\n\n    if (write.snap != null) {\n      // overwrite\n      affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\n    } else {\n      each(write.children, function (pathString) {\n        affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\n      });\n    }\n\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\n  }\n}\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\n}\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\n  var changeTree = ImmutableTree.fromObject(changedChildren);\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\n}\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyListenComplete(syncTree, path) {\n  return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\n}\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration If null, all callbacks are removed.\r\n * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n * @return Cancel events, if cancelError was provided.\r\n */\n\n\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  var path = query.path;\n  var maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  var cancelEvents = []; // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n\n  if (maybeSyncPoint && (query.queryIdentifier() === 'default' || syncPointViewExistsForQuery(maybeSyncPoint, query))) {\n    var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\n\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n\n    var removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events; // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n\n    var removingDefault = -1 !== removed.findIndex(function (query) {\n      return query.getQueryParams().loadsAllData();\n    });\n    var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\n      return syncPointHasCompleteView(parentSyncPoint);\n    });\n\n    if (removingDefault && !covered) {\n      var subtree = syncTree.syncPointTree_.subtree(path); // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree); // Ok, we've collected all the listens we need. Set them up.\n\n        for (var i = 0; i < newViews.length; ++i) {\n          var view = newViews[i],\n              newQuery = view.query;\n          var listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\n        }\n      }\n    } // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n\n\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        var defaultTag = null;\n        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\n      } else {\n        removed.forEach(function (queryToRemove) {\n          var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\n          syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\n        });\n      }\n    } // Now, clear all of the tags we're tracking for the removed listens\n\n\n    syncTreeRemoveTags_(syncTree, removed);\n  }\n\n  return cancelEvents;\n}\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey != null) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\n  var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n\n  if (queryKey) {\n    var r = syncTreeParseQueryKey_(queryKey);\n    var queryPath = r.path,\n        queryId = r.queryId;\n    var relativePath = newRelativePath(queryPath, path);\n    var changeTree = ImmutableTree.fromObject(changedChildren);\n    var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @return Events to raise.\r\n */\n\n\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\n  var path = query.path;\n  var serverCache = null;\n  var foundAncestorDefaultView = false; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView = foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete;\n\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    var subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild(function (childName, childSyncPoint) {\n      var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\n\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(childName, completeCache);\n      }\n    });\n  }\n\n  var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n\n  if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\n    // We need to track a tag for this query\n    var queryKey = syncTreeMakeQueryKey_(query);\n    assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\n    var tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\n\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    var view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n\n  return events;\n}\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path The path to the data we want\r\n * @param writeIdsToExclude A specific set to be excluded\r\n */\n\n\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\n  var includeHiddenSets = true;\n  var writeTree = syncTree.pendingWriteTree_;\n  var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\n    var relativePath = newRelativePath(pathSoFar, path);\n    var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\n\n    if (serverCache) {\n      return serverCache;\n    }\n  });\n  return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\n}\n\nfunction syncTreeGetServerValue(syncTree, query) {\n  var path = query.path;\n  var serverCache = null; // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n\n  syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\n    var relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache = serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  var syncPoint = syncTree.syncPointTree_.get(path);\n\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache = serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var serverCacheComplete = serverCache != null;\n  var serverCacheNode = serverCacheComplete ? new CacheNode(serverCache, true, false) : null;\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query.path);\n  var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\n  return viewGetCompleteNode(view);\n}\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\n\n\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\n  return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_,\n  /*serverCache=*/\n  null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\n  } else {\n    var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    var events = [];\n    var childName = pathGetFront(operation.path);\n    var childOperation = operation.operationForChild(childName);\n    var childTree = syncPointTree.children.get(childName);\n\n    if (childTree && childOperation) {\n      var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n      var childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n\n    if (syncPoint) {\n      events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n    }\n\n    return events;\n  }\n}\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\n\n\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\n  var syncPoint = syncPointTree.get(newEmptyPath()); // If we don't have cached server data, see if we can get it from this SyncPoint.\n\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  var events = [];\n  syncPointTree.children.inorderTraversal(function (childName, childTree) {\n    var childServerCache = serverCache ? serverCache.getImmediateChild(childName) : null;\n    var childWritesCache = writeTreeRefChild(writesCache, childName);\n    var childOperation = operation.operationForChild(childName);\n\n    if (childOperation) {\n      events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(syncTree, view) {\n  var query = view.query;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  return {\n    hashFn: function hashFn() {\n      var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: function onComplete(status) {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query.path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query.path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        var error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(syncTree, query,\n        /*eventRegistration*/\n        null, error);\n      }\n    }\n  };\n}\n/**\r\n * Return the tag associated with the given query.\r\n */\n\n\nfunction syncTreeTagForQuery_(syncTree, query) {\n  var queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\n\n\nfunction syncTreeMakeQueryKey_(query) {\n  return query.path.toString() + '$' + query.queryIdentifier();\n}\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\n\n\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\n  return syncTree.tagToQueryMap.get(tag);\n}\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\n\n\nfunction syncTreeParseQueryKey_(queryKey) {\n  var splitIndex = queryKey.indexOf('$');\n  assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n/**\r\n * A helper method to apply tagged operations\r\n */\n\n\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\n  var syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\n\n\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\n  return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      var views_1 = [];\n\n      if (maybeChildSyncPoint) {\n        views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n\n      each(childMap, function (_key, childViews) {\n        views_1 = views_1.concat(childViews);\n      });\n      return views_1;\n    }\n  });\n}\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @return The normalized query\r\n */\n\n\nfunction syncTreeQueryForListening_(query) {\n  if (query.getQueryParams().loadsAllData() && !query.getQueryParams().isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return query.getRef();\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree, queries) {\n  for (var j = 0; j < queries.length; ++j) {\n    var removedQuery = queries[j];\n\n    if (!removedQuery.getQueryParams().loadsAllData()) {\n      // We should have a tag for this\n      var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n/**\r\n * Static accessor for query tags.\r\n */\n\n\nfunction syncTreeGetNextQueryTag_() {\n  return syncTreeNextQueryTag_++;\n}\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @return This method can return events to support synchronous data sources\r\n */\n\n\nfunction syncTreeSetupListener_(syncTree, query, view) {\n  var path = query.path;\n  var tag = syncTreeTagForQuery_(syncTree, query);\n  var listener = syncTreeCreateListenerForView_(syncTree, view);\n  var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\n  var subtree = syncTree.syncPointTree_.subtree(path); // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n\n  if (tag) {\n    assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\n      if (!pathIsEmpty(relativePath) && maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n        return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n      } else {\n        // No default listener here, flatten any deeper queries into an array\n        var queries_1 = [];\n\n        if (maybeChildSyncPoint) {\n          queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) {\n            return view.query;\n          }));\n        }\n\n        each(childMap, function (_key, childQueries) {\n          queries_1 = queries_1.concat(childQueries);\n        });\n        return queries_1;\n      }\n    });\n\n    for (var i = 0; i < queriesToStop.length; ++i) {\n      var queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\n    }\n  }\n\n  return events;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ExistingValueProvider =\n/** @class */\nfunction () {\n  function ExistingValueProvider(node_) {\n    this.node_ = node_;\n  }\n\n  ExistingValueProvider.prototype.getImmediateChild = function (childName) {\n    var child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  };\n\n  ExistingValueProvider.prototype.node = function () {\n    return this.node_;\n  };\n\n  return ExistingValueProvider;\n}();\n\nvar DeferredValueProvider =\n/** @class */\nfunction () {\n  function DeferredValueProvider(syncTree, path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  DeferredValueProvider.prototype.getImmediateChild = function (childName) {\n    var childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  };\n\n  DeferredValueProvider.prototype.node = function () {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  };\n\n  return DeferredValueProvider;\n}();\n/**\r\n * Generate placeholders for deferred values.\r\n */\n\n\nvar generateWithValues = function generateWithValues(values) {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\n\n\nvar resolveDeferredLeafValue = function resolveDeferredLeafValue(value, existingVal, serverValues) {\n  if (!value || typeof value !== 'object') {\n    return value;\n  }\n\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nvar resolveScalarDeferredValue = function resolveScalarDeferredValue(op, existing, serverValues) {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'];\n\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nvar resolveComplexDeferredValue = function resolveComplexDeferredValue(op, existing, unused) {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n\n  var delta = op['increment'];\n\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  var existingNode = existing.node();\n  assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls'); // Incrementing a non-number sets the value to the incremented amount\n\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  var leaf = existingNode;\n  var existingVal = leaf.getValue();\n\n  if (typeof existingVal !== 'number') {\n    return delta;\n  } // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n\n\n  return existingVal + delta;\n};\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path path to which write is relative\r\n * @param node new data written at path\r\n * @param syncTree current data\r\n */\n\n\nvar resolveDeferredValueTree = function resolveDeferredValueTree(path, node, syncTree, serverValues) {\n  return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\n};\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\n\n\nvar resolveDeferredValueSnapshot = function resolveDeferredValueSnapshot(node, existing, serverValues) {\n  return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\n};\n\nfunction resolveDeferredValue(node, existingVal, serverValues) {\n  var rawPri = node.getPriority().val();\n  var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\n  var newNode;\n\n  if (node.isLeafNode()) {\n    var leafNode = node;\n    var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\n\n    if (value !== leafNode.getValue() || priority !== leafNode.getPriority().val()) {\n      return new LeafNode(value, nodeFromJSON$1(priority));\n    } else {\n      return node;\n    }\n  } else {\n    var childrenNode = node;\n    newNode = childrenNode;\n\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n\n    childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\n      var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\n\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction newSparseSnapshotTree() {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path Path to look up snapshot for.\r\n * @param data The new data, or null.\r\n */\n\n\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    var childKey = pathGetFront(path);\n\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    var child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path Path to look up snapshot for.\r\n * @return True if this node should now be removed.\r\n */\n\n\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        var value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n        value.forEachChild(PRIORITY_INDEX, function (key, tree) {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      var childKey = pathGetFront(path);\n      path = pathPopFront(path);\n\n      if (sparseSnapshotTree.children.has(childKey)) {\n        var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\n\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath Path to look up node for.\r\n * @param func The function to invoke for each tree.\r\n */\n\n\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\n      var path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func The function to invoke for each child.\r\n */\n\n\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\n  sparseSnapshotTree.children.forEach(function (tree, key) {\n    func(key, tree);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\n\n\nvar SnapshotHolder =\n/** @class */\nfunction () {\n  function SnapshotHolder() {\n    this.rootNode_ = ChildrenNode.EMPTY_NODE;\n  }\n\n  SnapshotHolder.prototype.getNode = function (path) {\n    return this.rootNode_.getChild(path);\n  };\n\n  SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  };\n\n  return SnapshotHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Tracks a collection of stats.\r\n */\n\n\nvar StatsCollection =\n/** @class */\nfunction () {\n  function StatsCollection() {\n    this.counters_ = {};\n  }\n\n  StatsCollection.prototype.incrementCounter = function (name, amount) {\n    if (amount === void 0) {\n      amount = 1;\n    }\n\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  };\n\n  StatsCollection.prototype.get = function () {\n    return deepCopy(this.counters_);\n  };\n\n  return StatsCollection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar collections = {};\nvar reporters = {};\n\nfunction statsManagerGetCollection(repoInfo) {\n  var hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\n  var hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString];\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n */\n\n\nvar StatsListener =\n/** @class */\nfunction () {\n  function StatsListener(collection_) {\n    this.collection_ = collection_;\n    this.last_ = null;\n  }\n\n  StatsListener.prototype.get = function () {\n    var newStats = this.collection_.get();\n\n    var delta = __assign({}, newStats);\n\n    if (this.last_) {\n      each(this.last_, function (stat, value) {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n\n    this.last_ = newStats;\n    return delta;\n  };\n\n  return StatsListener;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\n\n\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\nvar FIRST_STATS_MAX_TIME = 30 * 1000; // We'll continue to report stats on average every 5 minutes.\n\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nvar StatsReporter =\n/** @class */\nfunction () {\n  /**\r\n   * @param collection\r\n   * @param server_\r\n   */\n  function StatsReporter(collection, server_) {\n    this.server_ = server_;\n    this.statsToReport_ = {};\n    this.statsListener_ = new StatsListener(collection);\n    var timeout = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  StatsReporter.prototype.reportStats_ = function () {\n    var _this = this;\n\n    var stats = this.statsListener_.get();\n    var reportedStats = {};\n    var haveStatsToReport = false;\n    each(stats, function (stat, value) {\n      if (value > 0 && contains(_this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    } // queue our next run.\n\n\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\n  };\n\n  return StatsReporter;\n}();\n\nfunction statsReporterIncludeStat(reporter, stat) {\n  reporter.statsToReport_[stat] = true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\n\n\nvar EventQueue =\n/** @class */\nfunction () {\n  function EventQueue() {\n    this.eventLists_ = [];\n    /**\r\n     * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n     */\n\n    this.recursionDepth_ = 0;\n  }\n\n  return EventQueue;\n}();\n/**\r\n * @param eventDataList The new events to queue.\r\n */\n\n\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  var currList = null;\n\n  for (var i = 0; i < eventDataList.length; i++) {\n    var data = eventDataList[i];\n    var path = data.getPath();\n\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = {\n        events: [],\n        path: path\n      };\n    }\n\n    currList.events.push(data);\n  }\n\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path The path to raise events for.\r\n * @param eventDataList The new events to raise.\r\n */\n\n\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathEquals(eventPath, path);\n  });\n}\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath The path to raise events for.\r\n * @param eventDataList The events to raise\r\n */\n\n\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\n    return pathContains(eventPath, changedPath) || pathContains(changedPath, eventPath);\n  });\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\n  eventQueue.recursionDepth_++;\n  var sentAll = true;\n\n  for (var i = 0; i < eventQueue.eventLists_.length; i++) {\n    var eventList = eventQueue.eventLists_[i];\n\n    if (eventList) {\n      var eventPath = eventList.path;\n\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n/**\r\n * Iterates through the list and raises each event\r\n */\n\n\nfunction eventListRaise(eventList) {\n  for (var i = 0; i < eventList.events.length; i++) {\n    var eventData = eventList.events[i];\n\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      var eventFn = eventData.getEventRunner();\n\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n\n      exceptionGuard(eventFn);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\n\n\nvar EventEmitter =\n/** @class */\nfunction () {\n  function EventEmitter(allowedEvents_) {\n    this.allowedEvents_ = allowedEvents_;\n    this.listeners_ = {};\n    assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n  }\n  /**\r\n   * To be called by derived classes to trigger events.\r\n   */\n\n\n  EventEmitter.prototype.trigger = function (eventType) {\n    var varArgs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      varArgs[_i - 1] = arguments[_i];\n    }\n\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      var listeners = __spreadArray([], __read(this.listeners_[eventType]));\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  };\n\n  EventEmitter.prototype.on = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({\n      callback: callback,\n      context: context\n    });\n    var eventData = this.getInitialEvent(eventType);\n\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  };\n\n  EventEmitter.prototype.off = function (eventType, callback, context) {\n    this.validateEventType_(eventType);\n    var listeners = this.listeners_[eventType] || [];\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i].callback === callback && (!context || context === listeners[i].context)) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  };\n\n  EventEmitter.prototype.validateEventType_ = function (eventType) {\n    assert(this.allowedEvents_.find(function (et) {\n      return et === eventType;\n    }), 'Unknown event: ' + eventType);\n  };\n\n  return EventEmitter;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(VisibilityMonitor, _super);\n\n  function VisibilityMonitor() {\n    var _this = _super.call(this, ['visible']) || this;\n\n    var hidden;\n    var visibilityChange;\n\n    if (typeof document !== 'undefined' && typeof document.addEventListener !== 'undefined') {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    } // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n\n\n    _this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(visibilityChange, function () {\n        var visible = !document[hidden];\n\n        if (visible !== _this.visible_) {\n          _this.visible_ = visible;\n\n          _this.trigger('visible', visible);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  VisibilityMonitor.getInstance = function () {\n    return new VisibilityMonitor();\n  };\n\n  VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  };\n\n  return VisibilityMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\n\n\nvar OnlineMonitor =\n/** @class */\nfunction (_super) {\n  __extends(OnlineMonitor, _super);\n\n  function OnlineMonitor() {\n    var _this = _super.call(this, ['online']) || this;\n\n    _this.online_ = true; // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n\n    if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined' && !isMobileCordova()) {\n      window.addEventListener('online', function () {\n        if (!_this.online_) {\n          _this.online_ = true;\n\n          _this.trigger('online', true);\n        }\n      }, false);\n      window.addEventListener('offline', function () {\n        if (_this.online_) {\n          _this.online_ = false;\n\n          _this.trigger('online', false);\n        }\n      }, false);\n    }\n\n    return _this;\n  }\n\n  OnlineMonitor.getInstance = function () {\n    return new OnlineMonitor();\n  };\n\n  OnlineMonitor.prototype.getInitialEvent = function (eventType) {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  };\n\n  OnlineMonitor.prototype.currentlyOnline = function () {\n    return this.online_;\n  };\n\n  return OnlineMonitor;\n}(EventEmitter);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\n\n\nvar PacketReceiver =\n/** @class */\nfunction () {\n  /**\r\n   * @param onMessage_\r\n   */\n  function PacketReceiver(onMessage_) {\n    this.onMessage_ = onMessage_;\n    this.pendingResponses = [];\n    this.currentResponseNum = 0;\n    this.closeAfterResponse = -1;\n    this.onClose = null;\n  }\n\n  PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  };\n  /**\r\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n   * browsers will respond in the same order as the requests we sent\r\n   */\n\n\n  PacketReceiver.prototype.handleResponse = function (requestNum, data) {\n    var _this = this;\n\n    this.pendingResponses[requestNum] = data;\n\n    var _loop_1 = function _loop_1() {\n      var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\n      delete this_1.pendingResponses[this_1.currentResponseNum];\n\n      var _loop_2 = function _loop_2(i) {\n        if (toProcess[i]) {\n          exceptionGuard(function () {\n            _this.onMessage_(toProcess[i]);\n          });\n        }\n      };\n\n      for (var i = 0; i < toProcess.length; ++i) {\n        _loop_2(i);\n      }\n\n      if (this_1.currentResponseNum === this_1.closeAfterResponse) {\n        if (this_1.onClose) {\n          this_1.onClose();\n          this_1.onClose = null;\n        }\n\n        return \"break\";\n      }\n\n      this_1.currentResponseNum++;\n    };\n\n    var this_1 = this;\n\n    while (this.pendingResponses[this.currentResponseNum]) {\n      var state_1 = _loop_1();\n\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  return PacketReceiver;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// URL query parameters associated with longpolling\n\n\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe'; //Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\n\nvar MAX_URL_DATA_SIZE = 1870;\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\n\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\n\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\n\nvar LP_CONNECT_TIMEOUT = 30000;\n/**\r\n * This class manages a single long-polling connection.\r\n */\n\nvar BrowserPollConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId An identifier for this connection, used for logging\r\n   * @param repoInfo The info for the endpoint to send data to.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n   *                                         transport session\r\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n   *                                     connection previously\r\n   */\n  function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.repoInfo = repoInfo;\n    this.applicationId = applicationId;\n    this.transportSessionId = transportSessionId;\n    this.lastSessionId = lastSessionId;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.everConnected_ = false;\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n\n    this.urlFn = function (params) {\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n    this.connectTimeoutTimer_ = setTimeout(function () {\n      _this.log_('Timed out trying to connect.'); // Make sure we clear the host cache\n\n\n      _this.onClosed_();\n\n      _this.connectTimeoutTimer_ = null; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)); // Ensure we delay the creation of the iframe until the DOM is loaded.\n\n    executeWhenDOMReady(function () {\n      if (_this.isClosed_) {\n        return;\n      } //Set up a callback that gets triggered once a connection is set up.\n\n\n      _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 5),\n            command = _a[0],\n            arg1 = _a[1],\n            arg2 = _a[2],\n            arg3 = _a[3],\n            arg4 = _a[4];\n\n        _this.incrementIncomingBytes_(args);\n\n        if (!_this.scriptTagHolder) {\n          return; // we closed the connection.\n        }\n\n        if (_this.connectTimeoutTimer_) {\n          clearTimeout(_this.connectTimeoutTimer_);\n          _this.connectTimeoutTimer_ = null;\n        }\n\n        _this.everConnected_ = true;\n\n        if (command === FIREBASE_LONGPOLL_START_PARAM) {\n          _this.id = arg1;\n          _this.password = arg2;\n        } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n          // Don't clear the host cache. We got a response from the server, so we know it's reachable\n          if (arg1) {\n            // We aren't expecting any more data (other than what the server's already in the process of sending us\n            // through our already open polls), so don't send any more.\n            _this.scriptTagHolder.sendNewPolls = false; // arg1 in this case is the last response number sent by the server. We should try to receive\n            // all of the responses up to this one before closing\n\n            _this.myPacketOrderer.closeAfter(arg1, function () {\n              _this.onClosed_();\n            });\n          } else {\n            _this.onClosed_();\n          }\n        } else {\n          throw new Error('Unrecognized command received: ' + command);\n        }\n      }, function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var _a = __read(args, 2),\n            pN = _a[0],\n            data = _a[1];\n\n        _this.incrementIncomingBytes_(args);\n\n        _this.myPacketOrderer.handleResponse(pN, data);\n      }, function () {\n        _this.onClosed_();\n      }, _this.urlFn); //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\n\n      if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n      if (_this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\n      }\n\n      if (_this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\n      }\n\n      if (_this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\n      }\n\n      if (typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n\n      var connectURL = _this.urlFn(urlParams);\n\n      _this.log_('Connecting via long-poll to ' + connectURL);\n\n      _this.scriptTagHolder.addTag(connectURL, function () {\n        /* do nothing */\n      });\n    });\n  };\n  /**\r\n   * Call this when a handshake has completed successfully and we want to consider the connection established\r\n   */\n\n\n  BrowserPollConnection.prototype.start = function () {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  };\n  /**\r\n   * Forces long polling to be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceAllow = function () {\n    BrowserPollConnection.forceAllow_ = true;\n  };\n  /**\r\n   * Forces longpolling to not be considered as a potential transport\r\n   */\n\n\n  BrowserPollConnection.forceDisallow = function () {\n    BrowserPollConnection.forceDisallow_ = true;\n  }; // Static method, use string literal so it can be accessed in a generic way\n\n\n  BrowserPollConnection.isAvailable = function () {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return !BrowserPollConnection.forceDisallow_ && typeof document !== 'undefined' && document.createElement != null && !isChromeExtensionContentScript() && !isWindowsStoreApp();\n    }\n  };\n  /**\r\n   * No-op for polling\r\n   */\n\n\n  BrowserPollConnection.prototype.markConnectionHealthy = function () {};\n  /**\r\n   * Stops polling and cleans up the iframe\r\n   */\n\n\n  BrowserPollConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    } //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n\n\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  };\n  /**\r\n   * Triggered when this transport is closed\r\n   */\n\n\n  BrowserPollConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n   * that we've left.\r\n   */\n\n\n  BrowserPollConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n   * broken into chunks (since URLs have a small maximum length).\r\n   * @param data The JSON data to transmit.\r\n   */\n\n\n  BrowserPollConnection.prototype.send = function (data) {\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //first, lets get the base64-encoded data\n\n    var base64data = base64Encode(dataStr); //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE); //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\n      this.curSegmentNum++;\n    }\n  };\n  /**\r\n   * This is how we notify the server that we're leaving.\r\n   * We aren't able to send requests with DHTML on a window close event, but we can\r\n   * trigger XHR requests in some browsers (everything but Opera basically).\r\n   */\n\n\n  BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\n    if (isNodeSdk()) {\n      return;\n    }\n\n    this.myDisconnFrame = document.createElement('iframe');\n    var urlParams = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n    document.body.appendChild(this.myDisconnFrame);\n  };\n  /**\r\n   * Used to track the bytes received by this client\r\n   */\n\n\n  BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    var bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  };\n\n  return BrowserPollConnection;\n}();\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\n\n\nvar FirebaseIFrameScriptHolder =\n/** @class */\nfunction () {\n  /**\r\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n   */\n  function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\n    this.onDisconnect = onDisconnect;\n    this.urlFn = urlFn; //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n    //problems in some browsers.\n\n    this.outstandingRequests = new Set(); //A queue of the pending segments waiting for transmission to the server.\n\n    this.pendingSegs = []; //A serial number. We use this for two things:\n    // 1) A way to ensure the browser doesn't cache responses to polls\n    // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n    //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n    //    JSONP code in the order it was added to the iframe.\n\n    this.currentSerial = Math.floor(Math.random() * 100000000); // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n    // incoming data from the server that we're waiting for).\n\n    this.sendNewPolls = true;\n\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB; //Create an iframe for us to add script tags to.\n\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_(); // Set the iframe's contents.\n\n      var script = ''; // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n\n      if (this.myIFrame.src && this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\n        var currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n\n      var iframeContents = '<html><body>' + script + '</body></html>';\n\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n\n        if (e.stack) {\n          log(e.stack);\n        }\n\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n  /**\r\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n   * actually use.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.createIFrame_ = function () {\n    var iframe = document.createElement('iframe');\n    iframe.style.display = 'none'; // This is necessary in order to initialize the document inside the iframe\n\n    if (document.body) {\n      document.body.appendChild(iframe);\n\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        var a = iframe.contentWindow.document;\n\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        var domain = document.domain;\n        iframe.src = \"javascript:void((function(){document.open();document.domain='\" + domain + \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    } // Get the document of the iframe in a browser-specific way.\n\n\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if (iframe.document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = iframe.document; //others?\n    }\n\n    return iframe;\n  };\n  /**\r\n   * Cancel all outstanding queries and remove the frame.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.close = function () {\n    var _this = this; //Mark this iframe as dead, so no new requests are sent.\n\n\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(function () {\n        if (_this.myIFrame !== null) {\n          document.body.removeChild(_this.myIFrame);\n          _this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    } // Protect from being called recursively.\n\n\n    var onDisconnect = this.onDisconnect;\n\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  };\n  /**\r\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n   * @param id - The ID of this connection\r\n   * @param pw - The password for this connection\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true; //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n\n    while (this.newRequest_()) {}\n  };\n  /**\r\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n   * too many outstanding requests and we are still alive.\r\n   *\r\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n   * needed.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (this.alive && this.sendNewPolls && this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\n      //construct our url\n      this.currentSerial++;\n      var urlParams = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      var theURL = this.urlFn(urlParams); //Now add as much data as we can.\n\n      var curDataString = '';\n      var i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        var nextSeg = this.pendingSegs[0];\n\n        if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <= MAX_URL_DATA_SIZE) {\n          //great, the segment will fit. Lets append it.\n          var theSeg = this.pendingSegs.shift();\n          curDataString = curDataString + '&' + FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM + i + '=' + theSeg.seg + '&' + FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET + i + '=' + theSeg.ts + '&' + FIREBASE_LONGPOLL_DATA_PARAM + i + '=' + theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\r\n   * Queue a packet for transmission to the server.\r\n   * @param segnum - A sequential id for this packet segment used for reassembly\r\n   * @param totalsegs - The total number of segments in this packet\r\n   * @param data - The data for this segment.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({\n      seg: segnum,\n      ts: totalsegs,\n      d: data\n    }); //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n\n    if (this.alive) {\n      this.newRequest_();\n    }\n  };\n  /**\r\n   * Add a script tag for a regular long-poll request.\r\n   * @param url - The URL of the script tag.\r\n   * @param serial - The serial number of the request.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\n    var _this = this; //remember that we sent this request.\n\n\n    this.outstandingRequests.add(serial);\n\n    var doNewRequest = function doNewRequest() {\n      _this.outstandingRequests.delete(serial);\n\n      _this.newRequest_();\n    }; // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n\n\n    var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\n\n    var readyStateCB = function readyStateCB() {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout); // Trigger a new request so we can continue receiving data.\n\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  };\n  /**\r\n   * Add an arbitrary script tag to the iframe.\r\n   * @param url - The URL for the script tag source.\r\n   * @param loadCB - A callback to be triggered once the script has loaded.\r\n   */\n\n\n  FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\n    var _this = this;\n\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(function () {\n        try {\n          // if we're already closed, don't add this poll\n          if (!_this.sendNewPolls) {\n            return;\n          }\n\n          var newScript_1 = _this.myIFrame.doc.createElement('script');\n\n          newScript_1.type = 'text/javascript';\n          newScript_1.async = true;\n          newScript_1.src = url; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n          newScript_1.onload = newScript_1.onreadystatechange = function () {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var rstate = newScript_1.readyState;\n\n            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              newScript_1.onload = newScript_1.onreadystatechange = null;\n\n              if (newScript_1.parentNode) {\n                newScript_1.parentNode.removeChild(newScript_1);\n              }\n\n              loadCB();\n            }\n          };\n\n          newScript_1.onerror = function () {\n            log('Long-poll script failed to load: ' + url);\n            _this.sendNewPolls = false;\n\n            _this.close();\n          };\n\n          _this.myIFrame.doc.body.appendChild(newScript_1);\n        } catch (e) {// TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  };\n\n  return FirebaseIFrameScriptHolder;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** The semver (www.semver.org) version of the SDK. */\n\n\nvar SDK_VERSION = ''; // SDK_VERSION should be set before any database instance is created\n\nfunction setSDKVersion(version) {\n  SDK_VERSION = version;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\n\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\n\n\nvar WebSocketConnection =\n/** @class */\nfunction () {\n  /**\r\n   * @param connId identifier for this transport\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param applicationId The Firebase App ID for this project.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   */\n  function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\n    this.connId = connId;\n    this.applicationId = applicationId;\n    this.keepaliveTimer = null;\n    this.frames = null;\n    this.totalFrames = 0;\n    this.bytesSent = 0;\n    this.bytesReceived = 0;\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n  /**\r\n   * @param repoInfo The info for the websocket endpoint.\r\n   * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n   *                                         session\r\n   * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n   * @return connection url\r\n   */\n\n\n  WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n    var urlParams = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (!isNodeSdk() && typeof location !== 'undefined' && location.hostname && FORGE_DOMAIN_RE.test(location.hostname)) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  };\n  /**\r\n   * @param onMessage Callback when messages arrive\r\n   * @param onDisconnect Callback with connection lost.\r\n   */\n\n\n  WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n    var _this = this;\n\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n    this.log_('Websocket connecting to ' + this.connURL);\n    this.everConnected_ = false; // Assume failure until proven otherwise.\n\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        var device = this.nodeAdmin ? 'AdminNode' : 'Node'; // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n\n        var options = {\n          headers: {\n            'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        }; // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n\n        var env = process['env'];\n        var proxy = this.connURL.indexOf('wss://') === 0 ? env['HTTPS_PROXY'] || env['https_proxy'] : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = {\n            origin: proxy\n          };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        var options = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      var error = e.message || e.data;\n\n      if (error) {\n        this.log_(error);\n      }\n\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = function () {\n      _this.log_('Websocket connected.');\n\n      _this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = function () {\n      _this.log_('Websocket connection was disconnected.');\n\n      _this.mySock = null;\n\n      _this.onClosed_();\n    };\n\n    this.mySock.onmessage = function (m) {\n      _this.handleIncomingFrame(m);\n    };\n\n    this.mySock.onerror = function (e) {\n      _this.log_('WebSocket error.  Closing connection.'); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var error = e.message || e.data;\n\n      if (error) {\n        _this.log_(error);\n      }\n\n      _this.onClosed_();\n    };\n  };\n  /**\r\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n   */\n\n\n  WebSocketConnection.prototype.start = function () {};\n\n  WebSocketConnection.forceDisallow = function () {\n    WebSocketConnection.forceDisallow_ = true;\n  };\n\n  WebSocketConnection.isAvailable = function () {\n    var isOldAndroid = false;\n\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return !isOldAndroid && WebSocketImpl !== null && !WebSocketConnection.forceDisallow_;\n  };\n  /**\r\n   * Returns true if we previously failed to connect with this transport.\r\n   */\n\n\n  WebSocketConnection.previouslyFailed = function () {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return PersistentStorage.isInMemoryStorage || PersistentStorage.get('previous_websocket_failure') === true;\n  };\n\n  WebSocketConnection.prototype.markConnectionHealthy = function () {\n    PersistentStorage.remove('previous_websocket_failure');\n  };\n\n  WebSocketConnection.prototype.appendFrame_ = function (data) {\n    this.frames.push(data);\n\n    if (this.frames.length === this.totalFrames) {\n      var fullMess = this.frames.join('');\n      this.frames = null;\n      var jsonMess = jsonEval(fullMess); //handle the message\n\n      this.onMessage(jsonMess);\n    }\n  };\n  /**\r\n   * @param frameCount The number of frames we are expecting from the server\r\n   */\n\n\n  WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  };\n  /**\r\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n   * @return Any remaining data to be process, or null if there is none\r\n   */\n\n\n  WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n    assert(this.frames === null, 'We already have a frame buffer'); // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n\n    if (data.length <= 6) {\n      var frameCount = Number(data);\n\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n\n    this.handleNewFrameCount_(1);\n    return data;\n  };\n  /**\r\n   * Process a websocket frame that has arrived from the server.\r\n   * @param mess The frame data\r\n   */\n\n\n  WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n\n    var data = mess['data'];\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      var remainingData = this.extractFrameCount_(data);\n\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  };\n  /**\r\n   * Send a message to the server\r\n   * @param data The JSON object to transmit\r\n   */\n\n\n  WebSocketConnection.prototype.send = function (data) {\n    this.resetKeepAlive();\n    var dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length); //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE); //Send the length header\n\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    } //Send the actual data in segments.\n\n\n    for (var i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  };\n\n  WebSocketConnection.prototype.shutdown_ = function () {\n    this.isClosed_ = true;\n\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  };\n\n  WebSocketConnection.prototype.onClosed_ = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_(); // since this is an internal close, trigger the close listener\n\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  };\n  /**\r\n   * External-facing close handler.\r\n   * Close the websocket and kill the connection.\r\n   */\n\n\n  WebSocketConnection.prototype.close = function () {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  };\n  /**\r\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n   * the last activity.\r\n   */\n\n\n  WebSocketConnection.prototype.resetKeepAlive = function () {\n    var _this = this;\n\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(function () {\n      //If there has been no websocket activity for a while, send a no-op\n      if (_this.mySock) {\n        _this.sendString_('0');\n      }\n\n      _this.resetKeepAlive(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n  };\n  /**\r\n   * Send a string over the websocket.\r\n   *\r\n   * @param str String to send.\r\n   */\n\n\n  WebSocketConnection.prototype.sendString_ = function (str) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  };\n  /**\r\n   * Number of response before we consider the connection \"healthy.\"\r\n   */\n\n\n  WebSocketConnection.responsesRequiredToBeHealthy = 2;\n  /**\r\n   * Time to wait for the connection te become healthy before giving up.\r\n   */\n\n  WebSocketConnection.healthyTimeout = 30000;\n  return WebSocketConnection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\n\n\nvar TransportManager =\n/** @class */\nfunction () {\n  /**\r\n   * @param repoInfo Metadata around the namespace we're connecting to\r\n   */\n  function TransportManager(repoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\n    get: function get() {\n      return [BrowserPollConnection, WebSocketConnection];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  TransportManager.prototype.initTransports_ = function (repoInfo) {\n    var e_1, _a;\n\n    var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\n    var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      var transports = this.transports_ = [];\n\n      try {\n        for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var transport = _c.value;\n\n          if (transport && transport['isAvailable']()) {\n            transports.push(transport);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\r\n   * @return The constructor for the initial transport to use\r\n   */\n\n\n  TransportManager.prototype.initialTransport = function () {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  };\n  /**\r\n   * @return The constructor for the next transport, or null\r\n   */\n\n\n  TransportManager.prototype.upgradeTransport = function () {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  };\n\n  return TransportManager;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Abort upgrade attempt if it takes longer than 60s.\n\n\nvar UPGRADE_TIMEOUT = 60000; // For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\n\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000; // If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\n\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\nvar MESSAGE_TYPE = 't';\nvar MESSAGE_DATA = 'd';\nvar CONTROL_SHUTDOWN = 's';\nvar CONTROL_RESET = 'r';\nvar CONTROL_ERROR = 'e';\nvar CONTROL_PONG = 'o';\nvar SWITCH_ACK = 'a';\nvar END_TRANSMISSION = 'n';\nvar PING = 'p';\nvar SERVER_HELLO = 'h';\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  /**\r\n   * @param id - an id for this connection\r\n   * @param repoInfo_ - the info for the endpoint to connect to\r\n   * @param applicationId_ - the Firebase App ID for this project\r\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n   */\n  function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\n    this.id = id;\n    this.repoInfo_ = repoInfo_;\n    this.applicationId_ = applicationId_;\n    this.onMessage_ = onMessage_;\n    this.onReady_ = onReady_;\n    this.onDisconnect_ = onDisconnect_;\n    this.onKill_ = onKill_;\n    this.lastSessionId = lastSessionId;\n    this.connectionCount = 0;\n    this.pendingDataMessages = [];\n    this.state_ = 0\n    /* CONNECTING */\n    ;\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n  /**\r\n   * Starts a connection attempt\r\n   */\n\n\n  Connection.prototype.start_ = function () {\n    var _this = this;\n\n    var conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessageReceived = this.connReceiver_(this.conn_);\n    var onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n    /*\r\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n     * still have the context of your originating frame.\r\n     */\n\n    setTimeout(function () {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n    var healthyTimeoutMS = conn['healthyTimeout'] || 0;\n\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(function () {\n        _this.healthyTimeout_ = null;\n\n        if (!_this.isHealthy_) {\n          if (_this.conn_ && _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has received ' + _this.conn_.bytesReceived + ' bytes.  Marking connection healthy.');\n\n            _this.isHealthy_ = true;\n\n            _this.conn_.markConnectionHealthy();\n          } else if (_this.conn_ && _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\n            _this.log_('Connection exceeded healthy timeout but has sent ' + _this.conn_.bytesSent + ' bytes.  Leaving connection alive.'); // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n\n          } else {\n            _this.log_('Closing unhealthy connection after timeout.');\n\n            _this.close();\n          }\n        } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      }, Math.floor(healthyTimeoutMS));\n    }\n  };\n\n  Connection.prototype.nextTransportId_ = function () {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  };\n\n  Connection.prototype.disconnReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (everConnected) {\n      if (conn === _this.conn_) {\n        _this.onConnectionLost_(everConnected);\n      } else if (conn === _this.secondaryConn_) {\n        _this.log_('Secondary connection lost.');\n\n        _this.onSecondaryConnectionLost_();\n      } else {\n        _this.log_('closing an old connection');\n      }\n    };\n  };\n\n  Connection.prototype.connReceiver_ = function (conn) {\n    var _this = this;\n\n    return function (message) {\n      if (_this.state_ !== 2\n      /* DISCONNECTED */\n      ) {\n          if (conn === _this.rx_) {\n            _this.onPrimaryMessageReceived_(message);\n          } else if (conn === _this.secondaryConn_) {\n            _this.onSecondaryMessageReceived_(message);\n          } else {\n            _this.log_('message on old connection');\n          }\n        }\n    };\n  };\n  /**\r\n   * @param dataMsg An arbitrary data message to be sent to the server\r\n   */\n\n\n  Connection.prototype.sendRequest = function (dataMsg) {\n    // wrap in a data message envelope and send it on\n    var msg = {\n      t: 'd',\n      d: dataMsg\n    };\n    this.sendData_(msg);\n  };\n\n  Connection.prototype.tryCleanupConnection = function () {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null; // the server will shutdown the old connection\n    }\n  };\n\n  Connection.prototype.onSecondaryControl_ = function (controlData) {\n    if (MESSAGE_TYPE in controlData) {\n      var cmd = controlData[MESSAGE_TYPE];\n\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close(); // If we were already using this connection for something, than we need to fully close\n\n        if (this.tx_ === this.secondaryConn_ || this.rx_ === this.secondaryConn_) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  };\n\n  Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onSecondaryControl_(data);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  };\n\n  Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({\n        t: 'c',\n        d: {\n          t: PING,\n          d: {}\n        }\n      });\n    }\n  };\n\n  Connection.prototype.proceedWithUpgrade_ = function () {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start(); // send ack\n\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({\n      t: 'c',\n      d: {\n        t: SWITCH_ACK,\n        d: {}\n      }\n    }); // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n\n    this.log_('Ending transmission on primary');\n    this.conn_.send({\n      t: 'c',\n      d: {\n        t: END_TRANSMISSION,\n        d: {}\n      }\n    });\n    this.tx_ = this.secondaryConn_;\n    this.tryCleanupConnection();\n  };\n\n  Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    var layer = requireKey('t', parsedData);\n    var data = requireKey('d', parsedData);\n\n    if (layer === 'c') {\n      this.onControl_(data);\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  };\n\n  Connection.prototype.onDataMessage_ = function (message) {\n    this.onPrimaryResponse_(); // We don't do anything with data messages, just kick them up a level\n\n    this.onMessage_(message);\n  };\n\n  Connection.prototype.onPrimaryResponse_ = function () {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  };\n\n  Connection.prototype.onControl_ = function (controlData) {\n    var cmd = requireKey(MESSAGE_TYPE, controlData);\n\n    if (MESSAGE_DATA in controlData) {\n      var payload = controlData[MESSAGE_DATA];\n\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(payload);\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n\n        for (var i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  };\n  /**\r\n   * @param handshake The handshake data returned from the server\r\n   */\n\n\n  Connection.prototype.onHandshake_ = function (handshake) {\n    var timestamp = handshake.ts;\n    var version = handshake.v;\n    var host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host; // if we've already closed the connection, then don't bother trying to progress further\n\n    if (this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.conn_.start();\n        this.onConnectionEstablished_(this.conn_, timestamp);\n\n        if (PROTOCOL_VERSION !== version) {\n          warn('Protocol version mismatch detected');\n        } // TODO: do we want to upgrade? when? maybe a delay?\n\n\n        this.tryStartUpgrade_();\n      }\n  };\n\n  Connection.prototype.tryStartUpgrade_ = function () {\n    var conn = this.transportManager_.upgradeTransport();\n\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  };\n\n  Connection.prototype.startUpgrade_ = function (conn) {\n    var _this = this;\n\n    this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId); // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n\n    this.secondaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n    var onMessage = this.connReceiver_(this.secondaryConn_);\n    var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect); // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n\n    setTimeoutNonBlocking(function () {\n      if (_this.secondaryConn_) {\n        _this.log_('Timed out trying to upgrade.');\n\n        _this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  };\n\n  Connection.prototype.onReset_ = function (host) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host; // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n\n    if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.close();\n      } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  };\n\n  Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\n    var _this = this;\n\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = 1\n    /* CONNECTED */\n    ;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    } // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n\n\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(function () {\n        _this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  };\n\n  Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('sending ping on primary.');\n        this.sendData_({\n          t: 'c',\n          d: {\n            t: PING,\n            d: {}\n          }\n        });\n      }\n  };\n\n  Connection.prototype.onSecondaryConnectionLost_ = function () {\n    var conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  };\n  /**\r\n   * @param everConnected Whether or not the connection ever reached a server. Used to determine if\r\n   * we should flush the host cache\r\n   */\n\n\n  Connection.prototype.onConnectionLost_ = function (everConnected) {\n    this.conn_ = null; // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n\n    if (!everConnected && this.state_ === 0\n    /* CONNECTING */\n    ) {\n        this.log_('Realtime connection failed.'); // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n\n        if (this.repoInfo_.isCacheableHost()) {\n          PersistentStorage.remove('host:' + this.repoInfo_.host); // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n\n          this.repoInfo_.internalHost = this.repoInfo_.host;\n        }\n      } else if (this.state_ === 1\n    /* CONNECTED */\n    ) {\n        this.log_('Realtime connection lost.');\n      }\n\n    this.close();\n  };\n\n  Connection.prototype.onConnectionShutdown_ = function (reason) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    } // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n\n\n    this.onDisconnect_ = null;\n    this.close();\n  };\n\n  Connection.prototype.sendData_ = function (data) {\n    if (this.state_ !== 1\n    /* CONNECTED */\n    ) {\n        throw 'Connection is not connected';\n      } else {\n      this.tx_.send(data);\n    }\n  };\n  /**\r\n   * Cleans up this connection, calling the appropriate callbacks\r\n   */\n\n\n  Connection.prototype.close = function () {\n    if (this.state_ !== 2\n    /* DISCONNECTED */\n    ) {\n        this.log_('Closing realtime connection.');\n        this.state_ = 2\n        /* DISCONNECTED */\n        ;\n        this.closeConnections_();\n\n        if (this.onDisconnect_) {\n          this.onDisconnect_();\n          this.onDisconnect_ = null;\n        }\n      }\n  };\n\n  Connection.prototype.closeConnections_ = function () {\n    this.log_('Shutting down all connections');\n\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  };\n\n  return Connection;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\n\n\nvar ServerActions =\n/** @class */\nfunction () {\n  function ServerActions() {}\n\n  ServerActions.prototype.put = function (pathString, data, onComplete, hash) {};\n\n  ServerActions.prototype.merge = function (pathString, data, onComplete, hash) {};\n  /**\r\n   * Refreshes the auth token for the current connection.\r\n   * @param token The authentication token\r\n   */\n\n\n  ServerActions.prototype.refreshAuthToken = function (token) {};\n\n  ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) {};\n\n  ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) {};\n\n  ServerActions.prototype.reportStats = function (stats) {};\n\n  return ServerActions;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\n\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\n\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\n\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill'; // If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\n\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\n\nvar PersistentConnection =\n/** @class */\nfunction (_super) {\n  __extends(PersistentConnection, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param applicationId_ The Firebase App ID for this project\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.applicationId_ = applicationId_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.onConnectStatus_ = onConnectStatus_;\n    _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    _this.authOverride_ = authOverride_; // Used for diagnostic logging.\n\n    _this.id = PersistentConnection.nextPersistentConnectionId_++;\n    _this.log_ = logWrapper('p:' + _this.id + ':');\n    _this.interruptReasons_ = {};\n    /** Map<path, Map<queryId, ListenSpec>> */\n\n    _this.listens = new Map();\n    _this.outstandingPuts_ = [];\n    _this.outstandingGets_ = [];\n    _this.outstandingPutCount_ = 0;\n    _this.outstandingGetCount_ = 0;\n    _this.onDisconnectRequestQueue_ = [];\n    _this.connected_ = false;\n    _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n    _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n    _this.securityDebugCallback_ = null;\n    _this.lastSessionId = null;\n    _this.establishConnectionTimer_ = null;\n    _this.visible_ = false; // Before we get connected, we keep a queue of pending messages to send.\n\n    _this.requestCBHash_ = {};\n    _this.requestNumber_ = 0;\n    _this.realtime_ = null;\n    _this.authToken_ = null;\n    _this.forceTokenRefresh_ = false;\n    _this.invalidAuthTokenCount_ = 0;\n    _this.firstConnection_ = true;\n    _this.lastConnectionAttemptTime_ = null;\n    _this.lastConnectionEstablishedTime_ = null;\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n    }\n\n    _this.scheduleConnect_(0);\n\n    VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n    }\n\n    return _this;\n  }\n\n  PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n    var curReqNum = ++this.requestNumber_;\n    var msg = {\n      r: curReqNum,\n      a: action,\n      b: body\n    };\n    this.log_(stringify(msg));\n    assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n    this.realtime_.sendRequest(msg);\n\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  };\n\n  PersistentConnection.prototype.get = function (query) {\n    var _this = this;\n\n    var deferred = new Deferred();\n    var request = {\n      p: query.path.toString(),\n      q: query.queryObject()\n    };\n    var outstandingGet = {\n      action: 'g',\n      request: request,\n      onComplete: function onComplete(message) {\n        var payload = message['d'];\n\n        if (message['s'] === 'ok') {\n          _this.onDataUpdate_(request['p'], payload,\n          /*isMerge*/\n          false,\n          /*tag*/\n          null);\n\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    var index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(function () {\n        var get = _this.outstandingGets_[index];\n\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n\n        delete _this.outstandingGets_[index];\n        _this.outstandingGetCount_--;\n\n        if (_this.outstandingGetCount_ === 0) {\n          _this.outstandingGets_ = [];\n        }\n\n        _this.log_('get ' + index + ' timed out on connection');\n\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var queryId = query.queryIdentifier();\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n    assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\n    var listenSpec = {\n      onComplete: onComplete,\n      hashFn: currentHashFn,\n      query: query,\n      tag: tag\n    };\n    this.listens.get(pathString).set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  };\n\n  PersistentConnection.prototype.sendGet_ = function (index) {\n    var _this = this;\n\n    var get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, function (message) {\n      delete _this.outstandingGets_[index];\n      _this.outstandingGetCount_--;\n\n      if (_this.outstandingGetCount_ === 0) {\n        _this.outstandingGets_ = [];\n      }\n\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  };\n\n  PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n    var _this = this;\n\n    var query = listenSpec.query;\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'q'; // Only bother to send query if it's non-default.\n\n    if (listenSpec.tag) {\n      req['q'] = query.queryObject();\n      req['t'] = listenSpec.tag;\n    }\n\n    req[\n    /*hash*/\n    'h'] = listenSpec.hashFn();\n    this.sendRequest(action, req, function (message) {\n      var payload = message[\n      /*data*/\n      'd'];\n      var status = message[\n      /*status*/\n      's']; // print warnings in any case...\n\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      var currentListenSpec = _this.listens.get(pathString) && _this.listens.get(pathString).get(queryId); // only trigger actions if the listen hasn't been removed and readded\n\n\n      if (currentListenSpec === listenSpec) {\n        _this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          _this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  };\n\n  PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var warnings = safeGet(payload, 'w');\n\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\n        var indexPath = query.path.toString();\n        warn(\"Using an unspecified index. Your data will be downloaded and \" + (\"filtered on the client. Consider adding \" + indexSpec + \" at \") + (indexPath + \" to your security rules for better performance.\"));\n      }\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.refreshAuthToken = function (token) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, function () {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  };\n\n  PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    var isFirebaseSecret = credential && credential.length === 40;\n\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  };\n  /**\r\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n   * a auth revoked (the connection is closed).\r\n   */\n\n\n  PersistentConnection.prototype.tryAuth = function () {\n    var _this = this;\n\n    if (this.connected_ && this.authToken_) {\n      var token_1 = this.authToken_;\n      var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\n      var requestData = {\n        cred: token_1\n      };\n\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n\n      this.sendRequest(authMethod, requestData, function (res) {\n        var status = res[\n        /*status*/\n        's'];\n        var data = res[\n        /*data*/\n        'd'] || 'error';\n\n        if (_this.authToken_ === token_1) {\n          if (status === 'ok') {\n            _this.invalidAuthTokenCount_ = 0;\n          } else {\n            // Triggers reconnect and force refresh for auth token\n            _this.onAuthRevoked_(status, data);\n          }\n        }\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.unlisten = function (query, tag) {\n    var pathString = query.path.toString();\n    var queryId = query.queryIdentifier();\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n    assert(query.getQueryParams().isDefault() || !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n    }\n  };\n\n  PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n    var req = {\n      /*path*/\n      p: pathString\n    };\n    var action = 'n'; // Only bother sending queryId if it's non-default.\n\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'o',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'om',\n        data: data,\n        onComplete: onComplete\n      });\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString: pathString,\n        action: 'oc',\n        data: null,\n        onComplete: onComplete\n      });\n    }\n  };\n\n  PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, function (response) {\n      if (onComplete) {\n        setTimeout(function () {\n          onComplete(response[\n          /*status*/\n          's'], response[\n          /* data */\n          'd']);\n        }, Math.floor(0));\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  };\n\n  PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n    var request = {\n      /*path*/\n      p: pathString,\n\n      /*data*/\n      d: data\n    };\n\n    if (hash !== undefined) {\n      request[\n      /*hash*/\n      'h'] = hash;\n    } // TODO: Only keep track of the most recent put for a given path?\n\n\n    this.outstandingPuts_.push({\n      action: action,\n      request: request,\n      onComplete: onComplete\n    });\n    this.outstandingPutCount_++;\n    var index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  };\n\n  PersistentConnection.prototype.sendPut_ = function (index) {\n    var _this = this;\n\n    var action = this.outstandingPuts_[index].action;\n    var request = this.outstandingPuts_[index].request;\n    var onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n    this.sendRequest(action, request, function (message) {\n      _this.log_(action + ' response', message);\n\n      delete _this.outstandingPuts_[index];\n      _this.outstandingPutCount_--; // Clean up array occasionally.\n\n      if (_this.outstandingPutCount_ === 0) {\n        _this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(message[\n        /*status*/\n        's'], message[\n        /* data */\n        'd']);\n      }\n    });\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  PersistentConnection.prototype.reportStats = function (stats) {\n    var _this = this; // If we're not connected, we just drop the stats.\n\n\n    if (this.connected_) {\n      var request = {\n        /*counters*/\n        c: stats\n      };\n      this.log_('reportStats', request);\n      this.sendRequest(\n      /*stats*/\n      's', request, function (result) {\n        var status = result[\n        /*status*/\n        's'];\n\n        if (status !== 'ok') {\n          var errorReason = result[\n          /* data */\n          'd'];\n\n          _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.onDataMessage_ = function (message) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      var reqNum = message['r'];\n      var onResponse = this.requestCBHash_[reqNum];\n\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[\n        /*body*/\n        'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'], message['b']);\n    }\n  };\n\n  PersistentConnection.prototype.onDataPush_ = function (action, body) {\n    this.log_('handleServerMessage', action, body);\n\n    if (action === 'd') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge*/\n      false, body['t']);\n    } else if (action === 'm') {\n      this.onDataUpdate_(body[\n      /*path*/\n      'p'], body[\n      /*data*/\n      'd'],\n      /*isMerge=*/\n      true, body['t']);\n    } else if (action === 'c') {\n      this.onListenRevoked_(body[\n      /*path*/\n      'p'], body[\n      /*query*/\n      'q']);\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(body[\n      /*status code*/\n      's'], body[\n      /* explanation */\n      'd']);\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error('Unrecognized action received from server: ' + stringify(action) + '\\nAre you using the latest client?');\n    }\n  };\n\n  PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  };\n\n  PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n    var _this = this;\n\n    assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    } // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n\n    this.establishConnectionTimer_ = setTimeout(function () {\n      _this.establishConnectionTimer_ = null;\n\n      _this.establishConnection_(); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    }, Math.floor(timeout));\n  };\n\n  PersistentConnection.prototype.onVisible_ = function (visible) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (visible && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n\n    this.visible_ = visible;\n  };\n\n  PersistentConnection.prototype.onOnline_ = function (online) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null; // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n\n    this.cancelSentTransactions_(); // Clear out the pending requests.\n\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n      var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n      reconnectDelay = Math.random() * reconnectDelay;\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay); // Adjust reconnect delay for next time.\n\n      this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n    }\n\n    this.onConnectStatus_(false);\n  };\n\n  PersistentConnection.prototype.establishConnection_ = function () {\n    var _this = this;\n\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      var onDataMessage_1 = this.onDataMessage_.bind(this);\n      var onReady_1 = this.onReady_.bind(this);\n      var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n      var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      var self_1 = this;\n      var lastSessionId_1 = this.lastSessionId;\n      var canceled_1 = false;\n      var connection_1 = null;\n\n      var closeFn_1 = function closeFn_1() {\n        if (connection_1) {\n          connection_1.close();\n        } else {\n          canceled_1 = true;\n          onDisconnect_1();\n        }\n      };\n\n      var sendRequestFn = function sendRequestFn(msg) {\n        assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n        connection_1.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn_1,\n        sendRequest: sendRequestFn\n      };\n      var forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false; // First fetch auth token, and establish connection after fetching the token was successful\n\n      this.authTokenProvider_.getToken(forceRefresh).then(function (result) {\n        if (!canceled_1) {\n          log('getToken() completed. Creating connection.');\n          self_1.authToken_ = result && result.accessToken;\n          connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1,\n          /* onKill= */\n          function (reason) {\n            warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n            self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n          }, lastSessionId_1);\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      }).then(null, function (error) {\n        self_1.log_('Failed to get token: ' + error);\n\n        if (!canceled_1) {\n          if (_this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n\n          closeFn_1();\n        }\n      });\n    }\n  };\n\n  PersistentConnection.prototype.interrupt = function (reason) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.resume = function (reason) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  };\n\n  PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n    var delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({\n      serverTimeOffset: delta\n    });\n  };\n\n  PersistentConnection.prototype.cancelSentTransactions_ = function () {\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      var put = this.outstandingPuts_[i];\n\n      if (put &&\n      /*hash*/\n      'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    } // Clean up array occasionally.\n\n\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  };\n\n  PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    var queryId;\n\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(function (q) {\n        return ObjectToUniqueKey(q);\n      }).join('$');\n    }\n\n    var listen = this.removeListen_(pathString, queryId);\n\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  };\n\n  PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n    var normalizedPathString = new Path(pathString).toString(); // normalize path.\n\n    var listen;\n\n    if (this.listens.has(normalizedPathString)) {\n      var map = this.listens.get(normalizedPathString);\n      listen = map.get(queryId);\n      map.delete(queryId);\n\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n\n    return listen;\n  };\n\n  PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n\n      if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS; // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  };\n\n  PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n      }\n    }\n  };\n\n  PersistentConnection.prototype.restoreState_ = function () {\n    var e_1, _a, e_2, _b; //Re-authenticate ourselves if we have a credential stored.\n\n\n    this.tryAuth();\n\n    try {\n      // Puts depend on having received the corresponding data update from the server before they complete, so we must\n      // make sure to send listens before puts.\n      for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var queries = _d.value;\n\n        try {\n          for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var listenSpec = _f.value;\n            this.sendListen_(listenSpec);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    for (var i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      var request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n    }\n\n    for (var i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  };\n  /**\r\n   * Sends client stats for first connection\r\n   */\n\n\n  PersistentConnection.prototype.sendConnectStats_ = function () {\n    var stats = {};\n    var clientName = 'js';\n\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n\n    this.reportStats(stats);\n  };\n\n  PersistentConnection.prototype.shouldReconnect_ = function () {\n    var online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  };\n\n  PersistentConnection.nextPersistentConnectionId_ = 0;\n  /**\r\n   * Counter for number of connections created. Mainly used for tagging in the logs\r\n   */\n\n  PersistentConnection.nextConnectionId_ = 0;\n  return PersistentConnection;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\n\n\nvar ReadonlyRestClient =\n/** @class */\nfunction (_super) {\n  __extends(ReadonlyRestClient, _super);\n  /**\r\n   * @param repoInfo_ Data about the namespace we are connecting to\r\n   * @param onDataUpdate_ A callback for new data from the server\r\n   */\n\n\n  function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n    var _this = _super.call(this) || this;\n\n    _this.repoInfo_ = repoInfo_;\n    _this.onDataUpdate_ = onDataUpdate_;\n    _this.authTokenProvider_ = authTokenProvider_;\n    /** @private {function(...[*])} */\n\n    _this.log_ = logWrapper('p:rest:');\n    /**\r\n     * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n     * that's been removed. :-/\r\n     */\n\n    _this.listens_ = {};\n    return _this;\n  }\n\n  ReadonlyRestClient.prototype.reportStats = function (stats) {\n    throw new Error('Method not implemented.');\n  };\n\n  ReadonlyRestClient.getListenId_ = function (query, tag) {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n      return query.path.toString();\n    }\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n    var _this = this;\n\n    var pathString = query.path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier()); // Mark this listener so we can tell if it's removed.\n\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    var thisListen = {};\n    this.listens_[listenId] = thisListen;\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false, tag);\n      }\n\n      if (safeGet(_this.listens_, listenId) === thisListen) {\n        var status_1;\n\n        if (!error) {\n          status_1 = 'ok';\n        } else if (error === 401) {\n          status_1 = 'permission_denied';\n        } else {\n          status_1 = 'rest_error:' + error;\n        }\n\n        onComplete(status_1, null);\n      }\n    });\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n    var listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  };\n\n  ReadonlyRestClient.prototype.get = function (query) {\n    var _this = this;\n\n    var queryStringParameters = queryParamsToRestQueryStringParameters(query.getQueryParams());\n    var pathString = query.path.toString();\n    var deferred = new Deferred();\n    this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\n      var data = result;\n\n      if (error === 404) {\n        data = null;\n        error = null;\n      }\n\n      if (error === null) {\n        _this.onDataUpdate_(pathString, data,\n        /*isMerge=*/\n        false,\n        /*tag=*/\n        null);\n\n        deferred.resolve(data);\n      } else {\n        deferred.reject(new Error(data));\n      }\n    });\n    return deferred.promise;\n  };\n  /** @inheritDoc */\n\n\n  ReadonlyRestClient.prototype.refreshAuthToken = function (token) {// no-op since we just always call getToken.\n  };\n  /**\r\n   * Performs a REST request to the given path, with the provided query string parameters,\r\n   * and any auth credentials we have.\r\n   */\n\n\n  ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n    var _this = this;\n\n    if (queryStringParameters === void 0) {\n      queryStringParameters = {};\n    }\n\n    queryStringParameters['format'] = 'export';\n    this.authTokenProvider_.getToken(\n    /*forceRefresh=*/\n    false).then(function (authTokenData) {\n      var authToken = authTokenData && authTokenData.accessToken;\n\n      if (authToken) {\n        queryStringParameters['auth'] = authToken;\n      }\n\n      var url = (_this.repoInfo_.secure ? 'https://' : 'http://') + _this.repoInfo_.host + pathString + '?' + 'ns=' + _this.repoInfo_.namespace + querystring(queryStringParameters);\n\n      _this.log_('Sending REST request for ' + url);\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onreadystatechange = function () {\n        if (callback && xhr.readyState === 4) {\n          _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n\n          var res = null;\n\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn('Failed to parse JSON response for ' + url + ': ' + xhr.responseText);\n            }\n\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn('Got unsuccessful REST response for ' + url + ' Status: ' + xhr.status);\n            }\n\n            callback(xhr.status);\n          }\n\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url,\n      /*asynchronous=*/\n      true);\n      xhr.send();\n    });\n  };\n\n  return ReadonlyRestClient;\n}(ServerActions);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\n\n\nvar DataSnapshot =\n/** @class */\nfunction () {\n  /**\r\n   * @param node_ A SnapshotNode to wrap.\r\n   * @param ref_ The ref of the location this snapshot came from.\r\n   * @param index_ The iteration order for this snapshot\r\n   */\n  function DataSnapshot(node_, ref_, index_) {\n    this.node_ = node_;\n    this.ref_ = ref_;\n    this.index_ = index_;\n  }\n  /**\r\n   * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n   * empty.\r\n   *\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.val = function () {\n    validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n    return this.node_.val();\n  };\n  /**\r\n   * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n   * the entire node contents.\r\n   * @return JSON representation of the DataSnapshot contents, or null if empty.\r\n   */\n\n\n  DataSnapshot.prototype.exportVal = function () {\n    validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n    return this.node_.val(true);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  DataSnapshot.prototype.toJSON = function () {\n    // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n    validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n    return this.exportVal();\n  };\n  /**\r\n   * Returns whether the snapshot contains a non-null value.\r\n   *\r\n   * @return Whether the snapshot contains a non-null value, or is empty.\r\n   */\n\n\n  DataSnapshot.prototype.exists = function () {\n    validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n    return !this.node_.isEmpty();\n  };\n  /**\r\n   * Returns a DataSnapshot of the specified child node's contents.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return DataSnapshot for child node.\r\n   */\n\n\n  DataSnapshot.prototype.child = function (childPathString) {\n    validateArgCount('DataSnapshot.child', 0, 1, arguments.length); // Ensure the childPath is a string (can be a number)\n\n    childPathString = String(childPathString);\n    validatePathString('DataSnapshot.child', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    var childRef = this.ref_.child(childPath);\n    return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\n  };\n  /**\r\n   * Returns whether the snapshot contains a child at the specified path.\r\n   *\r\n   * @param childPathString Path to a child.\r\n   * @return Whether the child exists.\r\n   */\n\n\n  DataSnapshot.prototype.hasChild = function (childPathString) {\n    validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n    validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n    var childPath = new Path(childPathString);\n    return !this.node_.getChild(childPath).isEmpty();\n  };\n  /**\r\n   * Returns the priority of the object, or null if no priority was set.\r\n   *\r\n   * @return The priority.\r\n   */\n\n\n  DataSnapshot.prototype.getPriority = function () {\n    validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length); // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n\n    return this.node_.getPriority().val();\n  };\n  /**\r\n   * Iterates through child nodes and calls the specified action for each one.\r\n   *\r\n   * @param action Callback function to be called\r\n   * for each child.\r\n   * @return True if forEach was canceled by action returning true for\r\n   * one of the child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.forEach = function (action) {\n    var _this = this;\n\n    validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n    validateCallback('DataSnapshot.forEach', 1, action, false);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    }\n\n    var childrenNode = this.node_; // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n\n    return !!childrenNode.forEachChild(this.index_, function (key, node) {\n      return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\n    });\n  };\n  /**\r\n   * Returns whether this DataSnapshot has children.\r\n   * @return True if the DataSnapshot contains 1 or more child nodes.\r\n   */\n\n\n  DataSnapshot.prototype.hasChildren = function () {\n    validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n\n    if (this.node_.isLeafNode()) {\n      return false;\n    } else {\n      return !this.node_.isEmpty();\n    }\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"key\", {\n    get: function get() {\n      return this.ref_.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the number of children for this DataSnapshot.\r\n   * @return The number of children that this DataSnapshot contains.\r\n   */\n\n  DataSnapshot.prototype.numChildren = function () {\n    validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n    return this.node_.numChildren();\n  };\n  /**\r\n   * @return The Firebase reference for the location this snapshot's data came\r\n   * from.\r\n   */\n\n\n  DataSnapshot.prototype.getRef = function () {\n    validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n    return this.ref_;\n  };\n\n  Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return DataSnapshot;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\n\n\nvar Tree =\n/** @class */\nfunction () {\n  /**\r\n   * @param name Optional name of the node.\r\n   * @param parent Optional parent node.\r\n   * @param node Optional node to wrap.\r\n   */\n  function Tree(name, parent, node) {\n    if (name === void 0) {\n      name = '';\n    }\n\n    if (parent === void 0) {\n      parent = null;\n    }\n\n    if (node === void 0) {\n      node = {\n        children: {},\n        childCount: 0\n      };\n    }\n\n    this.name = name;\n    this.parent = parent;\n    this.node = node;\n  }\n\n  return Tree;\n}();\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj Path to look up.\r\n * @return Tree for path.\r\n */\n\n\nfunction treeSubTree(tree, pathObj) {\n  // TODO: Require pathObj to be Path?\n  var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  var child = tree,\n      next = pathGetFront(path);\n\n  while (next !== null) {\n    var childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @return The data or null if no data exists.\r\n */\n\n\nfunction treeGetValue(tree) {\n  return tree.node.value;\n}\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value Value to set.\r\n */\n\n\nfunction treeSetValue(tree, value) {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n/**\r\n * @return Whether the tree has any children.\r\n */\n\n\nfunction treeHasChildren(tree) {\n  return tree.node.childCount > 0;\n}\n/**\r\n * @return Whethe rthe tree is empty (no value or children).\r\n */\n\n\nfunction treeIsEmpty(tree) {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action Action to be called for each child.\r\n */\n\n\nfunction treeForEachChild(tree, action) {\n  each(tree.node.children, function (child, childTree) {\n    action(new Tree(child, tree, childTree));\n  });\n}\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action Action to be called for each child.\r\n * @param includeSelf Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst Whether to call action on children before calling it on\r\n *   parent.\r\n */\n\n\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, function (child) {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf Whether to call action on this node as well.\r\n * @return true if the action callback returned true.\r\n */\n\n\nfunction treeForEachAncestor(tree, action, includeSelf) {\n  var node = includeSelf ? tree : tree.parent;\n\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n\n    node = node.parent;\n  }\n\n  return false;\n}\n/**\r\n * @return The path of this tree node, as a Path.\r\n */\n\n\nfunction treeGetPath(tree) {\n  return new Path(tree.parent === null ? tree.name : treeGetPath(tree.parent) + '/' + tree.name);\n}\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\n\n\nfunction treeUpdateParents(tree) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName The name of the child to update.\r\n * @param child The child to update.\r\n */\n\n\nfunction treeUpdateChild(tree, childName, child) {\n  var childEmpty = treeIsEmpty(child);\n  var childExists = contains(tree.node.children, childName);\n\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\n\nvar MAX_TRANSACTION_RETRIES = 25;\n/**\r\n * A connection to a single data repository.\r\n */\n\nvar Repo =\n/** @class */\nfunction () {\n  function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\n    this.repoInfo_ = repoInfo_;\n    this.forceRestClient_ = forceRestClient_;\n    this.app = app;\n    this.authTokenProvider_ = authTokenProvider_;\n    this.dataUpdateCount = 0;\n    this.statsListener_ = null;\n    this.eventQueue_ = new EventQueue();\n    this.nextWriteId_ = 1;\n    this.interceptServerDataCallback_ = null;\n    /** A list of data pieces and paths to be set when this client disconnects. */\n\n    this.onDisconnect_ = newSparseSnapshotTree();\n    /** Stores queues of outstanding transactions for Firebase locations. */\n\n    this.transactionQueueTree_ = new Tree(); // TODO: This should be @private but it's used by test_access.js and internal.js\n\n    this.persistentConnection_ = null; // This key is intentionally not updated if RepoInfo is later changed or replaced\n\n    this.key = this.repoInfo_.toURLString();\n  }\n  /**\r\n   * @return The URL corresponding to the root of this Firebase.\r\n   */\n\n\n  Repo.prototype.toString = function () {\n    return (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host;\n  };\n\n  return Repo;\n}();\n\nfunction repoStart(repo) {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, repo.authTokenProvider_); // Minor hack: Fire onConnect immediately, since there's no actual connection.\n\n    setTimeout(function () {\n      return repoOnConnectStatus(repo,\n      /* connectStatus= */\n      true);\n    }, 0);\n  } else {\n    var authOverride = repo.app.options['databaseAuthVariableOverride']; // Validate authOverride\n\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n      }\n\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, repo.app.options.appId, function (pathString, data, isMerge, tag) {\n      repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n    }, function (connectStatus) {\n      repoOnConnectStatus(repo, connectStatus);\n    }, function (updates) {\n      repoOnServerInfoUpdate(repo, updates);\n    }, repo.authTokenProvider_, authOverride);\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(function (token) {\n    repo.server_.refreshAuthToken(token);\n  }); // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () {\n    return new StatsReporter(repo.stats_, repo.server_);\n  }); // Used for .info.\n\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      var infoEvents = [];\n      var node = repo.infoData_.getNode(query.path); // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query.path, node);\n        setTimeout(function () {\n          onComplete('ok');\n        }, 0);\n      }\n\n      return infoEvents;\n    },\n    stopListening: function stopListening() {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: function startListening(query, tag, currentHashFn, onComplete) {\n      repo.server_.listen(query, currentHashFn, tag, function (status, data) {\n        var events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query.path, events);\n      }); // No synchronous events for network-backed sync trees\n\n      return [];\n    },\n    stopListening: function stopListening(query, tag) {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n/**\r\n * @return The time in milliseconds, taking the server offset into account if we have one.\r\n */\n\n\nfunction repoServerTime(repo) {\n  var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  var offset = offsetNode.val() || 0;\n  return new Date().getTime() + offset;\n}\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\n\n\nfunction repoGenerateServerValues(repo) {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\n\n\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\n  // For testing.\n  repo.dataUpdateCount++;\n  var path = new Path(pathString);\n  data = repo.interceptServerDataCallback_ ? repo.interceptServerDataCallback_(pathString, data) : data;\n  var events = [];\n\n  if (tag) {\n    if (isMerge) {\n      var taggedChildren = map(data, function (raw) {\n        return nodeFromJSON$1(raw);\n      });\n      events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\n    } else {\n      var taggedSnap = nodeFromJSON$1(data);\n      events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\n    }\n  } else if (isMerge) {\n    var changedChildren = map(data, function (raw) {\n      return nodeFromJSON$1(raw);\n    });\n    events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\n  } else {\n    var snap = nodeFromJSON$1(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n\n  var affectedPath = path;\n\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n} // TODO: This should be @private but it's used by test_access.js and internal.js\n\n\nfunction repoInterceptServerData(repo, callback) {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo, connectStatus) {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo, updates) {\n  each(updates, function (key, value) {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo, pathString, value) {\n  var path = new Path('/.info/' + pathString);\n  var newNode = nodeFromJSON$1(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo) {\n  return repo.nextWriteId_++;\n}\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\n\n\nfunction repoGetValue(repo, query) {\n  // Only active queries are cached. There is no persisted cache.\n  var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n\n  if (cached != null) {\n    return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\n  }\n\n  return repo.server_.get(query).then(function (payload) {\n    var node = nodeFromJSON$1(payload);\n    var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query.path, node);\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n    return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\n  }, function (err) {\n    repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n    return Promise.reject(new Error(err));\n  });\n}\n\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  }); // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n\n  var serverValues = repoGenerateServerValues(repo);\n  var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\n  var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\n  var writeId = repoGetNextWriteId(repo);\n  var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(path.toString(), newNodeUnresolved.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    var success = status === 'ok';\n\n    if (!success) {\n      warn('set at ' + path + ' failed: ' + status);\n    }\n\n    var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n  var affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath); // We queued the events above, so just flush the queue here\n\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\n  repoLog(repo, 'update', {\n    path: path.toString(),\n    value: childrenToMerge\n  }); // Start with our existing data and merge each child into it.\n\n  var empty = true;\n  var serverValues = repoGenerateServerValues(repo);\n  var changedChildren = {};\n  each(childrenToMerge, function (changedKey, changedValue) {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\n  });\n\n  if (!empty) {\n    var writeId_1 = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n      var success = status === 'ok';\n\n      if (!success) {\n        warn('update at ' + path + ' failed: ' + status);\n      }\n\n      var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\n      var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    });\n    each(childrenToMerge, function (changedPath) {\n      var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\n      repoRerunTransactions(repo, affectedPath);\n    }); // We queued the events above, so just flush the queue here\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\n\n\nfunction repoRunOnDisconnectEvents(repo) {\n  repoLog(repo, 'onDisconnectEvents');\n  var serverValues = repoGenerateServerValues(repo);\n  var resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\n    var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\n    sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n  });\n  var events = [];\n  sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\n    events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\n    var affectedPath = repoAbortTransactions(repo, path);\n    repoRerunTransactions(repo, affectedPath);\n  });\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\n  repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\n  var newNode = nodeFromJSON$1(value);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\n  var newNode = nodeFromJSON$1(value, priority);\n  repo.server_.onDisconnectPut(path.toString(), newNode.val(\n  /*export=*/\n  true), function (status, errorReason) {\n    if (status === 'ok') {\n      sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n    if (status === 'ok') {\n      each(childrenToMerge, function (childName, childNode) {\n        var newChildNode = nodeFromJSON$1(childNode);\n        sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\n      });\n    }\n\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\n  var events;\n\n  if (pathGetFront(query.path) === '.info') {\n    events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n}\n\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  var events;\n\n  if (pathGetFront(query.path) === '.info') {\n    events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\n  } else {\n    events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\n  }\n\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query.path, events);\n}\n\nfunction repoInterrupt(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nfunction repoResume(repo) {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nfunction repoStats(repo, showDelta) {\n  if (showDelta === void 0) {\n    showDelta = false;\n  }\n\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  var stats;\n\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n    return Math.max(currentValue.length, previousValue);\n  }, 0);\n  each(stats, function (stat, value) {\n    var paddedStat = stat; // pad stat names to be the same length (plus 2 extra spaces).\n\n    for (var i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n\n    console.log(paddedStat + value);\n  });\n}\n\nfunction repoStatsIncrementCounter(repo, metric) {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo) {\n  var varArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    varArgs[_i - 1] = arguments[_i];\n  }\n\n  var prefix = '';\n\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n\n  log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\n}\n\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\n  if (callback) {\n    exceptionGuard(function () {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        var code = (status || 'error').toUpperCase();\n        var message = code;\n\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        var error = new Error(message); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        error.code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\nfunction repoGetDatabase(repo) {\n  return repo.__database || (repo.__database = new Database(repo));\n}\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path Path at which to do transaction.\r\n * @param transactionUpdate Update callback.\r\n * @param onComplete Completion callback.\r\n * @param applyLocally Whether or not to make intermediate results visible\r\n */\n\n\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, applyLocally) {\n  repoLog(repo, 'transaction on ' + path); // Add a watch to make sure we get server updates.\n\n  var valueCallback = function valueCallback() {};\n\n  var watchRef = new Reference(repo, path);\n  watchRef.on('value', valueCallback);\n\n  var unwatcher = function unwatcher() {\n    watchRef.off('value', valueCallback);\n  }; // Initialize transaction.\n\n\n  var transaction = {\n    path: path,\n    update: transactionUpdate,\n    onComplete: onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally: applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher: unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  }; // Run transaction initially.\n\n  var currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  var newVal = transaction.update(currentState.val());\n\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n\n    if (transaction.onComplete) {\n      // We just set the input snapshot, so this cast should be safe\n      var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(repo, transaction.path), PRIORITY_INDEX);\n      transaction.onComplete(null, false, snapshot);\n    }\n  } else {\n    validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path); // Mark as run and add to our queue.\n\n    transaction.status = 0\n    /* RUN */\n    ;\n    var queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    var nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n    treeSetValue(queueNode, nodeQueue); // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n\n    var priorityForNode = void 0;\n\n    if (typeof newVal === 'object' && newVal !== null && contains(newVal, '.priority')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal, '.priority');\n      assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' + 'Priority must be a valid string, finite number, server value, or null.');\n    } else {\n      var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) || ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    var serverValues = repoGenerateServerValues(repo);\n    var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n/**\r\n * @param excludeSets A specific set to exclude\r\n */\n\n\nfunction repoGetLatestState(repo, path, excludeSets) {\n  return syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) || ChildrenNode.EMPTY_NODE;\n}\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node transactionQueueTree node to start at.\r\n */\n\n\nfunction repoSendReadyTransactions(repo, node) {\n  if (node === void 0) {\n    node = repo.transactionQueueTree_;\n  } // Before recursing, make sure any completed transactions are removed.\n\n\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    var queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n    var allRun = queue.every(function (transaction) {\n      return transaction.status === 0\n      /* RUN */\n      ;\n    }); // If they're all run (and not sent), we can send them.  Else, we must wait.\n\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, function (childNode) {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path The location of the queue.\r\n * @param queue Queue of transactions under the specified location.\r\n */\n\n\nfunction repoSendTransactionQueue(repo, path, queue) {\n  // Mark transactions as sent and increment retry count!\n  var setsToIgnore = queue.map(function (txn) {\n    return txn.currentWriteId;\n  });\n  var latestState = repoGetLatestState(repo, path, setsToIgnore);\n  var snapToSend = latestState;\n  var latestHash = latestState.hash();\n\n  for (var i = 0; i < queue.length; i++) {\n    var txn = queue[i];\n    assert(txn.status === 0\n    /* RUN */\n    , 'tryToSendTransactionQueue_: items in queue should all be run.');\n    txn.status = 1\n    /* SENT */\n    ;\n    txn.retryCount++;\n    var relativePath = newRelativePath(path, txn.path); // If we've gotten to this point, the output snapshot must be defined.\n\n    snapToSend = snapToSend.updateChild(relativePath\n    /** @type {!Node} */\n    , txn.currentOutputSnapshotRaw);\n  }\n\n  var dataToSend = snapToSend.val(true);\n  var pathToSend = path; // Send the put.\n\n  repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\n    repoLog(repo, 'transaction put response', {\n      path: pathToSend.toString(),\n      status: status\n    });\n    var events = [];\n\n    if (status === 'ok') {\n      // Queue up the callbacks and fire them after cleaning up all of our\n      // transaction state, since the callback could trigger more\n      // transactions or sets.\n      var callbacks = [];\n\n      for (var i = 0; i < queue.length; i++) {\n        queue[i].status = 2\n        /* COMPLETED */\n        ;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\n\n        if (queue[i].onComplete) {\n          // We never unset the output snapshot, and given that this\n          // transaction is complete, it should be set\n          var node = queue[i].currentOutputSnapshotResolved;\n          var ref = new Reference(repo, queue[i].path);\n          var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\n        }\n\n        queue[i].unwatcher();\n      } // Now remove the completed transactions.\n\n\n      repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path)); // There may be pending transactions that we can now send.\n\n      repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events); // Finally, trigger onComplete callbacks.\n\n      for (var i = 0; i < callbacks.length; i++) {\n        exceptionGuard(callbacks[i]);\n      }\n    } else {\n      // transactions are no longer sent.  Update their status appropriately.\n      if (status === 'datastale') {\n        for (var i = 0; i < queue.length; i++) {\n          if (queue[i].status === 3\n          /* SENT_NEEDS_ABORT */\n          ) {\n              queue[i].status = 4\n              /* NEEDS_ABORT */\n              ;\n            } else {\n            queue[i].status = 0\n            /* RUN */\n            ;\n          }\n        }\n      } else {\n        warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\n\n        for (var i = 0; i < queue.length; i++) {\n          queue[i].status = 4\n          /* NEEDS_ABORT */\n          ;\n          queue[i].abortReason = status;\n        }\n      }\n\n      repoRerunTransactions(repo, path);\n    }\n  }, latestHash);\n}\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath The path in mergedData that changed.\r\n * @return The rootmost path that was affected by rerunning transactions.\r\n */\n\n\nfunction repoRerunTransactions(repo, changedPath) {\n  var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\n  var path = treeGetPath(rootMostTransactionNode);\n  var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n  return path;\n}\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue The queue of transactions to run.\r\n * @param path The path the queue is for.\r\n */\n\n\nfunction repoRerunTransactionQueue(repo, queue, path) {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  } // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n\n\n  var callbacks = [];\n  var events = []; // Ignore all of the sets we're going to re-run.\n\n  var txnsToRerun = queue.filter(function (q) {\n    return q.status === 0\n    /* RUN */\n    ;\n  });\n  var setsToIgnore = txnsToRerun.map(function (q) {\n    return q.currentWriteId;\n  });\n\n  for (var i = 0; i < queue.length; i++) {\n    var transaction = queue[i];\n    var relativePath = newRelativePath(path, transaction.path);\n    var abortTransaction = false,\n        abortReason = void 0;\n    assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\n\n    if (transaction.status === 4\n    /* NEEDS_ABORT */\n    ) {\n        abortTransaction = true;\n        abortReason = transaction.abortReason;\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n      } else if (transaction.status === 0\n    /* RUN */\n    ) {\n        if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n          abortTransaction = true;\n          abortReason = 'maxretry';\n          events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n        } else {\n          // This code reruns a transaction\n          var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\n          transaction.currentInputSnapshot = currentNode;\n          var newData = queue[i].update(currentNode.val());\n\n          if (newData !== undefined) {\n            validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\n            var newDataNode = nodeFromJSON$1(newData);\n            var hasExplicitPriority = typeof newData === 'object' && newData != null && contains(newData, '.priority');\n\n            if (!hasExplicitPriority) {\n              // Keep the old priority if there wasn't a priority explicitly specified.\n              newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n            }\n\n            var oldWriteId = transaction.currentWriteId;\n            var serverValues = repoGenerateServerValues(repo);\n            var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\n            transaction.currentOutputSnapshotRaw = newDataNode;\n            transaction.currentOutputSnapshotResolved = newNodeResolved;\n            transaction.currentWriteId = repoGetNextWriteId(repo); // Mutates setsToIgnore in place\n\n            setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n            events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\n          } else {\n            abortTransaction = true;\n            abortReason = 'nodata';\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\n          }\n        }\n      }\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = 2\n      /* COMPLETED */\n      ; // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          var ref = new Reference(repo, queue[i].path); // We set this field immediately, so it's safe to cast to an actual snapshot\n\n          var lastInput\n          /** @type {!Node} */\n          = queue[i].currentInputSnapshot;\n          var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\n          callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\n        } else {\n          callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\n        }\n      }\n    }\n  } // Clean up completed transactions.\n\n\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_); // Now fire callbacks, now that we're in a good, known state.\n\n  for (var i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  } // Try to send the transaction result to the server.\n\n\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path The location to start at.\r\n * @return The rootmost node with a transaction.\r\n */\n\n\nfunction repoGetAncestorTransactionNode(repo, path) {\n  var front; // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n\n  var transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @return The generated queue.\r\n */\n\n\nfunction repoBuildTransactionQueue(repo, transactionNode) {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  var transactionQueue = [];\n  repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue); // Sort them by the order the transactions were created.\n\n  transactionQueue.sort(function (a, b) {\n    return a.order - b.order;\n  });\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\n  var nodeQueue = treeGetValue(node);\n\n  if (nodeQueue) {\n    for (var i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, function (child) {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\n\n\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    var to = 0;\n\n    for (var from = 0; from < queue.length; from++) {\n      if (queue[from].status !== 2\n      /* COMPLETED */\n      ) {\n          queue[to] = queue[from];\n          to++;\n        }\n    }\n\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, function (childNode) {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path Path for which we want to abort related transactions.\r\n */\n\n\nfunction repoAbortTransactions(repo, path) {\n  var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n  var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n  treeForEachAncestor(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  repoAbortTransactionsOnNode(repo, transactionNode);\n  treeForEachDescendant(transactionNode, function (node) {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n  return affectedPath;\n}\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node Node to abort transactions for.\r\n */\n\n\nfunction repoAbortTransactionsOnNode(repo, node) {\n  var queue = treeGetValue(node);\n\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    var callbacks = []; // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n\n    var events = [];\n    var lastSent = -1;\n\n    for (var i = 0; i < queue.length; i++) {\n      if (queue[i].status === 3\n      /* SENT_NEEDS_ABORT */\n      ) ;else if (queue[i].status === 1\n      /* SENT */\n      ) {\n          assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\n          lastSent = i; // Mark transaction for abort when it comes back.\n\n          queue[i].status = 3\n          /* SENT_NEEDS_ABORT */\n          ;\n          queue[i].abortReason = 'set';\n        } else {\n        assert(queue[i].status === 0\n        /* RUN */\n        , 'Unexpected transaction status in abort'); // We can abort it immediately.\n\n        queue[i].unwatcher();\n        events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\n\n        if (queue[i].onComplete) {\n          var snapshot = null;\n          callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\n        }\n      }\n    }\n\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    } // Now fire the callbacks.\n\n\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\n\n    for (var i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OnDisconnect =\n/** @class */\nfunction () {\n  function OnDisconnect(repo_, path_) {\n    this.repo_ = repo_;\n    this.path_ = path_;\n  }\n\n  OnDisconnect.prototype.cancel = function (onComplete) {\n    validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\n    validateCallback('OnDisconnect.cancel', 1, onComplete, true);\n    var deferred = new Deferred();\n    repoOnDisconnectCancel(this.repo_, this.path_, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.remove = function (onComplete) {\n    validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\n    validateWritablePath('OnDisconnect.remove', this.path_);\n    validateCallback('OnDisconnect.remove', 1, onComplete, true);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this.repo_, this.path_, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.set = function (value, onComplete) {\n    validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.set', this.path_);\n    validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\n    validateCallback('OnDisconnect.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    repoOnDisconnectSet(this.repo_, this.path_, value, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\n    validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('OnDisconnect.setWithPriority', this.path_);\n    validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\n    validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\n    validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\n    var deferred = new Deferred();\n    repoOnDisconnectSetWithPriority(this.repo_, this.path_, value, priority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\n    validateWritablePath('OnDisconnect.update', this.path_);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' + 'existing data, or an Object with integer keys if you really do want to only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\n    validateCallback('OnDisconnect.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    repoOnDisconnectUpdate(this.repo_, this.path_, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  return OnDisconnect;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar TransactionResult =\n/** @class */\nfunction () {\n  /**\r\n   * A type for the resolve value of Firebase.transaction.\r\n   */\n  function TransactionResult(committed, snapshot) {\n    this.committed = committed;\n    this.snapshot = snapshot;\n  } // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users\n\n\n  TransactionResult.prototype.toJSON = function () {\n    validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\n    return {\n      committed: this.committed,\n      snapshot: this.snapshot.toJSON()\n    };\n  };\n\n  return TransactionResult;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\n\n\nvar DataEvent =\n/** @class */\nfunction () {\n  /**\r\n   * @param eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n   * @param eventRegistration The function to call to with the event data. User provided\r\n   * @param snapshot The data backing the event\r\n   * @param prevName Optional, the name of the previous child for child_* events.\r\n   */\n  function DataEvent(eventType, eventRegistration, snapshot, prevName) {\n    this.eventType = eventType;\n    this.eventRegistration = eventRegistration;\n    this.snapshot = snapshot;\n    this.prevName = prevName;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getPath = function () {\n    var ref = this.snapshot.getRef();\n\n    if (this.eventType === 'value') {\n      return ref.path;\n    } else {\n      return ref.getParent().path;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventType = function () {\n    return this.eventType;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  DataEvent.prototype.toString = function () {\n    return this.getPath().toString() + ':' + this.eventType + ':' + stringify(this.snapshot.exportVal());\n  };\n\n  return DataEvent;\n}();\n\nvar CancelEvent =\n/** @class */\nfunction () {\n  function CancelEvent(eventRegistration, error, path) {\n    this.eventRegistration = eventRegistration;\n    this.error = error;\n    this.path = path;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getPath = function () {\n    return this.path;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventType = function () {\n    return 'cancel';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.getEventRunner = function () {\n    return this.eventRegistration.getEventRunner(this);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  CancelEvent.prototype.toString = function () {\n    return this.path.toString() + ':cancel';\n  };\n\n  return CancelEvent;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents registration for 'value' events.\r\n */\n\n\nvar ValueEventRegistration =\n/** @class */\nfunction () {\n  function ValueEventRegistration(callback_, cancelCallback_, context_) {\n    this.callback_ = callback_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.respondsTo = function (eventType) {\n    return eventType === 'value';\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createEvent = function (change, query) {\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_1 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_1.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_1 = this.callback_;\n      return function () {\n        cb_1.call(ctx, eventData.snapshot);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.matches = function (other) {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callback_ || !this.callback_) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callback_ === this.callback_ && other.context_ === this.context_;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ValueEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callback_ !== null;\n  };\n\n  return ValueEventRegistration;\n}();\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n */\n\n\nvar ChildEventRegistration =\n/** @class */\nfunction () {\n  function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\n    this.callbacks_ = callbacks_;\n    this.cancelCallback_ = cancelCallback_;\n    this.context_ = context_;\n  }\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.respondsTo = function (eventType) {\n    var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck = eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return contains(this.callbacks_, eventToCheck);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\n    if (this.cancelCallback_) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.createEvent = function (change, query) {\n    assert(change.childName != null, 'Child events should have a childName.');\n    var ref = query.getRef().child(change.childName);\n    var index = query.getQueryParams().getIndex();\n    return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.getEventRunner = function (eventData) {\n    var ctx = this.context_;\n\n    if (eventData.getEventType() === 'cancel') {\n      assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\n      var cancelCB_2 = this.cancelCallback_;\n      return function () {\n        // We know that error exists, we checked above that this is a cancel event\n        cancelCB_2.call(ctx, eventData.error);\n      };\n    } else {\n      var cb_2 = this.callbacks_[eventData.eventType];\n      return function () {\n        cb_2.call(ctx, eventData.snapshot, eventData.prevName);\n      };\n    }\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.matches = function (other) {\n    var _this = this;\n\n    if (other instanceof ChildEventRegistration) {\n      if (!this.callbacks_ || !other.callbacks_) {\n        return true;\n      } else if (this.context_ === other.context_) {\n        var otherKeys = Object.keys(other.callbacks_);\n        var thisKeys = Object.keys(this.callbacks_);\n        var otherCount = otherKeys.length;\n        var thisCount = thisKeys.length;\n\n        if (otherCount === thisCount) {\n          // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\n          // If event types don't match, not a match\n          // If count is not 1, exact match across all\n          if (otherCount === 1) {\n            var otherKey = otherKeys[0];\n            var thisKey = thisKeys[0];\n            return thisKey === otherKey && (!other.callbacks_[otherKey] || !this.callbacks_[thisKey] || other.callbacks_[otherKey] === this.callbacks_[thisKey]);\n          } else {\n            // Exact match on each key.\n            return thisKeys.every(function (eventType) {\n              return other.callbacks_[eventType] === _this.callbacks_[eventType];\n            });\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\r\n   * @inheritDoc\r\n   */\n\n\n  ChildEventRegistration.prototype.hasAnyCallback = function () {\n    return this.callbacks_ !== null;\n  };\n\n  return ChildEventRegistration;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar __referenceConstructor;\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\n\n\nvar Query =\n/** @class */\nfunction () {\n  function Query(repo, path, queryParams_, orderByCalled_) {\n    this.repo = repo;\n    this.path = path;\n    this.queryParams_ = queryParams_;\n    this.orderByCalled_ = orderByCalled_;\n  }\n\n  Object.defineProperty(Query, \"__referenceConstructor\", {\n    get: function get() {\n      assert(__referenceConstructor, 'Reference.ts has not been loaded');\n      return __referenceConstructor;\n    },\n    set: function set(val) {\n      __referenceConstructor = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Validates start/end values for queries.\r\n   */\n\n  Query.validateQueryEndpoints_ = function (params) {\n    var startNode = null;\n    var endNode = null;\n\n    if (params.hasStart()) {\n      startNode = params.getIndexStartValue();\n    }\n\n    if (params.hasEnd()) {\n      endNode = params.getIndexEndValue();\n    }\n\n    if (params.getIndex() === KEY_INDEX) {\n      var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' + 'startAt(), endAt(), or equalTo().';\n      var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' + 'endAt(), endBefore(), or equalTo() must be a string.';\n\n      if (params.hasStart()) {\n        var startName = params.getIndexStartName();\n\n        if (startName !== MIN_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof startNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n\n      if (params.hasEnd()) {\n        var endName = params.getIndexEndName();\n\n        if (endName !== MAX_NAME) {\n          throw new Error(tooManyArgsError);\n        } else if (typeof endNode !== 'string') {\n          throw new Error(wrongArgTypeError);\n        }\n      }\n    } else if (params.getIndex() === PRIORITY_INDEX) {\n      if (startNode != null && !isValidPriority(startNode) || endNode != null && !isValidPriority(endNode)) {\n        throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' + 'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' + '(null, a number, or a string).');\n      }\n    } else {\n      assert(params.getIndex() instanceof PathIndex || params.getIndex() === VALUE_INDEX, 'unknown index type.');\n\n      if (startNode != null && typeof startNode === 'object' || endNode != null && typeof endNode === 'object') {\n        throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' + 'equalTo() cannot be an object.');\n      }\n    }\n  };\n  /**\r\n   * Validates that limit* has been called with the correct combination of parameters\r\n   */\n\n\n  Query.validateLimit_ = function (params) {\n    if (params.hasStart() && params.hasEnd() && params.hasLimit() && !params.hasAnchoredLimit()) {\n      throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" + 'limitToFirst() or limitToLast() instead.');\n    }\n  };\n  /**\r\n   * Validates that no other order by call has been made\r\n   */\n\n\n  Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\n    if (this.orderByCalled_ === true) {\n      throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n    }\n  };\n\n  Query.prototype.getQueryParams = function () {\n    return this.queryParams_;\n  };\n\n  Query.prototype.getRef = function () {\n    validateArgCount('Query.ref', 0, 0, arguments.length); // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\n    // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\n    // method gets called.\n\n    return new Query.__referenceConstructor(this.repo, this.path);\n  };\n\n  Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\n    validateArgCount('Query.on', 2, 4, arguments.length);\n    validateEventType('Query.on', 1, eventType, false);\n    validateCallback('Query.on', 2, callback, false);\n    var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\n\n    if (eventType === 'value') {\n      this.onValueEvent(callback, ret.cancel, ret.context);\n    } else {\n      var callbacks = {};\n      callbacks[eventType] = callback;\n      this.onChildEvent(callbacks, ret.cancel, ret.context);\n    }\n\n    return callback;\n  };\n\n  Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\n    var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\n    repoAddEventCallbackForQuery(this.repo, this, container);\n  };\n\n  Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\n    var container = new ChildEventRegistration(callbacks, cancelCallback, context);\n    repoAddEventCallbackForQuery(this.repo, this, container);\n  };\n\n  Query.prototype.off = function (eventType, callback, context) {\n    validateArgCount('Query.off', 0, 3, arguments.length);\n    validateEventType('Query.off', 1, eventType, true);\n    validateCallback('Query.off', 2, callback, true);\n    validateContextObject('Query.off', 3, context, true);\n    var container = null;\n    var callbacks = null;\n\n    if (eventType === 'value') {\n      var valueCallback = callback || null;\n      container = new ValueEventRegistration(valueCallback, null, context || null);\n    } else if (eventType) {\n      if (callback) {\n        callbacks = {};\n        callbacks[eventType] = callback;\n      }\n\n      container = new ChildEventRegistration(callbacks, null, context || null);\n    }\n\n    repoRemoveEventCallbackForQuery(this.repo, this, container);\n  };\n  /**\r\n   * Get the server-value for this query, or return a cached value if not connected.\r\n   */\n\n\n  Query.prototype.get = function () {\n    return repoGetValue(this.repo, this);\n  };\n  /**\r\n   * Attaches a listener, waits for the first event, and then removes the listener\r\n   */\n\n\n  Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\n    var _this = this;\n\n    validateArgCount('Query.once', 1, 4, arguments.length);\n    validateEventType('Query.once', 1, eventType, false);\n    validateCallback('Query.once', 2, userCallback, true);\n    var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context); // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\n    // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\n    // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\n    // against the Promise specification.\n\n    var firstCall = true;\n    var deferred = new Deferred(); // A dummy error handler in case a user wasn't expecting promises\n\n    deferred.promise.catch(function () {});\n\n    var onceCallback = function onceCallback(snapshot) {\n      // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\n      // triggers multiple events (e.g. child_added or child_changed).\n      if (firstCall) {\n        firstCall = false;\n\n        _this.off(eventType, onceCallback);\n\n        if (userCallback) {\n          userCallback.bind(ret.context)(snapshot);\n        }\n\n        deferred.resolve(snapshot);\n      }\n    };\n\n    this.on(eventType, onceCallback,\n    /*cancel=*/\n    function (err) {\n      _this.off(eventType, onceCallback);\n\n      if (ret.cancel) {\n        ret.cancel.bind(ret.context)(err);\n      }\n\n      deferred.reject(err);\n    });\n    return deferred.promise;\n  };\n  /**\r\n   * Set a limit and anchor it to the start of the window.\r\n   */\n\n\n  Query.prototype.limitToFirst = function (limit) {\n    validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToFirst: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToFirst(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Set a limit and anchor it to the end of the window.\r\n   */\n\n\n  Query.prototype.limitToLast = function (limit) {\n    validateArgCount('Query.limitToLast', 1, 1, arguments.length);\n\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n      throw new Error('Query.limitToLast: First argument must be a positive integer.');\n    }\n\n    if (this.queryParams_.hasLimit()) {\n      throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' + 'limitToFirst, or limitToLast).');\n    }\n\n    return new Query(this.repo, this.path, queryParamsLimitToLast(this.queryParams_, limit), this.orderByCalled_);\n  };\n  /**\r\n   * Given a child path, return a new query ordered by the specified grandchild path.\r\n   */\n\n\n  Query.prototype.orderByChild = function (path) {\n    validateArgCount('Query.orderByChild', 1, 1, arguments.length);\n\n    if (path === '$key') {\n      throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\n    } else if (path === '$priority') {\n      throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\n    } else if (path === '$value') {\n      throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\n    }\n\n    validatePathString('Query.orderByChild', 1, path, false);\n    this.validateNoPreviousOrderByCall_('Query.orderByChild');\n    var parsedPath = new Path(path);\n\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\n    }\n\n    var index = new PathIndex(parsedPath);\n    var newParams = queryParamsOrderBy(this.queryParams_, index);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the KeyIndex\r\n   */\n\n\n  Query.prototype.orderByKey = function () {\n    validateArgCount('Query.orderByKey', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByKey');\n    var newParams = queryParamsOrderBy(this.queryParams_, KEY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the PriorityIndex\r\n   */\n\n\n  Query.prototype.orderByPriority = function () {\n    validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByPriority');\n    var newParams = queryParamsOrderBy(this.queryParams_, PRIORITY_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n  /**\r\n   * Return a new query ordered by the ValueIndex\r\n   */\n\n\n  Query.prototype.orderByValue = function () {\n    validateArgCount('Query.orderByValue', 0, 0, arguments.length);\n    this.validateNoPreviousOrderByCall_('Query.orderByValue');\n    var newParams = queryParamsOrderBy(this.queryParams_, VALUE_INDEX);\n    Query.validateQueryEndpoints_(newParams);\n    return new Query(this.repo, this.path, newParams,\n    /*orderByCalled=*/\n    true);\n  };\n\n  Query.prototype.startAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\n    validateKey('Query.startAt', 2, name, true);\n    var newParams = queryParamsStartAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' + 'or equalTo).');\n    } // Calling with no params tells us to start at the beginning.\n\n\n    if (value === undefined) {\n      value = null;\n      name = null;\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.startAfter = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.startAfter', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.startAfter', 1, value, this.path, false);\n    validateKey('Query.startAfter', 2, name, true);\n    var newParams = queryParamsStartAfter(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.startAfter: Starting point was already set (by another call to startAt, startAfter ' + 'or equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endAt = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endAt', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\n    validateKey('Query.endAt', 2, name, true);\n    var newParams = queryParamsEndAt(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endAt: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n\n  Query.prototype.endBefore = function (value, name) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    validateArgCount('Query.endBefore', 0, 2, arguments.length);\n    validateFirebaseDataArg('Query.endBefore', 1, value, this.path, false);\n    validateKey('Query.endBefore', 2, name, true);\n    var newParams = queryParamsEndBefore(this.queryParams_, value, name);\n    Query.validateLimit_(newParams);\n    Query.validateQueryEndpoints_(newParams);\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.endBefore: Ending point was already set (by another call to endAt, endBefore, or ' + 'equalTo).');\n    }\n\n    return new Query(this.repo, this.path, newParams, this.orderByCalled_);\n  };\n  /**\r\n   * Load the selection of children with exactly the specified value, and, optionally,\r\n   * the specified name.\r\n   */\n\n\n  Query.prototype.equalTo = function (value, name) {\n    validateArgCount('Query.equalTo', 1, 2, arguments.length);\n    validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\n    validateKey('Query.equalTo', 2, name, true);\n\n    if (this.queryParams_.hasStart()) {\n      throw new Error('Query.equalTo: Starting point was already set (by another call to startAt/startAfter or ' + 'equalTo).');\n    }\n\n    if (this.queryParams_.hasEnd()) {\n      throw new Error('Query.equalTo: Ending point was already set (by another call to endAt/endBefore or ' + 'equalTo).');\n    }\n\n    return this.startAt(value, name).endAt(value, name);\n  };\n  /**\r\n   * @return URL for this location.\r\n   */\n\n\n  Query.prototype.toString = function () {\n    validateArgCount('Query.toString', 0, 0, arguments.length);\n    return this.repo.toString() + pathToUrlEncodedString(this.path);\n  }; // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n  // for end-users.\n\n\n  Query.prototype.toJSON = function () {\n    // An optional spacer argument is unnecessary for a string.\n    validateArgCount('Query.toJSON', 0, 1, arguments.length);\n    return this.toString();\n  };\n  /**\r\n   * An object representation of the query parameters used by this Query.\r\n   */\n\n\n  Query.prototype.queryObject = function () {\n    return queryParamsGetQueryObject(this.queryParams_);\n  };\n\n  Query.prototype.queryIdentifier = function () {\n    var obj = this.queryObject();\n    var id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  };\n  /**\r\n   * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n   */\n\n\n  Query.prototype.isEqual = function (other) {\n    validateArgCount('Query.isEqual', 1, 1, arguments.length);\n\n    if (!(other instanceof Query)) {\n      var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\n      throw new Error(error);\n    }\n\n    var sameRepo = this.repo === other.repo;\n    var samePath = pathEquals(this.path, other.path);\n    var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\n    return sameRepo && samePath && sameQueryIdentifier;\n  };\n  /**\r\n   * Helper used by .on and .once to extract the context and or cancel arguments.\r\n   * @param fnName The function name (on or once)\r\n   *\r\n   */\n\n\n  Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\n    var ret = {\n      cancel: null,\n      context: null\n    };\n\n    if (cancelOrContext && context) {\n      ret.cancel = cancelOrContext;\n      validateCallback(fnName, 3, ret.cancel, true);\n      ret.context = context;\n      validateContextObject(fnName, 4, ret.context, true);\n    } else if (cancelOrContext) {\n      // we have either a cancel callback or a context.\n      if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\n        // it's a context!\n        ret.context = cancelOrContext;\n      } else if (typeof cancelOrContext === 'function') {\n        ret.cancel = cancelOrContext;\n      } else {\n        throw new Error(errorPrefix(fnName, 3, true) + ' must either be a cancel callback or a context object.');\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Query.prototype, \"ref\", {\n    get: function get() {\n      return this.getRef();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Query;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction (_super) {\n  __extends(Reference, _super);\n  /**\r\n   * Call options:\r\n   *   new Reference(Repo, Path) or\r\n   *   new Reference(url: string, string|RepoManager)\r\n   *\r\n   * Externally - this is the firebase.database.Reference type.\r\n   */\n\n\n  function Reference(repo, path) {\n    var _this = this;\n\n    if (!(repo instanceof Repo)) {\n      throw new Error('new Reference() no longer supported - use app.database().');\n    } // call Query's constructor, passing in the repo and path.\n\n\n    _this = _super.call(this, repo, path, new QueryParams(), false) || this;\n    return _this;\n  }\n  /** @return {?string} */\n\n\n  Reference.prototype.getKey = function () {\n    validateArgCount('Reference.key', 0, 0, arguments.length);\n\n    if (pathIsEmpty(this.path)) {\n      return null;\n    } else {\n      return pathGetBack(this.path);\n    }\n  };\n\n  Reference.prototype.child = function (pathString) {\n    validateArgCount('Reference.child', 1, 1, arguments.length);\n\n    if (typeof pathString === 'number') {\n      pathString = String(pathString);\n    } else if (!(pathString instanceof Path)) {\n      if (pathGetFront(this.path) === null) {\n        validateRootPathString('Reference.child', 1, pathString, false);\n      } else {\n        validatePathString('Reference.child', 1, pathString, false);\n      }\n    }\n\n    return new Reference(this.repo, pathChild(this.path, pathString));\n  };\n  /** @return {?Reference} */\n\n\n  Reference.prototype.getParent = function () {\n    validateArgCount('Reference.parent', 0, 0, arguments.length);\n    var parentPath = pathParent(this.path);\n    return parentPath === null ? null : new Reference(this.repo, parentPath);\n  };\n  /** @return {!Reference} */\n\n\n  Reference.prototype.getRoot = function () {\n    validateArgCount('Reference.root', 0, 0, arguments.length);\n    var ref = this;\n\n    while (ref.getParent() !== null) {\n      ref = ref.getParent();\n    }\n\n    return ref;\n  };\n  /** @return {!Database} */\n\n\n  Reference.prototype.databaseProp = function () {\n    return repoGetDatabase(this.repo);\n  };\n\n  Reference.prototype.set = function (newVal, onComplete) {\n    validateArgCount('Reference.set', 1, 2, arguments.length);\n    validateWritablePath('Reference.set', this.path);\n    validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\n    validateCallback('Reference.set', 2, onComplete, true);\n    var deferred = new Deferred();\n    repoSetWithPriority(this.repo, this.path, newVal,\n    /*priority=*/\n    null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.update = function (objectToMerge, onComplete) {\n    validateArgCount('Reference.update', 1, 2, arguments.length);\n    validateWritablePath('Reference.update', this.path);\n\n    if (Array.isArray(objectToMerge)) {\n      var newObjectToMerge = {};\n\n      for (var i = 0; i < objectToMerge.length; ++i) {\n        newObjectToMerge['' + i] = objectToMerge[i];\n      }\n\n      objectToMerge = newObjectToMerge;\n      warn('Passing an Array to Firebase.update() is deprecated. ' + 'Use set() if you want to overwrite the existing data, or ' + 'an Object with integer keys if you really do want to ' + 'only update some of the children.');\n    }\n\n    validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\n    validateCallback('Reference.update', 2, onComplete, true);\n    var deferred = new Deferred();\n    repoUpdate(this.repo, this.path, objectToMerge, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\n    validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\n    validateWritablePath('Reference.setWithPriority', this.path);\n    validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\n    validatePriority('Reference.setWithPriority', 2, newPriority, false);\n    validateCallback('Reference.setWithPriority', 3, onComplete, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.setWithPriority failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    var deferred = new Deferred();\n    repoSetWithPriority(this.repo, this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.remove = function (onComplete) {\n    validateArgCount('Reference.remove', 0, 1, arguments.length);\n    validateWritablePath('Reference.remove', this.path);\n    validateCallback('Reference.remove', 1, onComplete, true);\n    return this.set(null, onComplete);\n  };\n\n  Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\n    validateArgCount('Reference.transaction', 1, 3, arguments.length);\n    validateWritablePath('Reference.transaction', this.path);\n    validateCallback('Reference.transaction', 1, transactionUpdate, false);\n    validateCallback('Reference.transaction', 2, onComplete, true); // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\n    // to expose it.\n\n    validateBoolean('Reference.transaction', 3, applyLocally, true);\n\n    if (this.getKey() === '.length' || this.getKey() === '.keys') {\n      throw 'Reference.transaction failed: ' + this.getKey() + ' is a read-only object.';\n    }\n\n    if (applyLocally === undefined) {\n      applyLocally = true;\n    }\n\n    var deferred = new Deferred();\n\n    if (typeof onComplete === 'function') {\n      deferred.promise.catch(function () {});\n    }\n\n    var promiseComplete = function promiseComplete(error, committed, snapshot) {\n      if (error) {\n        deferred.reject(error);\n      } else {\n        deferred.resolve(new TransactionResult(committed, snapshot));\n      }\n\n      if (typeof onComplete === 'function') {\n        onComplete(error, committed, snapshot);\n      }\n    };\n\n    repoStartTransaction(this.repo, this.path, transactionUpdate, promiseComplete, applyLocally);\n    return deferred.promise;\n  };\n\n  Reference.prototype.setPriority = function (priority, onComplete) {\n    validateArgCount('Reference.setPriority', 1, 2, arguments.length);\n    validateWritablePath('Reference.setPriority', this.path);\n    validatePriority('Reference.setPriority', 1, priority, false);\n    validateCallback('Reference.setPriority', 2, onComplete, true);\n    var deferred = new Deferred();\n    repoSetWithPriority(this.repo, pathChild(this.path, '.priority'), priority, null, deferred.wrapCallback(onComplete));\n    return deferred.promise;\n  };\n\n  Reference.prototype.push = function (value, onComplete) {\n    validateArgCount('Reference.push', 0, 2, arguments.length);\n    validateWritablePath('Reference.push', this.path);\n    validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\n    validateCallback('Reference.push', 2, onComplete, true);\n    var now = repoServerTime(this.repo);\n    var name = nextPushId(now); // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\n    // We use child() to create handles to two different references. The first is turned into a\n    // ThennableReference below by adding then() and catch() methods and is used as the\n    // return value of push(). The second remains a regular Reference and is used as the fulfilled\n    // value of the first ThennableReference.\n\n    var thennablePushRef = this.child(name);\n    var pushRef = this.child(name);\n    var promise;\n\n    if (value != null) {\n      promise = thennablePushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n    } else {\n      promise = Promise.resolve(pushRef);\n    }\n\n    thennablePushRef.then = promise.then.bind(promise);\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\n\n    if (typeof onComplete === 'function') {\n      promise.catch(function () {});\n    }\n\n    return thennablePushRef;\n  };\n\n  Reference.prototype.onDisconnect = function () {\n    validateWritablePath('Reference.onDisconnect', this.path);\n    return new OnDisconnect(this.repo, this.path);\n  };\n\n  Object.defineProperty(Reference.prototype, \"database\", {\n    get: function get() {\n      return this.databaseProp();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"key\", {\n    get: function get() {\n      return this.getKey();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    get: function get() {\n      return this.getParent();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"root\", {\n    get: function get() {\n      return this.getRoot();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Reference;\n}(Query);\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\n\n\nQuery.__referenceConstructor = Reference;\nsyncPointSetReferenceConstructor(Reference);\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\n\nvar FirebaseAuthTokenProvider =\n/** @class */\nfunction () {\n  function FirebaseAuthTokenProvider(app_, authProvider_) {\n    var _this = this;\n\n    this.app_ = app_;\n    this.authProvider_ = authProvider_;\n    this.auth_ = null;\n    this.auth_ = authProvider_.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth_) {\n      authProvider_.get().then(function (auth) {\n        return _this.auth_ = auth;\n      });\n    }\n  }\n\n  FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\n    if (!this.auth_) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(function (error) {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      setTimeout(function () {\n        return listener(null);\n      }, 0);\n      this.authProvider_.get().then(function (auth) {\n        return auth.addAuthTokenListener(listener);\n      });\n    }\n  };\n\n  FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n    this.authProvider_.get().then(function (auth) {\n      return auth.removeAuthTokenListener(listener);\n    });\n  };\n\n  FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\n    var errorMessage = 'Provided authentication credentials for the app named \"' + this.app_.name + '\" are invalid. This usually indicates your app was not ' + 'initialized correctly. ';\n\n    if ('credential' in this.app_.options) {\n      errorMessage += 'Make sure the \"credential\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else if ('serviceAccount' in this.app_.options) {\n      errorMessage += 'Make sure the \"serviceAccount\" property provided to initializeApp() ' + 'is authorized to access the specified \"databaseURL\" and is from the correct ' + 'project.';\n    } else {\n      errorMessage += 'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' + 'initializeApp() match the values provided for your app at ' + 'https://console.firebase.google.com/.';\n    }\n\n    warn(errorMessage);\n  };\n\n  return FirebaseAuthTokenProvider;\n}();\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\n\n\nvar EmulatorAdminTokenProvider =\n/** @class */\nfunction () {\n  function EmulatorAdminTokenProvider() {}\n\n  EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\n    return Promise.resolve({\n      accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\n    });\n  };\n\n  EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\n  };\n\n  EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) {};\n\n  EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () {};\n\n  EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\n  return EmulatorAdminTokenProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\n\n\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n/**\r\n * Creates and caches Repo instances.\r\n */\n\nvar repos = {};\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\n\nvar useRestClient = false;\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\n\nfunction repoManagerApplyEmulatorSettings(repo, host, port) {\n  repo.repoInfo_ = new RepoInfo(host + \":\" + port,\n  /* secure= */\n  false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\n\n  if (repo.repoInfo_.nodeAdmin) {\n    repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\n  }\n}\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n */\n\n\nfunction repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin) {\n  var dbUrl = url || app.options.databaseURL;\n\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\"Can't determine Firebase Database URL. Be sure to include \" + ' a Project ID when calling firebase.initializeApp().');\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\n  }\n\n  var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  var repoInfo = parsedUrl.repoInfo;\n  var isEmulator;\n  var dbEmulatorHost = undefined;\n\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  var authTokenProvider = nodeAdmin && isEmulator ? new EmulatorAdminTokenProvider() : new FirebaseAuthTokenProvider(app, authProvider);\n  validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal('Database URL must point to the root of a Firebase Database ' + '(not including a child path).');\n  }\n\n  var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider);\n  return repoGetDatabase(repo);\n}\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\n\n\nfunction repoManagerDeleteRepo(repo) {\n  var appRepos = safeGet(repos, repo.app.name); // This should never happen...\n\n  if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\n    fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n  }\n\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo The metadata about the Repo\r\n * @return The Repo object for the specified server / repoName.\r\n */\n\n\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider) {\n  var appRepos = safeGet(repos, app.name);\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  var repo = safeGet(appRepos, repoInfo.toURLString());\n\n  if (repo) {\n    fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n  }\n\n  repo = new Repo(repoInfo, useRestClient, app, authTokenProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n  return repo;\n}\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\n\n\nfunction repoManagerForceRestClient(forceRestClient) {\n  useRestClient = forceRestClient;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Class representing a firebase database.\r\n */\n\n\nvar Database =\n/** @class */\nfunction () {\n  /**\r\n   * The constructor should not be called by users of our public API.\r\n   */\n  function Database(repoInternal_) {\n    var _this = this;\n\n    this.repoInternal_ = repoInternal_;\n    /** Track if the instance has been used (root or repo accessed) */\n\n    this.instanceStarted_ = false;\n    this.INTERNAL = {\n      delete: function _delete() {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            this.checkDeleted_('delete');\n            repoManagerDeleteRepo(this.repo_);\n            this.repoInternal_ = null;\n            this.rootInternal_ = null;\n            return [2\n            /*return*/\n            ];\n          });\n        });\n      }\n    };\n\n    if (!(repoInternal_ instanceof Repo)) {\n      fatal(\"Don't call new Database() directly - please use firebase.database().\");\n    }\n  }\n\n  Object.defineProperty(Database.prototype, \"repo_\", {\n    get: function get() {\n      if (!this.instanceStarted_) {\n        repoStart(this.repoInternal_);\n        this.instanceStarted_ = true;\n      }\n\n      return this.repoInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"root_\", {\n    get: function get() {\n      if (!this.rootInternal_) {\n        this.rootInternal_ = new Reference(this.repo_, newEmptyPath());\n      }\n\n      return this.rootInternal_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Database.prototype, \"app\", {\n    get: function get() {\n      return this.repo_.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Modify this instance to communicate with the Realtime Database emulator.\r\n   *\r\n   * <p>Note: This method must be called before performing any other operation.\r\n   *\r\n   * @param host the emulator host (ex: localhost)\r\n   * @param port the emulator port (ex: 8080)\r\n   */\n\n  Database.prototype.useEmulator = function (host, port) {\n    this.checkDeleted_('useEmulator');\n\n    if (this.instanceStarted_) {\n      fatal('Cannot call useEmulator() after instance has already been initialized.');\n      return;\n    } // Modify the repo to apply emulator settings\n\n\n    repoManagerApplyEmulatorSettings(this.repoInternal_, host, port);\n  };\n\n  Database.prototype.ref = function (path) {\n    this.checkDeleted_('ref');\n    validateArgCount('database.ref', 0, 1, arguments.length);\n\n    if (path instanceof Reference) {\n      return this.refFromURL(path.toString());\n    }\n\n    return path !== undefined ? this.root_.child(path) : this.root_;\n  };\n  /**\r\n   * Returns a reference to the root or the path specified in url.\r\n   * We throw a exception if the url is not in the same domain as the\r\n   * current repo.\r\n   * @return Firebase reference.\r\n   */\n\n\n  Database.prototype.refFromURL = function (url) {\n    /** @const {string} */\n    var apiName = 'database.refFromURL';\n    this.checkDeleted_(apiName);\n    validateArgCount(apiName, 1, 1, arguments.length);\n    var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\n    validateUrl(apiName, 1, parsedURL);\n    var repoInfo = parsedURL.repoInfo;\n\n    if (!this.repo_.repoInfo_.isCustomHost() && repoInfo.host !== this.repo_.repoInfo_.host) {\n      fatal(apiName + ': Host name does not match the current database: ' + '(found ' + repoInfo.host + ' but expected ' + this.repo_.repoInfo_.host + ')');\n    }\n\n    return this.ref(parsedURL.path.toString());\n  };\n\n  Database.prototype.checkDeleted_ = function (apiName) {\n    if (this.repoInternal_ === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }; // Make individual repo go offline.\n\n\n  Database.prototype.goOffline = function () {\n    validateArgCount('database.goOffline', 0, 0, arguments.length);\n    this.checkDeleted_('goOffline');\n    repoInterrupt(this.repo_);\n  };\n\n  Database.prototype.goOnline = function () {\n    validateArgCount('database.goOnline', 0, 0, arguments.length);\n    this.checkDeleted_('goOnline');\n    repoResume(this.repo_);\n  };\n\n  Database.ServerValue = {\n    TIMESTAMP: {\n      '.sv': 'timestamp'\n    },\n    increment: function increment(delta) {\n      return {\n        '.sv': {\n          'increment': delta\n        }\n      };\n    }\n  };\n  return Database;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\n\n\nvar forceLongPolling = function forceLongPolling() {\n  WebSocketConnection.forceDisallow();\n  BrowserPollConnection.forceAllow();\n};\n\nvar forceWebSockets = function forceWebSockets() {\n  BrowserPollConnection.forceDisallow();\n};\n/* Used by App Manager */\n\n\nvar isWebSocketsAvailable = function isWebSocketsAvailable() {\n  return WebSocketConnection['isAvailable']();\n};\n\nvar setSecurityDebugCallback = function setSecurityDebugCallback(ref, callback) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref.repo.persistentConnection_.securityDebugCallback_ = callback;\n};\n\nvar stats = function stats(ref, showDelta) {\n  repoStats(ref.repo, showDelta);\n};\n\nvar statsIncrementCounter = function statsIncrementCounter(ref, metric) {\n  repoStatsIncrementCounter(ref.repo, metric);\n};\n\nvar dataUpdateCount = function dataUpdateCount(ref) {\n  return ref.repo.dataUpdateCount;\n};\n\nvar interceptServerData = function interceptServerData(ref, callback) {\n  return repoInterceptServerData(ref.repo, callback);\n};\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\n\n\nfunction initStandalone(_a) {\n  var app = _a.app,\n      url = _a.url,\n      version = _a.version,\n      customAuthImpl = _a.customAuthImpl,\n      namespace = _a.namespace,\n      _b = _a.nodeAdmin,\n      nodeAdmin = _b === void 0 ? false : _b;\n  setSDKVersion(version);\n  /**\r\n   * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n   * any actual function.\r\n   */\n\n  var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\n  authProvider.setComponent(new Component('auth-internal', function () {\n    return customAuthImpl;\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n  return {\n    instance: repoManagerDatabaseFromApp(app, authProvider, url, nodeAdmin),\n    namespace: namespace\n  };\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DataConnection = PersistentConnection; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\n  this.sendRequest('q', {\n    p: pathString\n  }, onComplete);\n}; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nPersistentConnection.prototype.echo = function (data, onEcho) {\n  this.sendRequest('echo', {\n    d: data\n  }, onEcho);\n}; // RealTimeConnection properties that we use in tests.\n\n\nvar RealTimeConnection = Connection;\n\nvar hijackHash = function hijackHash(newHash) {\n  var oldPut = PersistentConnection.prototype.put;\n\n  PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nvar ConnectionTarget = RepoInfo;\n\nvar queryIdentifier = function queryIdentifier(query) {\n  return query.queryIdentifier();\n};\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\n\n\nvar forceRestClient = function forceRestClient(_forceRestClient) {\n  repoManagerForceRestClient(_forceRestClient);\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\nvar name = \"@firebase/database\";\nvar version = \"0.9.6\";\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ServerValue = Database.ServerValue;\n\nfunction registerDatabase(instance) {\n  // set SDK_VERSION\n  setSDKVersion(instance.SDK_VERSION); // Register the Database Service with the 'firebase' namespace.\n\n  var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\n    var url = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    return repoManagerDatabaseFromApp(app, authProvider, url, undefined);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps( // firebase.database namespace properties\n  {\n    Reference: Reference,\n    Query: Query,\n    Database: Database,\n    DataSnapshot: DataSnapshot,\n    enableLogging: enableLogging,\n    INTERNAL: INTERNAL,\n    ServerValue: ServerValue,\n    TEST_ACCESS: TEST_ACCESS\n  }).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n\n  if (isNodeSdk()) {\n    module.exports = namespace;\n  }\n}\n\nregisterDatabase(firebase);\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };"],"sourceRoot":""}